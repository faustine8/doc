import{_ as n,c as s}from"./app.40df414d.js";var a="/doc/assets/Spring-1618841717250.f98e8750.png",t="/doc/assets/Spring-1619158791216.5ce2a464.png",p="/doc/assets/Spring-1619158901610.7395dc3a.png",e="/doc/assets/Spring-1619163775451.8cacf207.png";const o={},c=s('<h1 id="spring" tabindex="-1"><a class="header-anchor" href="#spring" aria-hidden="true">#</a> Spring</h1><h2 id="spring-ioc-\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#spring-ioc-\u5E94\u7528" aria-hidden="true">#</a> Spring IOC \u5E94\u7528</h2><h3 id="\u7B2C\u4E00\u8282-spring-ioc-\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u8282-spring-ioc-\u57FA\u7840" aria-hidden="true">#</a> \u7B2C\u4E00\u8282 Spring IOC \u57FA\u7840</h3><h4 id="_1-1-beanfactory\u4E0Eapplicationcontext\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_1-1-beanfactory\u4E0Eapplicationcontext\u533A\u522B" aria-hidden="true">#</a> 1.1 BeanFactory\u4E0EApplicationContext\u533A\u522B</h4><p><code>BeanFactory</code> \u662FSpring\u6846\u67B6\u4E2DIoC\u5BB9\u5668\u7684\u9876\u5C42\u63A5\u53E3,\u5B83\u53EA\u662F\u7528\u6765\u5B9A\u4E49\u4E00\u4E9B\u57FA\u7840\u529F\u80FD,\u5B9A\u4E49\u4E00\u4E9B\u57FA\u7840\u89C4\u8303\u3002 \u800C <code>ApplicationContext</code> \u662F\u5B83\u7684\u4E00\u4E2A\u5B50\u63A5\u53E3\uFF0C\u6240\u4EE5 <code>ApplicationContext</code> \u662F\u5177\u5907 <code>BeanFactory</code> \u63D0\u4F9B\u7684\u5168\u90E8\u529F\u80FD\u7684\u3002<br> \u901A\u5E38\uFF0C\u6211\u4EEC\u79F0 <code>BeanFactory</code> \u4E3A Spring IOC \u7684\u57FA\u7840\u5BB9\u5668\uFF0C<code>ApplicationContext</code> \u662F\u5BB9\u5668\u7684\u9AD8\u7EA7\u63A5\u53E3\uFF0C\u6BD4 BeanFactory\u8981\u62E5\u6709\u66F4\u591A\u7684\u529F\u80FD\uFF0C \u6BD4\u5982\u8BF4\u56FD\u9645\u5316\u652F\u6301\u548C\u8D44\u6E90\u8BBF\u95EE(xml\uFF0Cjava\u914D\u7F6E\u7C7B) \u7B49\u7B49\u3002</p><p><img src="'+a+`" alt="BeanFactory\u7ED3\u6784\u6811.png"></p><h4 id="_1-2-xml-\u6A21\u5F0F\u5F00\u53D1" tabindex="-1"><a class="header-anchor" href="#_1-2-xml-\u6A21\u5F0F\u5F00\u53D1" aria-hidden="true">#</a> 1.2 XML \u6A21\u5F0F\u5F00\u53D1</h4><p>\u5F15\u5165 Spring \u6240\u9700\u7684\u57FA\u7840\u4F9D\u8D56</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.12.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>applicationContext.xml</code> \u914D\u7F6E\u6587\u4EF6\u5934</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>xmlns : xml namespace \u7B80\u79F0\u3002</p><p>\u5728\u547D\u540D\u7A7A\u95F4\u540E\uFF0C\u53EF\u4EE5\u4E3A\u6807\u7B7E\u6DFB\u52A0\u524D\u7F00\u3002 \u5982\uFF1A <code>xmlns:aop</code>\u3002\u4F7F\u7528\u8BE5\u547D\u540D\u7A7A\u95F4\u6240\u5B9A\u4E49\u7684\u6807\u7B7E\u65F6\uFF0C\u4E5F\u9700\u8981\u6DFB\u52A0\u524D\u7F00\uFF0C\u5982\uFF1A<code>&lt;aop:config ... /&gt;</code></p></blockquote><p>JAVA SE \u65B9\u5F0F\uFF1A\u6DFB\u52A0\u52A0\u8F7D\u5BB9\u5668\u6D4B\u8BD5\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test101</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u901A\u8FC7\u8BFB\u53D6 classpath \u4E0B\u7684 xml \u6587\u4EF6\u6765\u542F\u52A8\u5BB9\u5668</span>
    <span class="token class-name">ApplicationContext</span> applicationContext<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">AccountDao</span> accountDao<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">AccountDao</span><span class="token punctuation">)</span>applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;accountDao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>accountDao<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6B64\u65F6\u5E94\u8BE5\u53EF\u4EE5\u6210\u529F\u83B7\u53D6 <code>accountDao</code> Bean\u3002</p><p>JAVA WEB \u65B9\u5F0F\uFF1A</p><p>\u8FD8\u9700\u8981\u5148\u6DFB\u52A0 <code>spring-web</code> \u4F9D\u8D56</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.12.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728 WEB-INF \u6587\u4EF6\u5939\u4E2D\u7684 web.xml \u6587\u4EF6\u4E2D\u6DFB\u52A0\u52A0\u8F7D <code>ApplicationContext</code> \u7684\u914D\u7F6E\u4FE1\u606F</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--    2.\u914D\u7F6E Spring IOC \u5BB9\u5668\u7684\u914D\u7F6E\u6587\u4EF6  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!--  1.\u4F7F\u7528\u76D1\u542C\u5668\u542F\u52A8 Spring IOC \u5BB9\u5668  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>\u4E09\u5927\u7EC4\u4EF6\u751F\u547D\u5468\u671F:</p><p>Listener\uFF1A\u4E00\u76F4\u4ECE\u7A0B\u5E8F\u542F\u52A8\u5230\u7A0B\u5E8F\u505C\u6B62\u8FD0\u884C\u3002</p><p>Filter\uFF1A\u7A0B\u5E8F\u542F\u52A8\u8C03\u7528Filter\u7684init()\u65B9\u6CD5(\u6C38\u8FDC\u53EA\u8C03\u7528\u4E00\u6B21)\uFF0C\u7A0B\u5E8F\u505C\u6B62\u8C03\u7528Filter\u7684destroy()\u65B9\u6CD5(\u6C38\u8FDC\u53EA\u8C03\u7528\u4E00\u6B21)\uFF0CdoFilter()\u65B9\u6CD5\u6BCF\u6B21\u7684\u8BBF\u95EE\u8BF7\u6C42\u5982\u679C\u7B26\u5408\u62E6\u622A\u6761\u4EF6\u90FD\u4F1A\u8C03\u7528</p><p>Servlet\uFF1A\u7A0B\u5E8F\u7B2C\u4E00\u6B21\u8BBF\u95EE\uFF0C\u4F1A\u8C03\u7528servlet\u7684init()\u65B9\u6CD5\u521D\u59CB\u5316(\u53EA\u6267\u884C\u4E00\u6B21)\uFF0C\u6BCF\u6B21\u7A0B\u5E8F\u6267\u884C\u90FD\u4F1A\u6839\u636E\u8BF7\u6C42\u8C03\u7528doGet()\u6216\u8005doPost()\u65B9\u6CD5\uFF0C\u7A0B\u5E8F\u505C\u6B62\u8C03\u7528destroy()\u65B9\u6CD5\u3002</p></blockquote><blockquote><p>web.xml\u4E2Dload-on-startup\u7684\u4F5C\u7528</p><p>\u5982\u679C\u503C\u4E3A\u6B63\u6574\u6570\u6216\u80050\u65F6\uFF0C\u8868\u793A\u5BB9\u5668\u5728\u5E94\u7528\u542F\u52A8\u65F6\u5C31\u52A0\u8F7D\u5E76\u521D\u59CB\u5316\u8FD9\u4E2Aservlet\uFF0C\u503C\u8D8A\u5C0F\uFF0Cservlet\u7684\u4F18\u5148\u7EA7\u8D8A\u9AD8\uFF0C\u5C31\u8D8A\u5148\u88AB\u52A0\u8F7D\u3002\u503C\u76F8\u540C\u65F6\uFF0C\u5BB9\u5668\u5C31\u4F1A\u81EA\u5DF1\u9009\u62E9\u987A\u5E8F\u6765\u52A0\u8F7D\u3002</p></blockquote><p>\u6B64\u65F6\uFF0C\u5728\u5BB9\u5668\u542F\u52A8\u65F6\uFF0CSpring \u4F1A\u5C06 Bean \u6DFB\u52A0\u5230\u5BB9\u5668\u4E2D\u3002<br> \u5728 Servlet \u4E2D\u901A\u8FC7 Spring \u63D0\u4F9B\u7684\u5DE5\u5177\u7C7B <code>WebApplicationContextUtils</code> \u5373\u53EF\u83B7\u53D6\u5BB9\u5668\u4E2D\u7684 Bean</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
    <span class="token class-name">WebApplicationContext</span> webApplicationContext <span class="token operator">=</span> <span class="token class-name">WebApplicationContextUtils</span><span class="token punctuation">.</span><span class="token function">getWebApplicationContext</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    proxyFactory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ProxyFactory</span><span class="token punctuation">)</span> webApplicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;proxyFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transferService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TransferService</span><span class="token punctuation">)</span> proxyFactory<span class="token punctuation">.</span><span class="token function">getJdkProxy</span><span class="token punctuation">(</span>webApplicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;transferService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="_1-2-1-\u5B9E\u4F8B\u5316-bean-\u7684\u4E09\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-2-1-\u5B9E\u4F8B\u5316-bean-\u7684\u4E09\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> 1.2.1 \u5B9E\u4F8B\u5316 Bean \u7684\u4E09\u79CD\u65B9\u5F0F</h5><p>\u4F7F\u7528\u65E0\u53C2\u6784\u9020\u5668</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectionUtils<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.utils.ConnectionUtils<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u9759\u6001\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreateBeanFactory</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ConnectionUtils</span> <span class="token function">getInstanceStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectionUtils<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.factory.CreateBeanFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getInstanceStatic<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5B9E\u4F8B\u5316\u65B9\u6CD5</p><blockquote><p>\u4F7F\u7528\u5B9E\u4F8B\u5316\u65B9\u6CD5, \u4E0E\u9759\u6001\u65B9\u6CD5\u552F\u4E00\u7684\u4E0D\u540C\u5C31\u662F\u65B9\u6CD5\u662F\u975E\u9759\u6001\u7684\uFF0C\u6240\u4EE5\u5B9E\u4F8B\u5316 <code>Bean</code> \u65F6\uFF0C\u9700\u8981\u5148\u521B\u5EFA\u5DE5\u5382\u7C7B\u7684\u5B9E\u4F8B\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConnectionUtils</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBeanFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.factory.CreateBeanFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectionUtils<span class="token punctuation">&quot;</span></span> <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createBeanFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getInstance<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u5E38\u7528\u7B2C\u4E00\u79CD\u65B9\u5F0F\u3002 \u7B2C\u4E8C\u3001\u4E09\u79CD\u65B9\u5F0F\u53EA\u6709\u5728\u901A\u8FC7 <code>XML</code> \u65B9\u5F0F\u914D\u7F6E\u8D77\u6765\u975E\u5E38\u9EBB\u70E6\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u8003\u8651\u901A\u8FC7 <code>JAVA</code> \u4EE3\u7801\u914D\u7F6E\u597D\u3002</p></blockquote><h5 id="_1-2-2-bean-\u7684\u4F5C\u7528\u8303\u56F4\u548C\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#_1-2-2-bean-\u7684\u4F5C\u7528\u8303\u56F4\u548C\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> 1.2.2 Bean \u7684\u4F5C\u7528\u8303\u56F4\u548C\u751F\u547D\u5468\u671F</h5><p>\u5728spring\u6846\u67B6\u7BA1\u7406Bean\u5BF9\u8C61\u7684\u521B\u5EFA\u65F6\uFF0CBean\u5BF9\u8C61\u9ED8\u8BA4\u90FD\u662F\u5355\u4F8B\u7684\uFF0C\u4F46\u662F\u5B83\u652F\u6301\u914D\u7F6E\u7684\u65B9\u5F0F\u6539\u53D8\u4F5C\u7528\u8303\u56F4\u3002<br> \u4F5C\u7528\u8303\u56F4\u5B98\u65B9\u63D0\u4F9B\u7684\u8BF4\u660E\u5982\u4E0B\u8868:</p><table><thead><tr><th>Scope</th><th>Description</th></tr></thead><tbody><tr><td>singleton</td><td>(Default) Scopes a single bean definition to a single object instance for each Spring IoC container.</td></tr><tr><td>prototype</td><td>Scopes a single bean definition to any number of object instances.</td></tr><tr><td>request</td><td>Scopes a single bean definition to the lifecycle of a single HTTP request. That is, each HTTP request has its own instance of a bean created off the back of a single bean definition. Only valid in the context of a web-aware Spring ApplicationContext.</td></tr><tr><td>session</td><td>Scopes a single bean definition to the lifecycle of an HTTP Session. Only valid in the context of a web-aware Spring ApplicationContext.</td></tr><tr><td>application</td><td>Scopes a single bean definition to the lifecycle of a ServletContext. Only valid in the context of a web-aware Spring ApplicationContext.</td></tr><tr><td>websocket</td><td>Scopes a single bean definition to the lifecycle of a WebSocket. Only valid in the context of a web-aware Spring ApplicationContext.</td></tr></tbody></table><p>singleton: \u5355\u4F8B\uFF0CIOC\u5BB9\u5668\u4E2D\u53EA\u6709\u4E00\u4E2A\u8BE5\u7C7B\u5BF9\u8C61\u3002<br> prototype: \u539F\u578B\uFF0C\u6BCF\u6B21\u4F7F\u7528\u8BE5\u7C7B\u7684\u5BF9\u8C61\uFF08\u5373\u8C03\u7528 <code>getBean</code> \u65B9\u6CD5\uFF09\uFF0C\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</p><blockquote><p>\u5B9E\u9645\u5F00\u53D1\u4E2D\u7528\u5230\u6700\u591A\u7684\u4F5C\u7528\u8303\u56F4\u5C31\u662F <code>singleton</code> (\u5355\u4F8B\u6A21\u5F0F), \u5C11\u6709 <code>prototype</code> (\u539F\u578B\u6A21\u5F0F\uFF0C\u4E5F\u53EB\u591A\u4F8B\u6A21\u5F0F), \u5176\u4ED6\u5C31\u66F4\u5C11\u4E86\u3002</p></blockquote><p><strong>\u4E0D\u540C\u4F5C\u7528\u8303\u56F4\u7684\u751F\u547D\u5468\u671F</strong></p><ul><li>\u5355\u4F8B\u6A21\u5F0F: singleton<br> \u5BF9\u8C61\u51FA\u751F:\u5F53\u521B\u5EFA\u5BB9\u5668\u65F6\uFF0C\u5BF9\u8C61\u5C31\u88AB\u521B\u5EFA\u4E86\u3002<br> \u5BF9\u8C61\u6D3B\u7740:\u53EA\u8981\u5BB9\u5668\u5728\uFF0C\u5BF9\u8C61\u4E00\u76F4\u6D3B\u7740\u3002<br> \u5BF9\u8C61\u6B7B\u4EA1:\u5F53\u9500\u6BC1\u5BB9\u5668\u65F6\uFF0C\u5BF9\u8C61\u5C31\u88AB\u9500\u6BC1\u4E86\u3002</li></ul><blockquote><p>\u4E00\u53E5\u8BDD\u603B\u7ED3:\u5355\u4F8B\u6A21\u5F0F\u7684bean\u5BF9\u8C61\u751F\u547D\u5468\u671F\u4E0E\u5BB9\u5668\u76F8\u540C\u3002</p></blockquote><ul><li>\u591A\u4F8B\u6A21\u5F0F: prototype<br> \u5BF9\u8C61\u51FA\u751F:\u5F53\u4F7F\u7528\u5BF9\u8C61\u65F6\uFF0C\u521B\u5EFA\u65B0\u7684\u5BF9\u8C61\u5B9E\u4F8B\u3002<br> \u5BF9\u8C61\u6D3B\u7740:\u53EA\u8981\u5BF9\u8C61\u5728\u4F7F\u7528\u4E2D\uFF0C\u5C31\u4E00\u76F4\u6D3B\u7740\u3002<br> \u5BF9\u8C61\u6B7B\u4EA1:\u5F53\u5BF9\u8C61\u2ED3\u65F6\u95F4\u4E0D\u7528\u65F6\uFF0C\u88ABjava\u7684\u5783\u573E\u56DE\u6536\u5668\u56DE\u6536\u4E86\u3002</li></ul><blockquote><p>\u4E00\u53E5\u8BDD\u603B\u7ED3:\u591A\u4F8B\u6A21\u5F0F\u7684bean\u5BF9\u8C61\uFF0Cspring\u6846\u67B6\u53EA\u8D1F\u8D23\u521B\u5EFA\uFF0C\u4E0D\u8D1F\u8D23\u9500\u6BC1\u3002</p></blockquote><h5 id="_1-2-3-bean-\u6807\u7B7E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_1-2-3-bean-\u6807\u7B7E\u5C5E\u6027" aria-hidden="true">#</a> 1.2.3 Bean \u6807\u7B7E\u5C5E\u6027</h5><p>\u5728\u57FA\u4E8Exml\u7684IoC\u914D\u7F6E\u4E2D\uFF0Cbean\u6807\u7B7E\u662F\u6700\u57FA\u7840\u7684\u6807\u7B7E\u3002\u5B83\u8868\u793A\u4E86IoC\u5BB9\u5668\u4E2D\u7684\u4E00\u4E2A\u5BF9\u8C61\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF0C\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u60F3\u8BA9spring\u7BA1\u7406\uFF0C\u5728XML\u7684\u914D\u7F6E\u4E2D\u90FD\u9700\u8981\u4F7F\u7528\u6B64\u6807\u7B7E\u914D\u7F6E\uFF0CBean\u6807\u7B7E\u7684\u5C5E\u6027\u5982\u4E0B:</p><table><thead><tr><th>\u5C5E\u6027</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>id</td><td>\u7528\u4E8E\u7ED9bean\u63D0\u4F9B\u4E00\u4E2A\u552F\u4E00\u6807\u8BC6\u3002\u5728\u4E00\u4E2A\u6807\u7B7E\u5185\u90E8\uFF0C\u6807\u8BC6\u5FC5\u987B\u552F\u4E00\u3002</td></tr><tr><td>class</td><td>\u7528\u4E8E\u6307\u5B9A\u521B\u5EFABean\u5BF9\u8C61\u7684\u5168\u9650\u5B9A\u7C7B\u540D\u3002</td></tr><tr><td>name</td><td>\u7528\u4E8E\u7ED9bean\u63D0\u4F9B\u4E00\u4E2A\u6216\u591A\u4E2A\u540D\u79F0\u3002\u591A\u4E2A\u540D\u79F0\u7528\u7A7A\u683C\u5206\u9694\u3002</td></tr><tr><td>factory-bean</td><td>\u7528\u4E8E\u6307\u5B9A\u521B\u5EFA\u5F53\u524Dbean\u5BF9\u8C61\u7684\u5DE5\u5382bean\u7684\u552F\u4E00\u6807\u8BC6\u3002\u5F53\u6307\u5B9A\u4E86\u6B64\u5C5E\u6027\u4E4B\u540E\uFF0C class\u5C5E\u6027\u5931\u6548\u3002</td></tr><tr><td>factory-method</td><td>\u7528\u4E8E\u6307\u5B9A\u521B\u5EFA\u5F53\u524Dbean\u5BF9\u8C61\u7684\u5DE5\u5382\u65B9\u6CD5\uFF0C\u5982\u914D\u5408factory-bean\u5C5E\u6027\u4F7F\u7528\uFF0C \u5219class\u5C5E\u6027\u5931\u6548\u3002\u5982\u914D\u5408class\u5C5E\u6027\u4F7F\u7528\uFF0C\u5219\u65B9\u6CD5\u5FC5\u987B\u662Fstatic\u7684\u3002</td></tr><tr><td>scope</td><td>\u7528\u4E8E\u6307\u5B9Abean\u5BF9\u8C61\u7684\u4F5C\u7528\u8303\u56F4\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\u5C31\u662Fsingleton\u3002\u5F53\u8981\u7528\u5230\u591A\u4F8B\u6A21\u5F0F\u65F6\uFF0C\u53EF\u4EE5\u914D\u7F6E\u4E3Aprototype\u3002</td></tr><tr><td>init-method</td><td>\u7528\u4E8E\u6307\u5B9Abean\u5BF9\u8C61\u7684\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u6B64\u65B9\u6CD5\u4F1A\u5728bean\u5BF9\u8C61\u88C5\u914D\u540E\u8C03\u7528\u3002\u5FC5\u987B\u662F\u4E00\u4E2A\u65E0\u53C2\u65B9\u6CD5\u3002</td></tr><tr><td>destroy-method</td><td>\u7528\u4E8E\u6307\u5B9Abean\u5BF9\u8C61\u7684\u9500\u6BC1\u65B9\u6CD5\uFF0C\u6B64\u65B9\u6CD5\u4F1A\u5728bean\u5BF9\u8C61\u9500\u6BC1\u524D\u6267\u884C\u3002\u5B83\u53EA\u80FD\u4E3Ascope\u662Fsingleton\u65F6\u8D77\u4F5C\u7528\u3002</td></tr></tbody></table><h5 id="_1-2-4-di-\u4F9D\u8D56\u6CE8\u5165\u7684-xml-\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_1-2-4-di-\u4F9D\u8D56\u6CE8\u5165\u7684-xml-\u914D\u7F6E" aria-hidden="true">#</a> 1.2.4 DI \u4F9D\u8D56\u6CE8\u5165\u7684 XML \u914D\u7F6E</h5><p><strong>\u4F9D\u8D56\u6CE8\u5165\u5206\u7C7B</strong></p><p>\u6309\u7167\u6CE8\u5165\u7684\u65B9\u5F0F\u5206\u7C7B</p><ul><li>set\u65B9\u6CD5\u6CE8\u5165: \u5B83\u662F\u901A\u8FC7\u7C7B\u6210\u5458\u7684set\u65B9\u6CD5\u5B9E\u73B0\u6570\u636E\u7684\u6CE8\u5165\u3002(\u4F7F\u7528\u6700\u591A\u7684)</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAccountDao</span><span class="token punctuation">(</span><span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>accountDao <span class="token operator">=</span> accountDao<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transferService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.service.impl.TransferServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AccountDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p><code>ref</code> \u5C5E\u6027\u7528\u4E8E\u4F20\u9012 Bean\uFF0C\u5982\u679C\u9700\u8981\u4F20\u9012\u5176\u4ED6\u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>value</code> \u5C5E\u6027</p></blockquote><ul><li>\u6784\u9020\u51FD\u6570\u6CE8\u5165: \u987E\u540D\u601D\u4E49\uFF0C\u5C31\u662F\u5229\u7528\u5E26\u53C2\u6784\u9020\u51FD\u6570\u5B9E\u73B0\u5BF9\u7C7B\u6210\u5458\u7684\u6570\u636E\u8D4B\u503C\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">TransferServiceImpl</span><span class="token punctuation">(</span><span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>accountDao <span class="token operator">=</span> accountDao<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transferService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.service.impl.TransferServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>accountDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p><code>constructor-arg</code> \u6807\u7B7E\u8FD8\u53EF\u4EE5\u901A\u8FC7 <code>index</code> \u5C5E\u6027\u4F20\u9012\u53C2\u6570\uFF0C\u4E0D\u8FC7\u4E0D\u65B9\u4FBF\u3002</p></blockquote><p>\u6309\u7167\u6CE8\u5165\u7684\u6570\u636E\u7C7B\u578B\u5206\u7C7B</p><ul><li>\u57FA\u672C\u7C7B\u578B\u548CString \uFF1A\u6CE8\u5165\u7684\u6570\u636E\u7C7B\u578B\u662F\u57FA\u672C\u7C7B\u578B\u6216\u8005\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u6570\u636E\u3002</li><li>\u5176\u4ED6Bean\u7C7B\u578B \uFF1A\u6CE8\u5165\u7684\u6570\u636E\u7C7B\u578B\u662F\u5BF9\u8C61\u7C7B\u578B\u3002\u79F0\u4E3A\u5176\u4ED6Bean\u7684\u539F\u56E0\u662F\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u662F\u8981\u6C42\u51FA\u73B0\u5728IoC\u5BB9\u5668\u4E2D\u7684\u3002\u90A3\u4E48\u9488\u5BF9\u5F53\u524DBean\u6765\u8BF4\uFF0C\u5C31\u662F\u5176\u4ED6Bean\u4E86\u3002</li><li>\u590D\u6742\u7C7B\u578B(\u96C6\u5408\u7C7B\u578B) \uFF1A\u6CE8\u5165\u7684\u6570\u636E\u7C7B\u578B\u662F <code>Array</code>\uFF0C<code>List</code>\uFF0C<code>Set</code>\uFF0C<code>Map</code>\uFF0C<code>Properties</code> \u7B49\u7C7B\u578B\u3002\u3010\u5E94\u7528\u573A\u666F\u8F83\u5C11\u3011</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strArr<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Properties</span> prop<span class="token punctuation">;</span>

<span class="token comment">// \u7701\u7565 setter ...</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>strArr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>v1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>v2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>map<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>k1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>k2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>v2<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>set<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>v1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>v2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prop<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>props</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>k1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>v1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>k2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>v2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>props</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>\u5176\u4E2D <code>Array</code> \u548C <code>Set</code> \u90FD\u662F\u5355\u503C\u578B\u96C6\u5408\uFF0C\u6240\u4EE5\u5176\u5B9E\u53EF\u4EE5\u76F8\u4E92\u66FF\u6362\u3002<br> \u540C\u7406\uFF0C<code>Map</code> \u548C <code>Properties</code> \u90FD\u662F\u952E\u503C\u5BF9\u578B\u7684\u96C6\u5408\uFF0C\u6240\u4EE5\u4E5F\u53EF\u4EE5\u76F8\u4E92\u66FF\u6362\u3002</p></blockquote><h4 id="_1-3-xml-\u4E0E\u6CE8\u89E3\u76F8\u7ED3\u5408\u6A21\u5F0F\u5F00\u53D1" tabindex="-1"><a class="header-anchor" href="#_1-3-xml-\u4E0E\u6CE8\u89E3\u76F8\u7ED3\u5408\u6A21\u5F0F\u5F00\u53D1" aria-hidden="true">#</a> 1.3 XML \u4E0E\u6CE8\u89E3\u76F8\u7ED3\u5408\u6A21\u5F0F\u5F00\u53D1</h4><blockquote><p>\u6CE8\u610F\uFF1A<br> 1.\u5B9E\u9645\u4F01\u4E1A\u5F00\u53D1\u4E2D\uFF0C\u7EAFxml\u6A21\u5F0F\u4F7F\u7528\u5DF2\u7ECF\u5F88\u5C11\u4E86<br> 2.\u5F15\u5165\u6CE8\u89E3\u529F\u80FD\uFF0C\u4E0D\u9700\u8981\u5F15\u5165\u989D\u5916\u7684jar<br> 3.XML+\u6CE8\u89E3\u7ED3\u5408\u6A21\u5F0F\uFF0CXML \u6587\u4EF6\u4F9D\u7136\u5B58\u5728\uFF0C\u6240\u4EE5\uFF0Cspring IOC\u5BB9\u5668\u7684\u542F\u52A8\u4ECD\u7136\u4ECE\u52A0\u8F7D XML \u5F00\u59CB</p></blockquote><p><strong>\u54EA\u4E9Bbean\u7684\u5B9A\u4E49\u5199\u5728xml\u4E2D\uFF0C\u54EA\u4E9Bbean\u7684\u5B9A\u4E49\u4F7F\u7528\u6CE8\u89E3 \uFF1F</strong></p><p>\u7B2C\u4E09\u65B9jar\u4E2D\u7684bean\u5B9A\u4E49\u5728 XML \u4E2D(\u5982\u5FB7\u9C81\u4F0A\u6570\u636E\u5E93\u8FDE\u63A5\u6C60)\uFF0C\u81EA\u5DF1\u5F00\u53D1\u7684 <code>Bean</code> \u5B9A\u4E49\u4F7F\u7528\u6CE8\u89E3\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--  \u7B2C\u4E09\u65B9 Jar \u5B9A\u4E49\u5728 XML \u4E2D  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.alibaba.druid.pool.DruidDataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driverClassName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/bank<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1234567890<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong><code>XML</code>\u4E2D\u6807\u7B7E\u4E0E\u6CE8\u89E3\u5BF9\u7167(IoC)</strong></p><table><thead><tr><th>xml\u5F62\u5F0F</th><th>\u5BF9\u5E94\u7684\u6CE8\u89E3\u5F62\u5F0F</th></tr></thead><tbody><tr><td>\u6807\u7B7E</td><td><code>@Component(&quot;accountDao&quot;)</code>\uFF0C\u6CE8\u89E3\u52A0\u5728\u7C7B\u4E0A, <code>Bean</code> \u7684id\u5C5E\u6027\u5185\u5BB9\u76F4\u63A5\u914D\u7F6E\u5728\u6CE8\u89E3\u540E\u9762\uFF0C\u5982\u679C\u4E0D\u914D\u7F6E\u5219\u9ED8\u8BA4\u5B9A\u4E49\u4E2A\u8FD9\u4E2A <code>Bean</code> \u7684id\u4E3A\u7C7B\u540D\u9996\u5B57\u6BCD\u5C0F\u5199; \u53E6\u5916\uFF0C\u9488\u5BF9\u5206\u5C42\u4EE3\u7801\u5F00\u53D1\u63D0\u4F9B\u4E86 <code>@Componenet</code> \u7684\u4E09\u79CD\u522B\u540D <code>@Controller</code>\u3001 <code>@Service</code>\u3001<code>@Repository</code> \u5206\u522B\u7528\u4E8E\u63A7\u5236\u5C42\u7C7B\u3001\u670D\u52A1\u5C42\u7C7B\u3001dao\u5C42\u7C7B\u7684bean\u5B9A\u4E49\uFF0C\u8FD9\u56DB\u4E2A\u6CE8\u89E3\u7684\u7528\u6CD5\u5B8C\u5168\u4E00\u6837\uFF0C\u53EA\u662F\u4E3A\u4E86\u66F4\u6E05\u6670\u7684\u533A\u5206\u800C\u5DF2\u3002</td></tr><tr><td>\u6807\u7B7E\u7684 <code>scope</code> \u5C5E\u6027</td><td><code>@Scope(&quot;prototype&quot;)</code>\uFF0C\u9ED8\u8BA4\u5355\u4F8B\uFF0C\u6CE8\u89E3\u52A0\u5728\u7C7B\u4E0A</td></tr><tr><td>\u6807\u7B7E\u7684 <code>init-method</code> \u5C5E\u6027</td><td><code>@PostConstruct</code>\uFF0C\u6CE8\u89E3\u52A0\u5728\u65B9\u6CD5\u4E0A\uFF0C\u8BE5\u65B9\u6CD5\u5C31\u662F\u521D\u59CB\u5316\u540E\u8C03\u7528\u7684\u65B9\u6CD5</td></tr><tr><td>\u6807\u7B7E\u7684 <code>destroy-method</code> \u5C5E\u6027</td><td><code>@PreDestroy</code>\uFF0C\u6CE8\u89E3\u52A0\u5728\u65B9\u6CD5\u4E0A\uFF0C\u8BE5\u65B9\u6CD5\u5C31\u662F\u9500\u6BC1\u524D\u8C03\u7528\u7684\u65B9\u6CD5</td></tr></tbody></table><blockquote><p>\u81EA\u5DF1\u5F00\u53D1\u7684 Bean \u4F7F\u7528\u6CE8\u89E3\u65B9\u5F0F\uFF0C\u90FD\u5DF2\u7ECF\u5199\u4E86\u4E0A\u4E07\u6B21\u4E86\uFF0C\u5C31\u4E0D\u5728\u6B64\u505A\u6F14\u793A\u4E86\u3002</p></blockquote><p><strong>DI \u4F9D\u8D56\u6CE8\u5165\u7684\u6CE8\u89E3\u5B9E\u73B0</strong></p><ul><li><p>@Autowired(\u63A8\u8350\u4F7F\u7528)</p><p><code>@Autowired</code> \u4E3ASpring\u63D0\u4F9B\u7684\u6CE8\u89E3\uFF0C\u9700\u8981\u5BFC\u5165\u5305 org.springframework.beans.factory.annotation.Autowired\u3002<br><code>@Autowired</code> \u91C7\u53D6\u7684\u7B56\u7565\u4E3A\u6309\u7167 <em>\u7C7B\u578B</em> \u6CE8\u5165\u3002</p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5982\u679C\u4F7F\u7528 @Autowired \u6CE8\u89E3\uFF0C\u6700\u597D\u4F7F\u7528\u6784\u9020\u6CE8\u5165\u3010Spring \u63A8\u8350\u3011</span>
<span class="token keyword">private</span> <span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">public</span> <span class="token class-name">TransferServiceImpl</span><span class="token punctuation">(</span><span class="token class-name">AccountDao</span> accountDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>accountDao <span class="token operator">=</span> accountDao<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u5F53\u4E00\u4E2A\u7C7B\u578B\u6709\u591A\u4E2Abean\u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u9020\u6210\u65E0\u6CD5\u9009\u62E9\u5177\u4F53\u6CE8\u5165\u54EA\u4E00\u4E2A\u7684\u60C5\u51B5\uFF0C \u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u9700\u8981\u914D\u5408\u7740<code>@Qualifier</code>\u4F7F\u7528\u3002<br><code>@Qualifier</code>\u544A\u8BC9Spring\u5177\u4F53\u53BB\u88C5\u914D\u54EA\u4E2A\u5BF9\u8C61\u3002\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u5C31\u53EF\u4EE5\u901A\u8FC7\u7C7B\u578B\u548C\u540D\u79F0\u5B9A\u4F4D\u5230\u6211\u4EEC\u60F3\u6CE8\u5165\u7684\u5BF9\u8C61\u3002</p></blockquote><ul><li><p>@Resource</p><p><code>@Resource</code> \u6CE8\u89E3\u7531 J2EE \u63D0\u4F9B\uFF0C\u9700\u8981\u5BFC\u5165\u5305 javax.annotation.Resource\u3002<br><code>@Resource</code> \u9ED8\u8BA4\u6309\u7167 ByName \u81EA\u52A8\u6CE8\u5165\u3002</p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;connectionUtils&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ConnectionUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">ConnectionUtils</span> connectionUtils<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u5BF9\u4E8E <code>@Resource</code> :<br> \u5982\u679C\u540C\u65F6\u6307\u5B9A\u4E86 <code>name</code> \u548C <code>type</code>\uFF0C\u5219\u4ECESpring\u4E0A\u4E0B\u6587\u4E2D\u627E\u5230\u552F\u4E00\u5339\u914D\u7684bean\u8FDB\u884C\u88C5\u914D\uFF0C\u627E\u4E0D\u5230\u5219\u629B\u51FA\u5F02\u5E38\u3002<br> \u5982\u679C\u6307\u5B9A\u4E86 <code>name</code>\uFF0C\u5219\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u67E5\u627E\u540D\u79F0(id)\u5339\u914D\u7684bean\u8FDB\u884C\u88C5\u914D\uFF0C\u627E\u4E0D\u5230\u5219\u629B\u51FA\u5F02\u5E38\u3002<br> \u5982\u679C\u6307\u5B9A\u4E86 <code>type</code>\uFF0C\u5219\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u627E\u5230\u7C7B\u578B\u5339\u914D\u7684\u552F\u4E00bean\u8FDB\u884C\u88C5\u914D\uFF0C\u627E\u4E0D\u5230\u6216\u662F\u627E\u5230\u591A\u4E2A\uFF0C\u90FD\u4F1A\u629B\u51FA\u5F02\u5E38\u3002<br> \u5982\u679C\u65E2\u6CA1\u6709\u6307\u5B9A <code>name</code>\uFF0C\u53C8\u6CA1\u6709\u6307\u5B9A <code>type</code>\uFF0C\u5219\u81EA\u52A8\u6309\u7167 <code>byName</code> \u65B9\u5F0F\u8FDB\u884C\u88C5\u914D\u3002</p></blockquote><p><strong>\u6CE8\u610F:</strong></p><p><code>@Resource</code> \u5728 Jdk 11\u4E2D\u5DF2\u7ECF\u79FB\u9664\uFF0C\u5982\u679C\u8981\u4F7F\u7528\uFF0C\u9700\u8981\u5355\u72EC\u5F15\u5165jar\u5305\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.annotation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.annotation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u914D\u7F6E\u5B8C\u4F9D\u8D56\u5173\u7CFB\u540E\uFF0C\u8FD8\u9700\u8981\u914D\u7F6E\u6CE8\u89E3\u626B\u63CF\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_1-4-\u7EAF\u6CE8\u89E3\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-4-\u7EAF\u6CE8\u89E3\u6A21\u5F0F" aria-hidden="true">#</a> 1.4 \u7EAF\u6CE8\u89E3\u6A21\u5F0F</h4><p>\u6539\u9020xm+\u6CE8\u89E3\u6A21\u5F0F\uFF0C\u5C06xml\u4E2D\u9057\u7559\u7684\u5185\u5BB9\u5168\u90E8\u4EE5\u6CE8\u89E3\u7684\u5F62\u5F0F\u8FC1\u79FB\u51FA\u53BB\uFF0C\u6700\u7EC8\u5220\u9664xml\uFF0C\u4ECEJava\u914D\u7F6E\u7C7B\u542F\u52A8</p><p><strong>\u6CE8\u89E3\u5BF9\u7167</strong></p><table><thead><tr><th>\u6CE8\u89E3</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td><code>@Configuration</code></td><td>\u8868\u540D\u5F53\u524D\u7C7B\u662F\u4E00\u4E2A\u914D\u7F6E\u7C7B</td></tr><tr><td><code>@ComponentScan</code></td><td>\u66FF\u4EE3 <code>context:component-scan</code></td></tr><tr><td><code>@PropertySource</code></td><td>\u5F15\u5165\u5916\u90E8\u5C5E\u6027\u914D\u7F6E\u6587\u4EF6</td></tr><tr><td><code>@Import</code></td><td>\u5F15\u5165\u5176\u4ED6\u914D\u7F6E\u7C7B</td></tr><tr><td><code>@Value</code></td><td>\u5BF9\u53D8\u91CF\u8D4B\u503C\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8D4B\u503C\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>\${}</code> \u8BFB\u53D6\u8D44\u6E90\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684\u4FE1\u606F</td></tr><tr><td><code>@Bean</code></td><td>\u5C06\u65B9\u6CD5\u8FD4\u56DE\u5BF9\u8C61\u52A0\u5165 <code>Spring IOC</code> \u5BB9\u5668</td></tr></tbody></table><p><strong>\u6CE8\u610F</strong></p><p>\u5982\u679C\u662F WEB \u5E94\u7528\uFF0C\u8FD8\u9700\u8981\u5728 <code>web.xml</code> \u4E2D\u914D\u7F6E\u4F7F\u7528\u6CE8\u89E3\u7684\u65B9\u5F0F\u542F\u52A8\u5E94\u7528\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--  3.\u544A\u8BC9 ContextLoaderListener \u5F53\u524D\u4F7F\u7528\u6CE8\u89E3\u7684\u65B9\u5F0F\u542F\u52A8 IOC \u5BB9\u5668  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.support.AnnotationConfigWebApplicationContext<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--    2.\u914D\u7F6E Spring IOC \u5BB9\u5668\u7684\u914D\u7F6E\u6587\u4EF6  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>com.mujunlin.transfer.SpringConfig<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--  1.\u4F7F\u7528\u76D1\u542C\u5668\u542F\u52A8 Spring IOC \u5BB9\u5668  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u7B2C\u4E8C\u8282-spring-ioc-\u9AD8\u7EA7\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u8282-spring-ioc-\u9AD8\u7EA7\u7279\u6027" aria-hidden="true">#</a> \u7B2C\u4E8C\u8282 Spring IOC \u9AD8\u7EA7\u7279\u6027</h3><h4 id="_2-1-lazy-init-\u5EF6\u8FDF\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#_2-1-lazy-init-\u5EF6\u8FDF\u52A0\u8F7D" aria-hidden="true">#</a> 2.1 lazy-Init \u5EF6\u8FDF\u52A0\u8F7D</h4><p><code>ApplicationContext</code> \u5BB9\u5668\u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u5728\u542F\u52A8\u670D\u52A1\u5668\u65F6\u5C06\u6240\u6709 <code>Singleton</code> Bean\u63D0\u524D\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002 \u63D0\u524D\u5B9E\u4F8B\u5316\u610F\u5473\u7740\u4F5C\u4E3A\u521D\u59CB\u5316\u8FC7\u7A0B\u7684\u4E00\u90E8\u5206\uFF0C<code>ApplicationContext</code> \u5B9E\u4F8B\u4F1A\u521B\u5EFA\u5E76\u914D\u7F6E\u6240\u6709\u7684 <code>Singleton</code> Bean\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.mujunlin.LazyBean<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!--  \u4E0A\u9762\u7684 Bean \u5B9A\u4E49\u7B49\u4EF7\u4E8E\u5982\u4E0B Bean \u5B9A\u4E49  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">calss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.mujunlin.LazyBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lazy-init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>lazy-init=&quot;false&quot;</code> \uFF0C\u7ACB\u5373\u52A0\u8F7D\u3002\u8868\u793A\u5728spring\u542F\u52A8\u65F6\uFF0C\u7ACB\u523B\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002</p><p>\u5982\u679C\u4E0D\u60F3\u8BA9\u4E00\u4E2A <code>Singleton</code> Bean \u5728 <code>ApplicationContext</code> \u521D\u59CB\u5316\u65F6\u88AB\u63D0\u524D\u5B9E\u4F8B\u5316\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5C06 Bean \u8BBE\u7F6E\u4E3A\u5EF6\u8FDF\u5B9E\u4F8B\u5316\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">calss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.mujunlin.LazyBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">lazy-init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8BBE\u7F6E <code>lazy-init=&quot;true&quot;</code> \u7684 Bean \u5C06\u4E0D\u4F1A\u5728 <code>ApplicationContext</code> \u542F\u52A8\u65F6\u63D0\u524D\u88AB\u5B9E\u4F8B\u5316\uFF0C\u800C\u662F\u7B2C\u4E00\u6B21\u5411\u5BB9\u5668\u901A\u8FC7 <code>getBean</code> \u7D22\u53D6 Bean \u65F6\u5B9E\u4F8B\u5316\u3002</p><p><strong>\u6CE8\u610F</strong></p><ol><li><p>\u5982\u679C\u4E00\u4E2A\u8BBE\u7F6E\u4E86\u7ACB\u5373\u52A0\u8F7D\u7684 bean1\uFF0C\u5F15\u7528\u4E86\u4E00\u4E2A\u5EF6\u8FDF\u52A0\u8F7D\u7684 bean2 \uFF0C\u90A3\u4E48 bean1 \u5728\u5BB9\u5668\u542F\u52A8\u65F6\u88AB\u5B9E\u4F8B\u5316\uFF0C\u800C bean2 \u7531\u4E8E\u88AB bean1 \u5F15\u7528\uFF0C\u6240\u4EE5\u4E5F\u88AB\u5B9E\u4F8B\u5316\u3002 \u8FD9\u79CD\u60C5\u51B5\u4E5F\u7B26\u5408\u5EF6\u65F6\u52A0\u8F7D\u7684 bean \u5728\u7B2C\u4E00\u6B21\u8C03\u7528\u65F6\u624D\u88AB\u5B9E\u4F8B\u5316\u7684\u89C4\u5219\u3002</p></li><li><p>\u5982\u679C\u4E00\u4E2A Bean \u7684 <code>scope</code> \u5C5E\u6027\u4E3A <code>scope=&quot;prototype&quot;</code> \u65F6\uFF0C\u5373\u4F7F\u8BBE\u7F6E\u4E86 <code>lazy-init=&quot;false&quot;</code>\uFF0C\u5BB9\u5668\u542F\u52A8\u65F6\u4E5F\u4E0D\u4F1A\u5B9E\u4F8B\u5316Bean\uFF0C \u800C\u662F\u8C03\u7528 getBean \u65B9\u6CD5\u65F6\u5B9E\u4F8B\u5316\u3002</p></li><li><p>\u5728\u5BB9\u5668\u5C42\u6B21\u4E2D\u901A\u8FC7\u5728\u5143\u7D20\u4E0A\u4F7F\u7528 <code>default-lazy-init</code> \u5C5E\u6027\u6765\u63A7\u5236\u5EF6\u65F6\u521D\u59CB\u5316\u3002</p></li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">default-lazy-init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- no beans will be eagerly pre-instantiated... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u5E94\u7528\u573A\u666F</strong></p><ol><li><p>\u5F00\u542F\u5EF6\u8FDF\u52A0\u8F7D\u4E00\u5B9A\u7A0B\u5EA6\u63D0\u9AD8\u5BB9\u5668\u542F\u52A8\u548C\u8FD0\u8F6C\u6027\u80FD\u3002\u3010\u6709\u70B9\u626F\u3011</p></li><li><p>\u5BF9\u4E8E\u4E0D\u5E38\u4F7F\u7528\u7684 Bean \u8BBE\u7F6E\u5EF6\u8FDF\u52A0\u8F7D\uFF0C\u8FD9\u6837\u5076\u5C14\u4F7F\u7528\u7684\u65F6\u5019\u518D\u52A0\u8F7D\uFF0C\u4E0D\u5FC5\u8981\u4ECE\u4E00\u5F00\u59CB\u8BE5 Bean \u5C31\u5360\u7528\u8D44\u6E90\u3002\u3010\u9760\u70B9\u8C31\u3011</p></li></ol><h4 id="_2-2-factorybean-\u548C-beanfactory" tabindex="-1"><a class="header-anchor" href="#_2-2-factorybean-\u548C-beanfactory" aria-hidden="true">#</a> 2.2 FactoryBean \u548C BeanFactory</h4><p><code>BeanFactory</code> \u63A5\u53E3\u662F\u5BB9\u5668\u7684\u9876\u7EA7\u63A5\u53E3\uFF0C\u5B9A\u4E49\u4E86\u5BB9\u5668\u7684\u4E00\u4E9B\u57FA\u7840\u884C\u4E3A\uFF0C\u8D1F\u8D23\u751F\u4EA7\u548C\u7BA1\u7406Bean\u7684\u4E00\u4E2A\u5DE5\u5382\uFF0C \u5177\u4F53\u4F7F\u7528\u5B83\u4E0B\u9762\u7684\u5B50\u63A5\u53E3\u7C7B\u578B\uFF0C\u6BD4\u5982 <code>ApplicationContext</code>\u3002</p><p><strong>FactoryBean</strong></p><p>Spring \u4E2D Bean \u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F\u666E\u901ABean\uFF0C\u4E00\u79CD\u662F\u5DE5\u5382Bean(FactoryBean)\uFF0CFactoryBean\u53EF\u4EE5\u751F\u6210\u67D0\u4E00\u4E2A\u7C7B\u578B\u7684Bean\u5B9E\u4F8B\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u53EF\u4EE5\u501F\u52A9\u4E8E\u5B83\u81EA\u5B9A\u4E49Bean\u7684\u521B\u5EFA\u8FC7\u7A0B\u3002</p><blockquote><p>\u4E0E Bean \u521B\u5EFA\u7684\u4E09\u79CD\u65B9\u5F0F\u4E2D\u7684\u9759\u6001\u65B9\u6CD5\u548C\u5B9E\u4F8B\u5316\u65B9\u6CD5\u548CFactoryBean\u4F5C\u7528\u7C7B\u4F3C\uFF0C \u4F46 FactoryBean \u4F7F\u7528\u8F83\u591A\uFF0C\u5C24\u5176\u5728 Spring \u6846\u67B6\u4E00\u4E9B\u7EC4\u4EF6\u4E2D\u4F1A\u4F7F\u7528\uFF0C\u8FD8\u6709\u5176\u4ED6\u6846\u67B6\u548C Spring \u6846\u67B6\u6574\u5408\u65F6\u4F7F\u7528</p></blockquote><p>\u63A5\u53E3\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    
	<span class="token class-name">String</span> OBJECT_TYPE_ATTRIBUTE <span class="token operator">=</span> <span class="token string">&quot;factoryBeanObjectType&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DEFactoryBean\u521B\u5EFA\u7684Bean\u5B9E\u4F8B\uFF0C\u5982\u679CisSingleton\u8FD4\u56DEtrue\uFF0C
     * \u5219\u8BE5\u5B9E\u4F8B\u4F1A\u653E\u5230Spring\u5BB9\u5668\u7684\u5355\u4F8B\u5BF9\u8C61\u7F13\u5B58\u6C60\u4E2D\u3002
     */</span>
	<span class="token annotation punctuation">@Nullable</span>
	<span class="token class-name">T</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DEFactoryBean\u521B\u5EFA\u7684Bean\u7C7B\u578B
     */</span>
	<span class="token annotation punctuation">@Nullable</span>
	<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DE\u4F5C\u7528\u57DF\u662F\u5426\u5355\u4F8B
     */</span>
	<span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p><strong>\u4F7F\u7528\u6D4B\u8BD5</strong></p><p>\u521B\u5EFA\u4E00\u4E2A\u7528\u4E8E\u751F\u6210 <code>Person</code> \u5BF9\u8C61\u7684 <code>FactoryBean</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonFactoryBean</span> <span class="token keyword">implements</span> <span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> info<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>info <span class="token operator">=</span> info<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6A21\u62DF\u6784\u5EFA\u590D\u6742\u5BF9\u8C61\uFF08\u5047\u88C5\u8FD9\u91CC\u5F88\u590D\u6742\u5427...\uFF09</span>
        <span class="token class-name">Person</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> person<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u5728 <code>applicationContext.xml</code> \u4E2D\u914D\u7F6E\u8FD9\u4E2A Bean \u548C\u4F9D\u8D56</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>personBean<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.factory.PersonFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>John,20<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6D4B\u8BD5\u83B7\u53D6 Bean</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ApplicationContext</span> applicationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> personBean <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;personBean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>personBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6253\u5370\u7ED3\u679C\u4E3A: <code>Person(name=John, age=20)</code></p><p><strong>\u6CE8\u610F</strong></p><p>\u5982\u679C\u9700\u8981\u83B7\u53D6 <code>PersonFactoryBean</code> \u672C\u8EAB\uFF0C\u4E0D\u60F3\u83B7\u53D6\u901A\u8FC7\u5DE5\u5382\u751F\u4EA7\u7684 Bean\u3002\u53EA\u9700\u8981\u5728 <code>getBean</code> \u65B9\u6CD5\u7684\u53C2\u6570 <code>name</code> \u524D\u9762\u52A0\u4E0A <code>&amp;</code> \u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Object</span> personBean <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;personBean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u6253\u5370\u7ED3\u679C\u4E3A: <code>com.mujunlin.transfer.factory.PersonFactoryBean@51acdf2e</code></p><h4 id="_2-3-\u540E\u7F6E\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#_2-3-\u540E\u7F6E\u5904\u7406\u5668" aria-hidden="true">#</a> 2.3 \u540E\u7F6E\u5904\u7406\u5668</h4><p>Spring\u63D0\u4F9B\u4E86\u4E24\u79CD\u540E\u5904\u7406bean\u7684\u6269\u5C55\u63A5\u53E3\uFF0C\u5206\u522B\u4E3A <code>BeanPostProcessor</code> \u548C <code>BeanFactoryPostProcessor</code>\uFF0C\u4E24\u8005\u5728\u4F7F\u7528\u4E0A\u662F\u6709\u6240\u533A\u522B\u7684\u3002</p><p>\u5728 BeanFactory \u521D\u59CB\u5316\u4E4B\u540E\u53EF\u4EE5\u4F7F\u7528 <code>BeanFactoryPostProcessor</code> \u8FDB\u884C\u540E\u7F6E\u5904\u7406\u505A\u4E00\u4E9B\u4E8B\u60C5\u3002</p><p>\u5728Bean\u5BF9\u8C61\u5B9E\u4F8B\u5316(\u5E76\u4E0D\u662FBean\u7684\u6574\u4E2A\u751F\u547D\u5468\u671F\u5B8C\u6210)\u4E4B\u540E\u53EF\u4EE5\u4F7F\u7528 <code>BeanPostProcessor</code> \u8FDB\u884C\u540E\u7F6E\u5904\u7406\u505A\u4E00\u4E9B\u4E8B\u60C5\u3002</p><blockquote><p>\u6CE8\u610F\uFF1A\u5BF9\u8C61\u4E0D\u4E00\u5B9A\u662F Spring Bean\uFF0C\u800C Spring Bean \u4E00\u5B9A\u662F\u4E2A\u5BF9\u8C61\u3002</p></blockquote><h5 id="_2-3-1-beanpostprocessor" tabindex="-1"><a class="header-anchor" href="#_2-3-1-beanpostprocessor" aria-hidden="true">#</a> 2.3.1 BeanPostProcessor</h5><p><code>BeanPostProcessor</code> \u662F\u9488\u5BF9Bean\u7EA7\u522B\u7684\u5904\u7406\uFF0C\u53EF\u4EE5\u9488\u5BF9\u67D0\u4E2A\u5177\u4F53\u7684Bean.</p><p>\u63A5\u53E3\u6E90\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">default</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">default</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u63A5\u53E3\u63D0\u4F9B\u4E86\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5206\u522B\u5728Bean\u7684\u521D\u59CB\u5316\u65B9\u6CD5\u524D\u548C\u521D\u59CB\u5316\u65B9\u6CD5\u540E\u6267\u884C\u3002</p><p>\u5B9A\u4E49\u4E00\u4E2A\u7C7B\u5B9E\u73B0\u4E86 <code>BeanPostProcessor</code>\uFF0C\u9ED8\u8BA4\u662F\u4F1A\u5BF9\u6574\u4E2ASpring\u5BB9\u5668\u4E2D\u6240\u6709\u7684bean\u8FDB\u884C\u5904\u7406\u3002 \u5982\u679C\u8981\u5BF9\u5177\u4F53\u7684\u67D0\u4E2Abean\u5904\u7406\uFF0C\u53EF\u4EE5\u901A\u8FC7\u65B9\u6CD5\u53C2\u6570\u5224\u65AD\uFF0C\u4E24\u4E2A\u7C7B\u578B\u53C2\u6570\u5206\u522B\u4E3A <code>Object</code> \u548C <code>String</code> \uFF0C \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u6BCF\u4E2Abean\u7684\u5B9E\u4F8B\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6BCF\u4E2Abean\u7684name\u6216\u8005id\u5C5E\u6027\u7684\u503C\u3002\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u6765\u5224\u65AD\u6211\u4EEC\u5C06\u8981\u5904\u7406\u7684\u5177\u4F53\u7684bean\u3002</p><blockquote><p>\u6CE8\u610F:\u5904\u7406\u662F\u53D1\u751F\u5728Spring\u5BB9\u5668\u7684\u5B9E\u4F8B\u5316\u548C\u4F9D\u8D56\u6CE8\u5165\u4E4B\u540E\u3002</p></blockquote><h5 id="_2-3-2-beanfactorypostprocessor" tabindex="-1"><a class="header-anchor" href="#_2-3-2-beanfactorypostprocessor" aria-hidden="true">#</a> 2.3.2 BeanFactoryPostProcessor</h5><p>BeanFactory\u7EA7\u522B\u7684\u5904\u7406\uFF0C\u662F\u9488\u5BF9\u6574\u4E2ABean\u7684\u5DE5\u5382\u8FDB\u884C\u5904\u7406\u3002</p><p>\u5178\u578B\u5E94\u7528\u662F\uFF1A<code>PropertyPlaceholderConfigurer</code></p><p>\u8C03\u7528 <code>BeanFactoryPostProcessor</code> \u65B9\u6CD5\u65F6\uFF0CBean\u8FD8\u6CA1\u6709\u5B9E\u4F8B\u5316\uFF0C\u6B64\u65F6 Bean \u521A\u88AB\u89E3\u6790\u6210 <code>BeanDefinition</code> \u5BF9\u8C61\u3002</p><p><strong>BeanDefinition\u5BF9\u8C61</strong>:\u6211\u4EEC\u5728 XML \u4E2D\u5B9A\u4E49\u7684 bean\u6807\u7B7E\uFF0CSpring \u89E3\u6790 bean \u6807\u7B7E\u6210\u4E3A\u4E00\u4E2A JavaBean\uFF0C \u8FD9\u4E2AJavaBean \u5C31\u662F BeanDefinition\u3002</p><h2 id="spring-ioc-\u6E90\u7801\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#spring-ioc-\u6E90\u7801\u5256\u6790" aria-hidden="true">#</a> Spring IOC \u6E90\u7801\u5256\u6790</h2><p>\u9605\u8BFB\u6E90\u7801\u7684\u539F\u5219</p><ul><li>\u5B9A\u7126\u539F\u5219:\u6293\u4E3B\u7EBF</li><li>\u5B8F\u89C2\u539F\u5219:\u7AD9\u5728\u4E0A\u5E1D\u89C6\u2EC6\uFF0C\u5173\u6CE8\u6E90\u7801\u7ED3\u6784\u548C\u4E1A\u52A1\u6D41\u7A0B(\u6DE1\u5316\u5177\u4F53\u67D0\u884C\u4EE3\u7801\u7684\u7F16\u5199\u7EC6\u8282)</li></ul><p>\u8BFB\u6E90\u7801\u7684\u65B9\u6CD5\u548C\u6280\u5DE7</p><ul><li>\u65AD\u70B9(\u89C2\u5BDF\u8C03\u7528\u6808)</li><li>\u53CD\u8C03(Find Usages)</li><li>\u7ECF\u9A8C(\u5982\uFF1ASpring\u6846\u67B6\u4E2DdoXXX\uFF0C\u4E00\u822C\u662F\u505A\u5177\u4F53\u5904\u7406\u7684\u5730\u65B9)</li></ul><h3 id="\u7B2C\u4E00\u8282-spring-ioc-\u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u4F53\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u8282-spring-ioc-\u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u4F53\u6D41\u7A0B" aria-hidden="true">#</a> \u7B2C\u4E00\u8282 Spring IoC \u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u4F53\u6D41\u7A0B</h3><h4 id="_1-1-spring-\u5BB9\u5668\u4F53\u7CFB" tabindex="-1"><a class="header-anchor" href="#_1-1-spring-\u5BB9\u5668\u4F53\u7CFB" aria-hidden="true">#</a> 1.1 Spring \u5BB9\u5668\u4F53\u7CFB</h4><p>IoC \u5BB9\u5668\u662FSpring\u7684\u6838\u5FC3\u6A21\u5757\uFF0C\u662F\u62BD\u8C61\u4E86\u5BF9\u8C61\u7BA1\u7406\u3001\u4F9D\u8D56\u5173\u7CFB\u7BA1\u7406\u7684\u6846\u67B6\u89E3\u51B3\u65B9\u6848\u3002 Spring \u63D0\u4F9B\u4E86\u5F88\u591A\u5BB9\u5668\uFF0C\u5176\u4E2D <code>BeanFactory</code> \u662F\u9876\u5C42\u5BB9\u5668(\u6839\u5BB9\u5668)\uFF0C\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316\uFF0C <em>\u5B83\u5B9A\u4E49\u4E86\u6240\u6709 IoC \u5BB9\u5668\u5FC5\u987B\u9075\u4ECE\u7684\u4E00\u5957\u539F\u5219</em>\uFF0C\u5177\u4F53\u7684\u5BB9\u5668\u5B9E\u73B0\u53EF\u4EE5\u589E\u52A0\u989D\u5916\u7684\u529F\u80FD\uFF0C \u6BD4\u5982\u6211\u4EEC\u5E38\u7528\u5230\u7684 <code>ApplicationContext</code>\uFF0C\u5176\u4E0B\u66F4\u5177\u4F53\u7684\u5B9E\u73B0\u5982 <code>ClassPathXmlApplicationContext</code> \u5305\u542B\u4E86\u89E3\u6790 xml \u7B49\u4E00\u7CFB\u5217\u7684\u5185\u5BB9\uFF0C <code>AnnotationConfigApplicationContext</code> \u5219\u662F\u5305\u542B\u4E86\u6CE8\u89E3\u89E3\u6790\u7B49\u4E00\u7CFB\u5217\u7684\u5185\u5BB9\u3002</p><blockquote><p>\u901A\u5E38\u8BA4\u4E3A IoC \u5BB9\u5668\u5C31\u662F Map \u800C\u5DF2\uFF0C\u5176\u5B9E\u8FD9\u662F\u9519\u8BEF\u7684\u7406\u89E3\u3002<br> \u51C6\u786E\u7684\u6765\u8BF4 Map \u53EA\u662F IoC \u5BB9\u5668\u7684\u4E00\u4E2A\u6210\u5458\uFF0C\u53EB\u505A\u5355\u4F8B\u6C60(<code>singletonObjects</code>)\u3002<br> \u5BB9\u5668\u662F\u4E00\u7EC4\u7EC4\u4EF6\u548C\u8FC7\u7A0B\u7684\u96C6\u5408\uFF0C\u5305\u62EC BeanFactory, \u5355\u4F8B\u6C60, BeanPostProcessor \u7B49, \u4EE5\u53CA\u8FD9\u4E9B\u7EC4\u4EF6\u95F4\u7684\u534F\u4F5C\u3002</p></blockquote><p>Spring IoC \u5BB9\u5668\u7EE7\u627F\u4F53\u7CFB\u975E\u5E38\u806A\u660E\uFF0C\u9700\u8981\u4F7F\u7528\u54EA\u4E2A\u5C42\u6B21\u7528\u54EA\u4E2A\u5C42\u6B21\u5373\u53EF\uFF0C\u4E0D\u5FC5\u4F7F\u7528\u529F\u80FD\u5927\u800C\u5168\u7684\u3002</p><p><strong>BeanFactory \u63A5\u53E3\u5B9A\u4E49\u5982\u4E0B</strong></p><p><img src="`+t+'" alt="BeanFactory\u63A5\u53E3\u5B9A\u4E49"></p><p><strong>BeanFactory \u5BB9\u5668\u7EE7\u627F\u4F53\u7CFB</strong></p><p><img src="'+p+`" alt="BeanFactory\u5BB9\u5668\u7EE7\u627F\u4F53\u7CFB"></p><h4 id="_1-2-bean\u751F\u547D\u5468\u671F\u5173\u952E\u65F6\u673A\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-2-bean\u751F\u547D\u5468\u671F\u5173\u952E\u65F6\u673A\u70B9" aria-hidden="true">#</a> 1.2 Bean\u751F\u547D\u5468\u671F\u5173\u952E\u65F6\u673A\u70B9</h4><p>\u521B\u5EFA\u4E00\u4E2A\u666E\u901A Java Bean\uFF0C\u5B9E\u73B0 <code>InitializingBean</code> \u63A5\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoBean</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token class-name">DemoBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DemoBean \u6784\u9020\u5668\u65B9\u6CD5 ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DemoBean afterPropertiesSet\u65B9\u6CD5 ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u518D\u5728\u5BB9\u5668\u4E2D\u6DFB\u52A0 <code>BeanFactoryPostProcessor</code> \u548C <code>DemoBeanPostProcessor</code> \u7684\u81EA\u5B9A\u4E49\u5B9E\u73B0\u7C7B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoBeanFactoryPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token class-name">DemoBeanFactoryPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BeanFactoryPostProcessor \u5B9E\u73B0\u7C7B\u6784\u9020\u65B9\u6CD5 ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BeanFactoryPostProcessor \u5B9E\u73B0\u7C7B\u51FD\u6570\u65B9\u6CD5 postProcessBeanFactory \u6267\u884C ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">DemoBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BeanPostProcessor \u5B9E\u73B0\u7C7B\u6784\u9020\u65B9\u6CD5 ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;demoBean&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BeanPostProcessor \u5B9E\u73B0\u7C7B postProcessBeforeInitialization \u65B9\u6CD5\u6267\u884C ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;demoBean&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;BeanPostProcessor \u5B9E\u73B0\u7C7B postProcessAfterInitialization \u65B9\u6CD5\u6267\u884C ... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u6DFB\u52A0\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u4ECE\u5BB9\u5668\u4E2D\u83B7\u53D6 Bean \u6253\u5370\u7ED3\u679C\u5982\u4E0B\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>BeanFactoryPostProcessor \u5B9E\u73B0\u7C7B\u6784\u9020\u65B9\u6CD5 <span class="token punctuation">..</span>. 
BeanFactoryPostProcessor \u5B9E\u73B0\u7C7B\u51FD\u6570\u65B9\u6CD5 postProcessBeanFactory \u6267\u884C <span class="token punctuation">..</span>. 
BeanPostProcessor \u5B9E\u73B0\u7C7B\u6784\u9020\u65B9\u6CD5 <span class="token punctuation">..</span>. 
DemoBean \u6784\u9020\u5668\u65B9\u6CD5 <span class="token punctuation">..</span>. 
BeanPostProcessor \u5B9E\u73B0\u7C7B postProcessBeforeInitialization \u65B9\u6CD5\u6267\u884C <span class="token punctuation">..</span>. 
DemoBean afterPropertiesSet\u65B9\u6CD5 <span class="token punctuation">..</span>. 
BeanPostProcessor \u5B9E\u73B0\u7C7B postProcessAfterInitialization \u65B9\u6CD5\u6267\u884C <span class="token punctuation">..</span>. 
com.mujunlin.demo.DemoBean@1125777d
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7531\u6B64\u53EF\u4EE5\u7AA5\u89C1 Bean \u521B\u5EFA\u7684\u7B80\u5355\u8FC7\u7A0B\u3002</p><p>\u901A\u8FC7Debug\u6A21\u5F0F\u8DDF\u8E2A\u4EE3\u7801\u7684\u6267\u884C\u6D41\u7A0B\uFF0C\u9996\u5148\u5728 <code>DemoBean</code> \u7684\u6784\u9020\u65B9\u6CD5\u5904\u6DFB\u52A0\u65AD\u70B9\uFF0C \u89C2\u5BDF Java Bean \u7684\u6784\u9020\u65B9\u6CD5\u7684\u6267\u884C\u8C03\u7528\u6808</p><p><img src="`+e+`" alt="JavaBean\u6784\u9020\u65B9\u6CD5\u6267\u884C\u8C03\u7528\u6808"></p><p>\u53EF\u4EE5\u770B\u5230\u9996\u5148\u4F1A\u8C03\u7528 <code>AbstractApplicationContext#refresh</code> \u65B9\u6CD5\uFF0C \u7136\u540E\u8C03\u7528 <code>AbstractApplicationContext#finishBeanFactoryInitialization</code> \u65B9\u6CD5\uFF0C\u6700\u7EC8\u6267\u884C Java Bean \u7684\u6784\u9020\u65B9\u6CD5\u3002</p><blockquote><p>\u89C2\u5BDF\u8C03\u7528\u6808\u65F6\uFF0C\u4F4D\u7F6E\u8D8A\u9760\u4E0A\u7684\u5730\u65B9\u5728\u8C03\u7528\u94FE\u4E0A\u8D8A\u63A5\u8FD1\u65AD\u70B9\u65B9\u6CD5\u4F4D\u7F6E\u3002</p></blockquote><p>\u540C\u6837\u7684\u65B9\u5F0F\uFF0C\u53EF\u4EE5\u770B\u5230\u5404\u4E2A\u4E3B\u8981\u8282\u70B9\u7684\u4E3B\u8981\u65B9\u6CD5\uFF1A</p><table><thead><tr><th>\u5173\u952E\u70B9</th><th>\u89E6\u53D1\u4EE3\u7801</th></tr></thead><tbody><tr><td>\u6784\u9020\u5668</td><td>refresh#finishBeanFactoryInitialization</td></tr><tr><td>BeanFactoryPostProcessor \u521D\u59CB\u5316</td><td>refresh#invokeBeanFactoryPostProcessors</td></tr><tr><td>BeanFactoryPostProcessor \u65B9\u6CD5\u8C03\u7528</td><td>refresh#invokeBeanFactoryPostProcessors</td></tr><tr><td>BeanPostProcessor \u521D\u59CB\u5316</td><td>refresh#registerBeanPostProcessors</td></tr><tr><td>BeanPostProcessor \u65B9\u6CD5(before + after)\u8C03\u7528</td><td>refresh#finishBeanFactoryInitialization</td></tr></tbody></table><p>\u7531\u4E0A\u8868\u4E0D\u96BE\u770B\u51FA\uFF0CBean \u7684\u751F\u547D\u8282\u70B9\u7684\u5173\u952E\u65F6\u673A\uFF0C\u90FD\u4F1A\u901A\u8FC7 <code>AbstractApplicationContext#refresh</code> \u65B9\u6CD5\uFF0C \u53EF\u77E5\u6B64\u65B9\u6CD5\u4E4B\u91CD\u8981\u3002\u63A5\u4E0B\u6765\uFF0C\u5C06\u7740\u91CD\u5206\u6790 <code>refresh</code> \u65B9\u6CD5\u3002</p><h4 id="_1-3-spring-ioc\u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_1-3-spring-ioc\u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u6D41\u7A0B" aria-hidden="true">#</a> 1.3 Spring IoC\u5BB9\u5668\u521D\u59CB\u5316\u4E3B\u6D41\u7A0B</h4><p>\u7531\u4E0A\u5206\u6790\u53EF\u77E5\uFF0CSpring IoC \u5BB9\u5668\u521D\u59CB\u5316\u7684\u5173\u952E\u73AF\u8282\u5C31\u5728 <code>AbstractApplicationContext#refresh()</code> \u65B9\u6CD5\u4E2D \uFF0C \u6211\u4EEC\u901A\u8FC7\u5206\u6790 <code>refresh</code> \u65B9\u6CD5\u6765\u4FEF\u77B0\u5BB9\u5668\u521B\u5EFA\u7684\u4E3B\u4F53\u6D41\u7A0B\uFF0C\u4E3B\u4F53\u6D41\u7A0B\u4E0B\u7684\u5177\u4F53\u5B50\u6D41\u7A0B\u6211\u4EEC\u540E\u9762\u518D\u6765\u8BA8\u8BBA\u3002</p><blockquote><p><code>refresh</code> \u65B9\u6CD5\u6267\u884C\u4E86\u5BB9\u5668\u542F\u52A8\u7684\u7EDD\u5927\u591A\u6570\u65B9\u6CD5\uFF0C\u65B9\u6CD5\u540D\u4E4B\u6240\u4EE5\u662F\u8FD9\u4E2A\uFF0C\u662F\u56E0\u4E3A Spring \u63D0\u4F9B\u4E86\u63A5\u53E3\u53EF\u4EE5\u5237\u65B0\u5BB9\u5668\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5BF9\u8C61\u9501\u3002\u901A\u8FC7 FindUsage \u53EF\u77E5: refresh()\u3001registerShutdownHook()\u3001close() \u4E0D\u80FD\u5E76\u884C\u6267\u884C</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">StartupStep</span> contextRefresh <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.context.refresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Prepare this context for refreshing.</span>
		<span class="token comment">// \u5237\u65B0\u524D\u7684\u9884\u5904\u7406\uFF1A\u8BBE\u7F6E\u5BB9\u5668\u542F\u52A8\u65F6\u95F4\u3001\u8BBE\u7F6E\u5F00\u542F\u72B6\u6001\u3001\u9A8C\u8BC1\u73AF\u5883\u661F\u7CFB\u91CC\u4E00\u4E9B\u5FC5\u987B\u5B58\u5728\u7684\u5C5E\u6027\u7B49\u3002</span>
		<span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Tell the subclass to refresh the internal bean factory.</span>
		<span class="token comment">// \u3010\u91CD\u8981\u3011</span>
		<span class="token comment">// \u83B7\u53D6 BeanFactory (\u9ED8\u8BA4\u5B9E\u73B0\u662F DefaultListableBeanFactory) \u5E76\u8BBE\u7F6E BeanFactory \u7684\u4E00\u4E9B\u57FA\u672C\u4FE1\u606F(\u5982: allowCircularReferences, allowBeanDefinitionOverriding);</span>
		<span class="token comment">// \u52A0\u8F7D BeanDefinition \u5E76\u6CE8\u518C\u5230 BeanDefinitionRegistry (beanDefinitionMap \u672C\u8D28\u5176\u5B9E\u662F ConcurrentHashMap ) \u4E2D</span>
		<span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Prepare the bean factory for use in this context.</span>
		<span class="token comment">// BeanFactory \u524D\u7F6E\u5904\u7406\uFF1A\u8BBE\u7F6E BeanFactory \u4F7F\u7528\u7684\u5176\u4ED6 context \u76F8\u5173\u7684\u4FE1\u606F</span>
		<span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// Allows post-processing of the bean factory in context subclasses.</span>
			<span class="token comment">// BeanFactory \u540E\u7F6E\u5904\u7406\uFF1A\u5E76\u6CA1\u6709\u5177\u4F53\u5B9E\u73B0\uFF0C\u662F\u7559\u4F5C\u6269\u5C55\u4F7F\u7528 \u3010\u{1F44D}\u{1F3FB}\u3011</span>
			<span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token class-name">StartupStep</span> beanPostProcess <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.context.beans.post-process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// Invoke factory processors registered as beans in the context.</span>
			<span class="token comment">// \u5C06\u5B9E\u73B0\u4E86 BeanFactoryPostProcessor \u7684\u7C7B\u52A0\u8F7D\u5230\u5BB9\u5668\u4E2D\u5B9E\u4F8B\u5316\uFF0C\u5E76\u5B8C\u6210\u51FD\u6570\u65B9\u6CD5\u7684\u8C03\u7528</span>
			<span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Register bean processors that intercept bean creation.</span>
			<span class="token comment">// \u6CE8\u518C BeanPostProcessor (Bean \u7684\u540E\u7F6E\u5904\u7406\u5668)</span>
			<span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
			beanPostProcess<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Initialize message source for this context.</span>
			<span class="token comment">// \u56FD\u9645\u5316\u76F8\u5173\u521D\u59CB\u5316[\u4E0D\u91CD\u8981]</span>
			<span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Initialize event multicaster for this context.</span>
			<span class="token comment">// \u521D\u59CB\u5316\u4E8B\u4EF6\u6D3E\u53D1\u5668[\u4E0D\u91CD\u8981]</span>
			<span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Initialize other special beans in specific context subclasses.</span>
			<span class="token comment">// \u5BB9\u5668\u5237\u65B0\u65F6\u7684\u903B\u8F91\uFF0C\u6CA1\u6709\u9ED8\u8BA4\u5B9E\u73B0\uFF0C\u4E5F\u662F\u7559\u7ED9\u5B50\u7C7B\u7684\u6269\u5C55\u63A5\u53E3\u3002</span>
			<span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Check for listener beans and register them.</span>
			<span class="token comment">// \u6CE8\u518C\u5B9E\u73B0\u4E86 ApplicationListener \u63A5\u53E3\u7684\u76D1\u542C\u5668</span>
			<span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Instantiate all remaining (non-lazy-init) singletons.</span>
			<span class="token comment">// \u3010\u6838\u5FC3\u5173\u6CE8\u3011</span>
			<span class="token comment">// \u521D\u59CB\u5316\u6240\u6709\u5269\u4E0B\u7684\u975E\u61D2\u52A0\u8F7D\u7684\u5355\u4F8BBean\uFF1B\u521B\u5EFA\u8FD9\u4E9B Bean \u7684\u5B9E\u4F8B(\u672A\u8BBE\u7F6E\u5C5E\u6027)\uFF1B\u586B\u5145\u5C5E\u6027</span>
			<span class="token comment">// \u521D\u59CB\u5316\u65B9\u6CD5\u8C03\u7528(\u5982: afterPropertiesSet, init-method\u65B9\u6CD5);\u8C03\u7528 BeanPostProcessor \u7684\u540E\u7F6E(after)\u5904\u7406\u65B9\u6CD5</span>
			<span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Last step: publish corresponding event.</span>
			<span class="token comment">// \u6700\u540E\u4E00\u6B65\uFF1A\u8C03\u7528 LifecycleProcessor \u7684 onRefresh \u65B9\u6CD5\uFF0C\u5E76\u4E14\u53D1\u5E03\u4E8B\u4EF6 (ContextRefreshedEvent)</span>
			<span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// ...</span>
		<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
			<span class="token comment">// ...</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><h3 id="\u7B2C\u4E8C\u8282-beanfactory\u521B\u5EFA\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u8282-beanfactory\u521B\u5EFA\u6D41\u7A0B" aria-hidden="true">#</a> \u7B2C\u4E8C\u8282 BeanFactory\u521B\u5EFA\u6D41\u7A0B</h3><p>BeanFactory \u521B\u5EFA\uFF0C\u6B64\u5904\u5176\u5B9E\u6307\u7684\u662F <code>ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();</code> \u8FD9\u4E00\u884C\u4EE3\u7801\u3002 \u8FD9\u4E00\u884C\u4EE3\u7801\uFF0C\u5176\u5B9E\u5728\u5B9E\u73B0\u4E2D\u5B8C\u6210\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><ol><li>\u83B7\u53D6 BeanFactory (\u9ED8\u8BA4\u5B9E\u73B0\u662F DefaultListableBeanFactory) \u5E76\u8BBE\u7F6E BeanFactory \u7684\u4E00\u4E9B\u57FA\u672C\u4FE1\u606F(\u5982: allowCircularReferences, allowBeanDefinitionOverriding);</li><li>\u52A0\u8F7D BeanDefinition \u5E76\u6CE8\u518C\u5230 BeanDefinitionRegistry \u4E2D</li></ol><p>\u73B0\u5728\u6211\u4EEC\u9010\u4E00\u5206\u6790\u3002</p><h4 id="_2-1-\u83B7\u53D6beanfactory" tabindex="-1"><a class="header-anchor" href="#_2-1-\u83B7\u53D6beanfactory" aria-hidden="true">#</a> 2.1 \u83B7\u53D6BeanFactory</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u65B9\u6CD5\u4E2D\u53EA\u6709\u4E24\u884C\u4EE3\u7801\u3002\u7531\u65B9\u6CD5\u540D\u53EF\u4EE5\u63A8\u65AD\uFF0C<code>refreshBeanFactory</code> \u65B9\u6CD5\u5E94\u8BE5\u662F\u6784\u5EFA BeanFactory \u7684\uFF0C\u7136\u540E\u76F4\u63A5\u8FD4\u56DE\u4E86\u6784\u5EFA\u597D\u7684 BeanFactory\u3002\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5224\u65AD\u662F\u5426\u6709 Bean \u5DE5\u5382\u3002</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u6E05\u7A7A\u5DE5\u5382\u4E2D\u7684 Bean</span>
		<span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5173\u95ED BeanFactory</span>
		<span class="token function">closeBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5B9E\u4F8B\u5316 BeanFactory (\u91CC\u9762\u5176\u5B9E\u5C31 new \u4E86\u4E00\u4E2A DefaultListableBeanFactory)</span>
		<span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">createBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BBE\u7F6E\u5E8F\u5217\u5316ID</span>
		beanFactory<span class="token punctuation">.</span><span class="token function">setSerializationId</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u81EA\u5B9A\u4E49 Bean \u5DE5\u5382\u7684\u4E00\u4E9B\u5C5E\u6027\uFF08\u662F\u5426\u8986\u76D6[id\u91CD\u590D\u7684\u60C5\u51B5\u4E0B]\u3001\u662F\u5426\u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56\uFF09</span>
		<span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u52A0\u8F7D\u5E94\u7528\u4E2D\u7684 BeanDefinition \u3010\u91CD\u8981\u3011</span>
		<span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u7ED9\u5F53\u524D BeanFactory \u8D4B\u503C</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationContextException</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error parsing bean definition source for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;BeanFactory not initialized or already closed - &quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;call &#39;refresh&#39; before accessing beans via the ApplicationContext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> beanFactory<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u751F\u4EA7 BeanFactory \u5176\u5B9E\u8FD8\u662F\u6BD4\u8F83\u7B80\u5355\u3002\u5176\u4E2D\uFF0C\u52A0\u8F7D\u5E94\u7528\u4E2D\u7684 BeanDefinition \u6D41\u7A0B\u76F8\u5BF9\u6BD4\u8F83\u590D\u6742\u3002</p><h4 id="_2-2-beandefinition\u52A0\u8F7D\u89E3\u6790\u53CA\u6CE8\u518C" tabindex="-1"><a class="header-anchor" href="#_2-2-beandefinition\u52A0\u8F7D\u89E3\u6790\u53CA\u6CE8\u518C" aria-hidden="true">#</a> 2.2 BeanDefinition\u52A0\u8F7D\u89E3\u6790\u53CA\u6CE8\u518C</h4><p><code>BeanDefinition</code> \u52A0\u8F7D\u89E3\u6790\u53CA\u6CE8\u518C\u5728\u6E90\u4EE3\u7801\u4E0A\u5176\u5B9E\u5C31\u662F\u8FD9\u4E00\u884C\u4EE3\u7801\uFF1A <code>loadBeanDefinitions(beanFactory);</code>\u3002 \u8FDB\u5165\u5230\u5176\u5177\u4F53\u5B9E\u73B0 <code>AbstractXmlApplicationContext#loadBeanDefinitions</code> \u65B9\u6CD5\u5F53\u4E2D\uFF0C\u6E90\u7801\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
	<span class="token comment">// Create a new XmlBeanDefinitionReader for the given BeanFactory.</span>
	<span class="token comment">// \u4E3A\u6307\u5B9A\u7684 BeanFactory \u521B\u5EFA\u4E00\u4E2A XmlBeanDefinitionReader \u7528\u4E8E\u8BFB\u53D6\u89E3\u6790 XML \u5BF9\u8C61</span>
	<span class="token class-name">XmlBeanDefinitionReader</span> beanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionReader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Configure the bean definition reader with this context&#39;s</span>
	<span class="token comment">// resource loading environment.</span>
	<span class="token comment">// \u7ED9\u751F\u6210\u7684 DefinitionReader \u8BBE\u7F6E\u8D44\u6E90\u73AF\u5883\u52A0\u8F7D\u76F8\u5173\u7684\u4FE1\u606F</span>
	beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Allow a subclass to provide custom initialization of the reader,</span>
	<span class="token comment">// then proceed with actually loading the bean definitions.</span>
	<span class="token comment">// \u7528\u4E8E\u81EA\u5B9A\u4E49\u521D\u59CB\u5316\u7B56\u7565\u3002\u63D0\u4F9B\u7ED9\u5B50\u7C7B\u7684\u6269\u5C55\u63A5\u53E3\u3002(\u5185\u90E8\u7684\u5B9E\u73B0\u51E0\u4E4E\u662F\u7A7A\u7684\uFF0C\u8BF4\u51E0\u4E4E\u662F\u56E0\u4E3A\u4E0D\u662F\u5B8C\u5168\u6CA1\u6709\u4EE3\u7801\uFF0C\u53EA\u662F\u6709\u4E00\u70B9\u70B9\u770B\u4E0D\u61C2\u7684\u72B6\u6001\u8BBE\u7F6E\u7684\u4EE3\u7801)</span>
	<span class="token function">initBeanDefinitionReader</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u7136\u540E\u7EE7\u7EED\u53BB\u771F\u6B63\u52A0\u8F7D Bean Definition s</span>
	<span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u4E9B\u914D\u7F6E\u76F8\u5173\u7684\u4EE3\u7801\u90FD\u6CA1\u6709\u4EC0\u4E48\u53EF\u770B\u7684\uFF0C\u6211\u4EEC\u7EE7\u7EED\u8FDB\u5165\u5230\u771F\u6B63\u52A0\u8F7D Bean Definition \u7684\u91CD\u8F7D\u65B9\u6CD5\u5F53\u4E2D\u3002</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">XmlBeanDefinitionReader</span> reader<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u662F\u5426\u88AB\u52A0\u8F7D\u6210 Resource \u8D44\u6E90\u5BF9\u8C61\uFF1F</span>
	<span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources <span class="token operator">=</span> <span class="token function">getConfigResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>configResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5982\u679C\u6CA1\u6709\u88AB\u52A0\u8F7D\u6210\u8D44\u6E90\u5BF9\u8C61\uFF0C\u5219\u8D70\u53E6\u5916\u7684\u5206\u652F</span>
	<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations <span class="token operator">=</span> <span class="token function">getConfigLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>configLocations <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>\u6211\u4EEC\u901A\u8FC7 XML \u7684\u65B9\u5F0F\u52A0\u8F7D\u7684 ApplicationContext \u4E00\u822C\u6765\u8BB2\u90FD\u4F1A\u8FDB\u5165\u5230\u7B2C\u4E8C\u4E2A\u5206\u652F\uFF0C\u6211\u4EEC\u7EE7\u7EED\u5206\u6790\u7B2C\u4E8C\u4E2A\u5206\u652F\u7684\u4EE3\u7801\u3002 \u8FDB\u5165\u5230 <code>AbstractBeanDefinitionReader#loadBeanDefinitions</code> \u65B9\u6CD5\u5F53\u4E2D\uFF0C\u6E90\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> locations<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>locations<span class="token punctuation">,</span> <span class="token string">&quot;Location array must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5982\u679C\u6709\u591A\u4E2A\u914D\u7F6E\u6587\u4EF6\uFF0C\u4FBF\u4F9D\u6B21\u52A0\u8F7D\uFF0C\u5E76\u8BA1\u6570</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> location <span class="token operator">:</span> locations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		count <span class="token operator">+=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u91CD\u8F7D\u65B9\u6CD5</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u91CD\u8F7D\u65B9\u6CD5</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&gt;</span></span> actualResources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u83B7\u53D6\u8D44\u6E90\u52A0\u8F7D\u5668</span>
	<span class="token class-name">ResourceLoader</span> resourceLoader <span class="token operator">=</span> <span class="token function">getResourceLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>resourceLoader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
				<span class="token string">&quot;Cannot load bean definitions from location [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]: no ResourceLoader available&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u5224\u65AD\u8D44\u6E90\u52A0\u8F7D\u5668\u7684\u7C7B\u578B\u662F\u5426\u4E3A ResourcePatternResolver (\u7528\u4E8E\u5904\u7406XML, URL\u7B49\u4E0D\u540C\u7C7B\u578B\u8D44\u6E90\u6587\u4EF6\u7684\u7EDF\u4E00\u63A5\u53E3)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>resourceLoader <span class="token keyword">instanceof</span> <span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Resource pattern matching available.</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5C06\u8D44\u6E90\u6587\u4EF6\u52A0\u8F7D\u4E3A Resource \u5BF9\u8C61</span>
			<span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> resources <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">)</span> resourceLoader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// \u52A0\u8F7D\u8D44\u6E90\u4E2D\u914D\u7F6E\u7684 BeanDefinition \u5BF9\u8C61\u5E76\u8FD4\u56DE\u8BA1\u6570</span>
			<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>actualResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>actualResources<span class="token punctuation">,</span> resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from location pattern [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> count<span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
					<span class="token string">&quot;Could not resolve bean definition resource pattern [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Can only load single resources by absolute URL.</span>
		<span class="token comment">// \u53EA\u80FD\u5904\u7406\u5355\u4E2A\u7EDD\u5BF9\u5B9A\u4F4D\u7684 URL \u8D44\u6E90\u6587\u4EF6</span>
		<span class="token class-name">Resource</span> resource <span class="token operator">=</span> resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>actualResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			actualResources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from location [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> count<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6B8A\u9014\u540C\u5F52\u3002\u6700\u7EC8\u52A0\u8F7D BeanDefinition \u7684\u90FD\u662F\u540C\u4E00\u4E2A\u91CD\u8F7D\u65B9\u6CD5</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Resource</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> <span class="token string">&quot;Resource array must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Resource</span> resource <span class="token operator">:</span> resources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		count <span class="token operator">+=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><p>\u7EE7\u7EED\u8FDB\u5165\uFF0C\u4F1A\u8FDB\u5165\u5230\u65B0\u7684\u7C7B <code>XmlBeanDefinitionReader</code> \u7684\u540C\u540D\u65B9\u6CD5\u5F53\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EncodedResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u91CD\u8F7D\u65B9\u6CD5\u5F53\u4E2D</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">EncodedResource</span> encodedResource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">,</span> <span class="token string">&quot;EncodedResource must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loading XML bean definitions from &quot;</span> <span class="token operator">+</span> encodedResource<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodedResource</span><span class="token punctuation">&gt;</span></span> currentResources <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourcesCurrentlyBeingLoaded<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>currentResources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
				<span class="token string">&quot;Detected cyclic loading of &quot;</span> <span class="token operator">+</span> encodedResource <span class="token operator">+</span> <span class="token string">&quot; - check your import definitions!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">InputSource</span> inputSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputSource</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			inputSource<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span>encodedResource<span class="token punctuation">.</span><span class="token function">getEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// doXxx !!! \u771F\u6B63\u5E72\u6D3B\u7684\u6765\u4E86\u3002</span>
		<span class="token keyword">return</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> encodedResource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">finally</span> <span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FDB\u5165\u771F\u6B63\u5E72\u6D3B\u7684\u65B9\u6CD5\u5F53\u4E2D</span>
<span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u8BFB\u53D6 XML \u4E2D\u7684\u4FE1\u606F\uFF0C\u5C06 XML \u4E2D\u7684\u4FE1\u606F\u52A0\u8F7D\u5230 Document\u5BF9\u8C61\u5F53\u4E2D</span>
		<span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token function">doLoadDocument</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u89E3\u6790 Document \u5BF9\u8C61\u6210 BeanDefinition \u5E76\u8FDB\u884C\u6CE8\u518C</span>
		<span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> count<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// catch () {} * N (N \u591A\u5F02\u5E38\u5904\u7406\u3002 \u4E25\u8C28\uFF01 \u{1F44D}\u{1F3FB}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u6CE8\u518C\u65B9\u6CD5\u5F53\u4E2D</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
	<span class="token class-name">BeanDefinitionDocumentReader</span> documentReader <span class="token operator">=</span> <span class="token function">createBeanDefinitionDocumentReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u83B7\u53D6 Registry \u4E2D\u5DF2\u6709\u7684 BeanDefinition \u6570\u91CF</span>
	<span class="token keyword">int</span> countBefore <span class="token operator">=</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u6CE8\u518C\u89E3\u6790 BeanDefinition \u5E76\u6CE8\u518C</span>
	documentReader<span class="token punctuation">.</span><span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token function">createReaderContext</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8FD4\u56DE\u89E3\u6790\u5F53\u524D Document \u5BF9\u8C61\u6240\u65B0\u6CE8\u518C\u7684 BeanDefinition \u7684\u6570\u91CF</span>
	<span class="token keyword">return</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> countBefore<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>\u9996\u5C3E\u7684\u8BA1\u6570\u76F8\u5173\u7684\u4EE3\u7801\u90FD\u6CA1\u6709\u4EC0\u4E48\u6280\u672F\u542B\u91CF\uFF0C\u6211\u4EEC\u91CD\u70B9\u5173\u6CE8\uFF1A\u89E3\u6790\u548C\u6CE8\u518C\u3002<br> \u7EE7\u7EED\u8FDB\u5165\u4F1A\u8FDB\u5165\u5230 <code>DefaultBeanDefinitionDocumentReader#registerBeanDefinitions</code> \u5F53\u4E2D\uFF0C\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">XmlReaderContext</span> readerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>readerContext <span class="token operator">=</span> readerContext<span class="token punctuation">;</span>
	<span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">getDocumentElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Any nested &lt;beans&gt; elements will cause recursion in this method. In</span>
	<span class="token comment">// order to propagate and preserve &lt;beans&gt; default-* attributes correctly,</span>
	<span class="token comment">// keep track of the current (parent) delegate, which may be null. Create</span>
	<span class="token comment">// the new (child) delegate with a reference to the parent for fallback purposes,</span>
	<span class="token comment">// then ultimately reset this.delegate back to its original (parent) reference.</span>
	<span class="token comment">// this behavior emulates a stack of delegates without actually necessitating one.</span>
	<span class="token class-name">BeanDefinitionParserDelegate</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">;</span>
	<span class="token comment">// \u521B\u5EFA\u59D4\u6258\u5BF9\u8C61</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token function">createDelegate</span><span class="token punctuation">(</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> profileSpec <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>PROFILE_ATTRIBUTE<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>profileSpec<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specifiedProfiles <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>
					profileSpec<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span><span class="token punctuation">.</span>MULTI_VALUE_ATTRIBUTE_DELIMITERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// We cannot use Profiles.of(...) since profile expressions are not supported</span>
			<span class="token comment">// in XML config. See SPR-12458 for details.</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>specifiedProfiles<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Skipped XML bean definition file due to specified profiles [&quot;</span> <span class="token operator">+</span> profileSpec <span class="token operator">+</span>
							<span class="token string">&quot;] not matching: &quot;</span> <span class="token operator">+</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u7A7A\u5B9E\u73B0\u7684\u6269\u5C55\u65B9\u6CD5</span>
	<span class="token function">preProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u771F\u6B63\u89E3\u6790 BeanDefinition \u7684</span>
	<span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u7A7A\u5B9E\u73B0\u7684\u6269\u5C55\u65B9\u6CD5</span>
	<span class="token function">postProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">NodeList</span> nl <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nl<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Node</span> node <span class="token operator">=</span> nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">Element</span> ele <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// \u89E3\u6790\u9ED8\u8BA4\u6807\u7B7E\u5143\u7D20\uFF08\u5982: bean\uFF09</span>
					<span class="token function">parseDefaultElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">else</span> <span class="token punctuation">{</span>
					<span class="token comment">// \u89E3\u6790\u81EA\u5B9A\u4E49\u6807\u7B7E\u5143\u7D20</span>
					delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u9ED8\u8BA4\u5143\u7D20\u89E3\u6790\u5F53\u4E2D</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// import \u5143\u7D20\u5904\u7406</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> IMPORT_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">importBeanDefinitionResource</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// alias \u5143\u7D20\u5904\u7406</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> ALIAS_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">processAliasRegistration</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// bean \u5143\u7D20\u5904\u7406</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> BEAN_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">processBeanDefinition</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u5D4C\u5957 beans \u5904\u7406</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> NESTED_BEANS_ELEMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// recurse</span>
		<span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u6B64\u884C\u7684\u76EE\u7684 bean \u5904\u7406\u5F53\u4E2D</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6B64\u5904\u5E76\u6CA1\u6709\u5C01\u88C5 BeanDefinition \u800C\u662F\u751F\u6210\u4E86 BeanDefinitionHolder\uFF0C\u800C\u4ED6\u5185\u90E8\u6301\u6709\u4E00\u4E2A BeanDefinition\u3002</span>
	<span class="token comment">// \u5728\u6B64\u5185\u90E8\u4E5F\u5C31\u5B8C\u6210\u4E86 BeanDefinition \u7684\u5C01\u88C5\uFF0C\u5176\u5B9E\u91CC\u9762\u4E5F\u5C31\u662F\u4FD7\u5957\u7684\u89E3\u6790 Element \u5BF9\u8C61</span>
	<span class="token comment">// \u5E76 new \u4E00\u4E2A GenericBeanDefinition \u7136\u540E\u7ED9\u8FD9\u4E2A\u5BF9\u8C61\u8D4B\u503C\uFF0C\u5E76\u653E\u5230 dbHolder \u5F53\u4E2D</span>
	<span class="token class-name">BeanDefinitionHolder</span> bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>bdHolder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5982\u679C\u6709\u81EA\u5B9A\u4E49\u6807\u7B7E\u5219\u5904\u7406\u81EA\u5B9A\u4E49\u6807\u7B7E</span>
		bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">decorateBeanDefinitionIfRequired</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bdHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// Register the final decorated instance.</span>
			<span class="token comment">// \u5B8C\u6210\u6700\u7EC8\u7684\u88C5\u9970\u5B9E\u4F8B(BeanDefinition) \u7684\u6CE8\u518C</span>
			<span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">,</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to register bean definition with name &#39;&quot;</span> <span class="token operator">+</span>
					bdHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// Send registration event.</span>
		<span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fireComponentRegistered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanComponentDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br></div></div><p>\u5C01\u88C5\u5B8C BeanDefinition \u4E4B\u540E\uFF0C\u6211\u4EEC\u7EE7\u7EED\u6765\u5173\u6CE8\u6CE8\u518C\u7684\u6D41\u7A0B\u3002\u6765\u5230 <code>BeanDefinitionReaderUtils#registerBeanDefinition</code> \u65B9\u6CD5\u5F53\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>
		<span class="token class-name">BeanDefinitionHolder</span> definitionHolder<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

	<span class="token comment">// Register bean definition under primary name.</span>
	<span class="token class-name">String</span> beanName <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u770B\u540D\u5B57\u4E5F\u77E5\u9053\u662F\u5728\u8FD9\u91CC\u5B8C\u6210\u6CE8\u518C</span>
	registry<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Register aliases for bean name, if any.</span>
	<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliases <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>aliases <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> alias <span class="token operator">:</span> aliases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			registry<span class="token punctuation">.</span><span class="token function">registerAlias</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> alias<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u518D\u8FDB\u5165\u5230 <code>DefaultListableBeanFactory#registerBeanDefinition</code> \u65B9\u6CD5\u5F53\u4E2D\uFF0C \u53EF\u4EE5\u770B\u5230\uFF1A\u5176\u5B9E\u6240\u8C13\u7684\u6CE8\u518C\uFF0C\u4E5F\u65E0\u975E\u5C31\u662F\u505A\u4E00\u5806\u5224\u65AD\u7136\u540E\u5C06 BeanDefinition \u4FE1\u606F\u653E\u5165\u5230Map\u5F53\u4E2D\uFF1A <code>this.beanDefinitionMap.put(beanName, beanDefinition)</code>\u3002</p><p>\u5230\u6B64\uFF0C\u6CE8\u518C\u6D41\u7A0B\u7ED3\u675F\u3002</p><h3 id="\u7B2C\u4E09\u8282-bean\u521B\u5EFA\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u8282-bean\u521B\u5EFA\u6D41\u7A0B" aria-hidden="true">#</a> \u7B2C\u4E09\u8282 Bean\u521B\u5EFA\u6D41\u7A0B</h3><p>\u7531\u524D\u9762\u7684\u5206\u6790\u53EF\u77E5\uFF0CBean \u7684\u521B\u5EFA\u662F\u5728 <code>AbstractApplicationContext#finishBeanFactoryInitialization</code> \u8FD9\u4E00\u6837\u4EE3\u7801\u5904\u6267\u884C\u7684\u3002 \u6211\u4EEC\u8FDB\u5165\u5230\u6B64\u65B9\u6CD5\u5F53\u4E2D\uFF0C\u6E90\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Initialize conversion service for this context.</span>
	<span class="token comment">// BeanFactory \u4E2D\u662F\u5426\u5305\u542B\u7C7B\u578B\u8F6C\u6362\u7684 Bean</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
			beanFactory<span class="token punctuation">.</span><span class="token function">isTypeMatch</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		beanFactory<span class="token punctuation">.</span><span class="token function">setConversionService</span><span class="token punctuation">(</span>
				beanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>CONVERSION_SERVICE_BEAN_NAME<span class="token punctuation">,</span> <span class="token class-name">ConversionService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Register a default embedded value resolver if no BeanFactoryPostProcessor</span>
	<span class="token comment">// (such as a PropertySourcesPlaceholderConfigurer bean) registered any before:</span>
	<span class="token comment">// at this point, primarily for resolution in annotation attribute values.</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">hasEmbeddedValueResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		beanFactory<span class="token punctuation">.</span><span class="token function">addEmbeddedValueResolver</span><span class="token punctuation">(</span>strVal <span class="token operator">-&gt;</span> <span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolvePlaceholders</span><span class="token punctuation">(</span>strVal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.</span>
	<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> weaverAwareNames <span class="token operator">=</span> beanFactory<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">LoadTimeWeaverAware</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> weaverAwareName <span class="token operator">:</span> weaverAwareNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">getBean</span><span class="token punctuation">(</span>weaverAwareName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Stop using the temporary ClassLoader for type matching.</span>
	beanFactory<span class="token punctuation">.</span><span class="token function">setTempClassLoader</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Allow for caching all bean definition metadata, not expecting further changes.</span>
	beanFactory<span class="token punctuation">.</span><span class="token function">freezeConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Instantiate all remaining (non-lazy-init) singletons.</span>
	<span class="token comment">// \u5C06\u6240\u6709\u5269\u4F59\u7684\u975E\u61D2\u52A0\u8F7D\u7684\u5355\u4F8BBean\u5B9E\u4F8B\u5316</span>
	beanFactory<span class="token punctuation">.</span><span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u8FDB\u5165\u6700\u540E\u4E00\u884C\u4EE3\u7801\u5F53\u4E2D\uFF0C\u6765\u5230 <code>DefaultListableBeanFactory#preInstantiateSingletons</code> \u65B9\u6CD5\uFF0C\u6E90\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preInstantiateSingletons</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Pre-instantiating singletons in &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Iterate over a copy to allow for init methods which in turn register new bean definitions.</span>
	<span class="token comment">// While this may not be part of the regular factory bootstrap, it does otherwise work fine.</span>
	<span class="token comment">// \u5B58\u653E\u6240\u6709\u7684 Bean \u540D\u79F0\uFF0C\u5373\u662F Bean \u7684 id</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> beanNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Trigger initialization of all non-lazy singleton beans...</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5408\u5E76\u7236 BeanDefinition</span>
		<span class="token class-name">RootBeanDefinition</span> bd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u975E\u62BD\u8C61\u3001\u4E14\u5355\u4F8B\u3001\u4E14\u975E\u5EF6\u8FDF\u52A0\u8F7D</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isAbstract</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> bd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>bd<span class="token punctuation">.</span><span class="token function">isLazyInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFactoryBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u5982\u679C\u662F\u5DE5\u5382 Bean \u83B7\u53D6 Bean \u7684\u65F6\u5019\u5C31\u52A0\u4E0A\u524D\u7F00 &quot;&amp;&quot;</span>
				<span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">getBean</span><span class="token punctuation">(</span>FACTORY_BEAN_PREFIX <span class="token operator">+</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">FactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> factory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> bean<span class="token punctuation">;</span>
					<span class="token keyword">boolean</span> isEagerInit<span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						isEagerInit <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>
								<span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token operator">::</span><span class="token function">isEagerInit</span><span class="token punctuation">,</span>
								<span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">else</span> <span class="token punctuation">{</span>
						isEagerInit <span class="token operator">=</span> <span class="token punctuation">(</span>factory <span class="token keyword">instanceof</span> <span class="token class-name">SmartFactoryBean</span> <span class="token operator">&amp;&amp;</span>
								<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartFactoryBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> factory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEagerInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>isEagerInit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u666E\u901A Bean \u5219\u76F4\u63A5\u83B7\u53D6</span>
				<span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Trigger post-initialization callback for all applicable beans...</span>
	<span class="token comment">// balabala ... \u6682\u65F6\u770B\u4E0D\u61C2\u7684\u4E1C\u897F</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><blockquote><p>\u5728\u5224\u65AD\u662F\u5426\u4E3A\u5DE5\u5382\u7C7B\u65F6\uFF0C\u8C03\u7528\u4E86 <code>AbstractBeanFactory#isFactoryBean(java.lang.String)</code> \u65B9\u6CD5\u3002 \u5176\u4E2D\u8C03\u7528\u4E86\u65B9\u6CD5\uFF1A <code>java.lang.Class#isAssignableFrom</code>, \u5728\u6B64\u5C06\u6B64\u65B9\u6CD5\u4E0E instanceof \u5173\u952E\u5B57\u505A\u6BD4\u8F83\uFF1A</p><ul><li>isAssignableFrom()\u65B9\u6CD5\u662F\u4ECE\u7C7B\u7EE7\u627F\u7684\u89D2\u5EA6\u53BB\u5224\u65AD\uFF1Binstanceof\u5173\u952E\u5B57\u662F\u4ECE\u5B9E\u4F8B\u7EE7\u627F\u7684\u89D2\u5EA6\u53BB\u5224\u65AD\u3002</li><li>isAssignableFrom()\u65B9\u6CD5\u662F\u5224\u65AD\u662F\u5426\u4E3A\u67D0\u4E2A\u7C7B\u7684\u7236\u7C7B\uFF1Binstanceof\u5173\u952E\u5B57\u662F\u5224\u65AD\u662F\u5426\u67D0\u4E2A\u7C7B\u7684\u5B50\u7C7B\u3002</li></ul></blockquote><p>\u65E0\u8BBA\u662F\u5426\u5DE5\u5382\u7C7B\uFF0C\u6700\u7EC8\u90FD\u8C03\u7528\u4E86 <code>getBean</code> \u65B9\u6CD5\uFF0C\u7EE7\u7EED\u8FDB\u5165\u5230 <code>AbstractBeanFactory#getBean</code> \u5F53\u4E2D\uFF0C\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
    <span class="token comment">// doXxx !!! \u771F\u6B63\u5E72\u6D3B\u7684\u6765\u4E86\u3002</span>
	<span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FDB\u5165\u5230\u771F\u6B63\u5E72\u6D3B\u7684\u65B9\u6CD5\u5F53\u4E2D</span>
<span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>
		<span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token keyword">boolean</span> typeCheckOnly<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

	<span class="token comment">// \u8F6C\u6362BeanName\uFF1A\u5982\u679C\u4EE5 &amp; \u5F00\u5934\u7684\uFF0C\u5219\u53BB\u6389\u524D\u7F00\uFF1B\u5982\u679C\u662F\u522B\u540D\u7684\uFF0C\u5219\u83B7\u53D6\u5230 Bean \u7684\u771F\u5B9E\u540D\u5B57</span>
	<span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token function">transformedBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Object</span> beanInstance<span class="token punctuation">;</span>

	<span class="token comment">// Eagerly check singleton cache for manually registered singletons.</span>
	<span class="token comment">// \u5C1D\u8BD5\u4ECE\u5355\u4F8B\u6C60(singletonObjects)\u4E2D\u901A\u8FC7 BeanName \u83B7\u53D6 Bean</span>
	<span class="token class-name">Object</span> sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5982\u679C\u83B7\u53D6\u6210\u529F,\u5219\u76F4\u63A5\u8FD4\u56DE</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>sharedInstance <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> args <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Returning eagerly cached instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
						<span class="token string">&quot;&#39; that is not fully initialized yet - a consequence of a circular reference&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">else</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Returning cached instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u9488\u5BF9 FactoryBean \u3010\u5177\u4F53\u7684\u5176\u5B9E\u770B\u7684\u4E0D\u662F\u5F88\u61C2\u3011</span>
		beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Fail if we&#39;re already creating this bean instance:</span>
		<span class="token comment">// We&#39;re assumably within a circular reference.</span>
		<span class="token comment">// \u4EE5\u9632\u5DF2\u7ECF\u521B\u5EFA\u8FC7 Bean \u5B9E\u4F8B\uFF0C\u6240\u4EE5\u5982\u679C\u662F Prototype \u7C7B\u578B\u6216\u8005\u6709\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u90FD\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototypeCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// Check if bean definition exists in this factory.</span>
		<span class="token comment">// \u68C0\u67E5\u5DE5\u5382\u4E2D\u662F\u5426\u6709\u8FD9\u4E2A BeanDefinition</span>
		<span class="token class-name">BeanFactory</span> parentBeanFactory <span class="token operator">=</span> <span class="token function">getParentBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">containsBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// Not found -&gt; check parent.</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>typeCheckOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">markBeanAsCreated</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token class-name">StartupStep</span> beanCreation <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.beans.instantiate&quot;</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;beanName&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;beanType&quot;</span><span class="token punctuation">,</span> requiredType<span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u5408\u5E76\u7236\u5B50 Bean \u7684\u5C5E\u6027</span>
			<span class="token class-name">RootBeanDefinition</span> mbd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">checkMergedBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// Guarantee initialization of beans that the current bean depends on.</span>
			<span class="token comment">// \u5904\u7406 dependsOn \u914D\u7F6E (\u53EF\u4EE5\u6307\u5B9A Bean A \u5728\u521B\u5EFA\u4E4B\u524D,\u5148\u521B\u5EFA Bean B)</span>
			<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dependsOn <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getDependsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>dependsOn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dep <span class="token operator">:</span> dependsOn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// ... </span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// Create bean instance.</span>
			<span class="token comment">// \u{1F31F} \u521B\u5EFA\u5355\u4F8B Bean</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">try</span> <span class="token punctuation">{</span>
						<span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">// Explicitly remove instance from singleton cache: It might have been put there</span>
						<span class="token comment">// eagerly by the creation process, to allow for circular reference resolution.</span>
						<span class="token comment">// Also remove any beans that received a temporary reference to the bean.</span>
						<span class="token function">destroySingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// It&#39;s a prototype -&gt; create a new instance.</span>
				<span class="token class-name">Object</span> prototypeInstance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					<span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
					prototypeInstance <span class="token operator">=</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">finally</span> <span class="token punctuation">{</span>
					<span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>prototypeInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u6211\u4EEC\u5F53\u524D\u53EA\u5173\u6CE8 \u5355\u4F8B \u548C \u539F\u578B\u4E24\u79CD\u7C7B\u578B\u7684 Bean\uFF0C\u5176\u4ED6\u7684\u6682\u65F6\u5FFD\u7565</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;exception&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">cleanupAfterBeanCreationFailure</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">finally</span> <span class="token punctuation">{</span>
			beanCreation<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token function">adaptBeanInstance</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> beanInstance<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br></div></div><p>\u7EE7\u7EED\u8FDB\u5165\u5230 <code>DefaultSingletonBeanRegistry#getSingleton</code> \u65B9\u6CD5\u5F53\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> singletonFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token string">&quot;Bean name must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u518D\u8BD5\u8BD5\u5355\u4F8B\u6C60\u5F53\u4E2D\u6709\u6CA1\u6709</span>
		<span class="token class-name">Object</span> singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5982\u679C\u4ECD\u7136\u6CA1\u6709\uFF0C\u5219\u7EE7\u7EED\uFF1B\u5426\u5219\u76F4\u63A5\u8FD4\u56DE</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u662F\u5426\u6B63\u5728\u9500\u6BC1\uFF1F\u629B\u51FA\u5F02\u5E38\uFF1A\u7EE7\u7EED</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonsCurrentlyInDestruction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationNotAllowedException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span>
						<span class="token string">&quot;Singleton bean creation not allowed while singletons of this factory are in destruction &quot;</span> <span class="token operator">+</span>
						<span class="token string">&quot;(Do not request a bean from a BeanFactory in a destroy method implementation!)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Creating shared instance of singleton bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u5355\u4F8B\u5BF9\u8C61\u521B\u5EFA\u524D\uFF1A\u6807\u8BC6\u4E00\u4E0B\u8BE5 Bean \u6B63\u5728\u88AB\u521B\u5EFA(\u5176\u5B9E\u5C31\u662F\u5F80 \`singletonsCurrentlyInCreation\` \u8FD9\u4E2ASet\u96C6\u5408\u4E2D\u52A0\u5165\u5F53\u524D Bean Name)\u3002</span>
			<span class="token comment">// \u56E0\u4E3A\u521B\u5EFA\u8FC7\u7A0B\u590D\u6742\uFF0C\u6B65\u9AA4\u5F88\u591A\uFF0C\u9700\u8981\u8FD9\u4E48\u4E2A\u6807\u8BC6</span>
			<span class="token function">beforeSingletonCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">boolean</span> newSingleton <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">boolean</span> recordSuppressedExceptions <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>suppressedExceptions <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>recordSuppressedExceptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>suppressedExceptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token comment">// singletonFactory \u662F\u901A\u8FC7\u53C2\u6570\u4F20\u5165\u7684\u3002</span>
				<span class="token comment">// \u8FD9\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u5176\u5B9E\u73B0\u5C31\u662F\u8C03\u7528\u65B9\u6CD5\u65F6\u4F20\u5165\u7684 createBean(beanName, mbd, args);</span>
				singletonObject <span class="token operator">=</span> singletonFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				newSingleton <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// ...</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// ...</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">finally</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>recordSuppressedExceptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>suppressedExceptions <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token function">afterSingletonCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>newSingleton<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">addSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> singletonObject<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>\u6211\u4EEC\u7EE7\u7EED\u8FDB\u5165\u5230 <code>AbstractAutowireCapableBeanFactory#createBean</code> \u65B9\u6CD5\u5F53\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">createBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span> <span class="token punctuation">{</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">RootBeanDefinition</span> mbdToUse <span class="token operator">=</span> mbd<span class="token punctuation">;</span>

	<span class="token comment">// Make sure bean class is actually resolved at this point, and</span>
	<span class="token comment">// clone the bean definition in case of a dynamically resolved Class</span>
	<span class="token comment">// which cannot be stored in the shared merged bean definition.</span>
	<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resolvedClass <span class="token operator">=</span> <span class="token function">resolveBeanClass</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>resolvedClass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">hasBeanClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> mbd<span class="token punctuation">.</span><span class="token function">getBeanClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mbdToUse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RootBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
		mbdToUse<span class="token punctuation">.</span><span class="token function">setBeanClass</span><span class="token punctuation">(</span>resolvedClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Prepare method overrides.</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		mbdToUse<span class="token punctuation">.</span><span class="token function">prepareMethodOverrides</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// ... }</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.</span>
		<span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token function">resolveBeforeInstantiation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// ... }</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u{1F31F} doXxx !!! \u771F\u6B63\u5E72\u6D3B\u7684\u6765\u4E86</span>
		<span class="token class-name">Object</span> beanInstance <span class="token operator">=</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbdToUse<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Finished creating instance of bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> beanInstance<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span> <span class="token operator">|</span> <span class="token class-name">ImplicitlyAppearedSingletonException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// ... }</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// ... }</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FDB\u5165\u5230\u771F\u6B63\u5E72\u6D3B\u7684\u65B9\u6CD5\u5F53\u4E2D</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">doCreateBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeanCreationException</span> <span class="token punctuation">{</span>

	<span class="token comment">// Instantiate the bean.</span>
	<span class="token class-name">BeanWrapper</span> instanceWrapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		instanceWrapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>factoryBeanInstanceCache<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>instanceWrapper <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u521B\u5EFA Bean \u5B9E\u4F8B (\u4EC5\u4EC5\u662F\u7B80\u5355\u8C03\u7528\u4E86\u65E0\u53C2\u6784\u9020\uFF0C\u5E76\u672A\u8BBE\u7F6E\u5C5E\u6027)</span>
		instanceWrapper <span class="token operator">=</span> <span class="token function">createBeanInstance</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token class-name">Object</span> bean <span class="token operator">=</span> instanceWrapper<span class="token punctuation">.</span><span class="token function">getWrappedInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanType <span class="token operator">=</span> instanceWrapper<span class="token punctuation">.</span><span class="token function">getWrappedClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>beanType <span class="token operator">!=</span> <span class="token class-name">NullBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		mbd<span class="token punctuation">.</span>resolvedTargetType <span class="token operator">=</span> beanType<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Allow post-processors to modify the merged bean definition.</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span>postProcessingLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mbd<span class="token punctuation">.</span>postProcessed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5408\u5E76 Bean Definition \u7684\u540E\u7F6E\u5904\u7406\u5668\u4FE1\u606F ...</span>
			mbd<span class="token punctuation">.</span>postProcessed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Eagerly cache singletons to be able to resolve circular references</span>
	<span class="token comment">// even when triggered by lifecycle interfaces like BeanFactoryAware.</span>
	<span class="token keyword">boolean</span> earlySingletonExposure <span class="token operator">=</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allowCircularReferences <span class="token operator">&amp;&amp;</span>
			<span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonExposure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5904\u7406\u5FAA\u73AF\u4F9D\u8D56\u76F8\u5173 ... </span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Initialize the bean instance.</span>
	<span class="token class-name">Object</span> exposedObject <span class="token operator">=</span> bean<span class="token punctuation">;</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u586B\u5145 Bean \u5C5E\u6027(\u5982\uFF1A\u5904\u7406\u81EA\u52A8\u88C5\u914D)</span>
		<span class="token function">populateBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> instanceWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u89E6\u53D1 xxAware \u65B9\u6CD5\u8C03\u7528\u3001\u83B7\u53D6 BeanPostProcessors \u5E76\u89E6\u53D1 before \u65B9\u6CD5\u8C03\u7528\u3001init-method \u65B9\u6CD5\u8C03\u7528\u3001\u83B7\u53D6 BeanPostProcessors \u5E76\u89E6\u53D1 after \u65B9\u6CD5\u8C03\u7528</span>
		exposedObject <span class="token operator">=</span> <span class="token function">initializeBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> exposedObject<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">BeanCreationException</span> <span class="token operator">&amp;&amp;</span> beanName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span><span class="token punctuation">)</span> ex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token class-name">BeanCreationException</span><span class="token punctuation">)</span> ex<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
					mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Initialization of bean failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonExposure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5E94\u8BE5\u8FD8\u662F\u5904\u7406\u5FAA\u73AF\u4F9D\u8D56</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Register bean as disposable.</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token function">registerDisposableBeanIfNecessary</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
				mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token string">&quot;Invalid destruction signature&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> exposedObject<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>\u5230\u6B64\uFF0CBean \u521B\u5EFA\u7684\u751F\u547D\u5468\u671F\u5B8C\u6210\u3002</p><h3 id="\u7B2C\u56DB\u8282-lazy-init-\u5EF6\u8FDF\u52A0\u8F7D\u673A\u5236\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u8282-lazy-init-\u5EF6\u8FDF\u52A0\u8F7D\u673A\u5236\u539F\u7406" aria-hidden="true">#</a> \u7B2C\u56DB\u8282 lazy-init \u5EF6\u8FDF\u52A0\u8F7D\u673A\u5236\u539F\u7406</h3><p>\u666E\u901A Bean \u7684\u521D\u59CB\u5316\u662F\u5728\u5BB9\u5668\u542F\u52A8\u521D\u59CB\u5316\u9636\u6BB5\u6267\u884C\u7684\uFF0C \u800C\u88AB lazy-init=true \u4FEE\u9970\u7684 bean \u5219\u662F\u5728\u4ECE\u5BB9\u5668\u91CC\u7B2C\u4E00\u6B21\u8FDB\u884C context.getBean() \u65F6\u8FDB\u884C\u89E6\u53D1\u3002</p><p>Spring \u542F\u52A8\u7684\u65F6\u5019\u4F1A\u628A\u6240\u6709 Bean \u4FE1\u606F(\u5305\u62ECXML\u548C\u6CE8\u89E3)\u89E3\u6790\u8F6C\u5316\u6210 Spring \u80FD\u591F\u8BC6\u522B\u7684 BeanDefinition\uFF0C \u5E76\u5B58\u5230 Hashmap(beanDefinitionMap) \u91CC\u4F9B\u4E0B\u9762\u7684\u521D\u59CB\u5316\u65F6\u7528\uFF0C \u7136\u540E\u5BF9\u6BCF\u4E2A BeanDefinition \u8FDB\u884C\u5904\u7406\uFF0C\u5982\u679C\u662F\u61D2\u52A0\u8F7D\u7684\u5219\u5728\u5BB9\u5668\u521D\u59CB\u5316\u9636\u6BB5\u4E0D\u5904\u7406\uFF0C\u5176\u4ED6\u7684\u5219\u5728\u5BB9\u5668\u521D\u59CB\u5316\u9636\u6BB5\u8FDB\u884C\u521D\u59CB\u5316\u5E76\u4F9D\u8D56\u6CE8\u5165\u3002</p><p>\u56E0\u4E3A\u5728 <code>DefaultListableBeanFactory#preInstantiateSingletons</code> \u5F53\u4E2D\u6DFB\u52A0\u4E86 <code>!bd.isLazyInit()</code> \u7684\u6761\u4EF6\u5224\u65AD\uFF0C \u6EE1\u8DB3\u5219\u7EE7\u7EED\u5B9E\u4F8B\u5316\u5E76\u7F13\u5B58 Bean\uFF0C\u5426\u5219\u5C06\u4E0D\u505A\u4EFB\u4F55\u5904\u7406\u3002\u61D2\u52A0\u8F7D\u7684 Bean \u5728\u5BB9\u5668\u521D\u59CB\u5316\u9636\u6BB5\u4E0D\u505A\u5B9E\u4F8B\u5316\u5E76\u7F13\u5B58\u7684\u5904\u7406\uFF0C\u5C31\u6B64\u5B8C\u6210\u3002</p><p>\u8C03\u7528 getBean \u65B9\u6CD5\u65F6\uFF0C\u4F1A\u8FDB\u5165 <code>AbstractBeanFactory#doGetBean</code>\u3002 \u5982\u679C\u662F\u666E\u901A Bean\uFF0C\u6B64\u65F6\u5355\u4F8B\u6C60\u4E2D\u5DF2\u7ECF\u6709\u5B9E\u4F8B\u53EF\u7528\uFF0C\u4F1A\u76F4\u63A5\u8FD4\u56DE\u3002 \u5982\u679C\u662F lazy-init \u7684Bean\uFF0C\u6B64\u65F6\u4F1A\u901A\u8FC7\u548C\u666E\u901A Bean \u521B\u5EFA\u540C\u6837\u7684\u903B\u8F91\u5B9E\u4F8B\u5316 Bean \u5E76\u8FD4\u56DE\u3002</p><ul><li>\u5BF9\u4E8E\u88AB\u4FEE\u9970\u4E3Alazy-init\u7684 Bean, Spring \u5BB9\u5668\u521D\u59CB\u5316\u9636\u6BB5\u4E0D\u4F1A\u8FDB\u884C init \u5E76\u4E14\u4F9D\u8D56\u6CE8\u5165\uFF0C\u5F53\u7B2C\u4E00\u6B21\u8FDB\u884C getBean \u65F6\u5019\u624D\u8FDB\u884C\u521D\u59CB\u5316\u5E76\u4F9D\u8D56\u6CE8\u5165 \u3002</li><li>\u5BF9\u4E8E\u975E\u61D2\u52A0\u8F7D\u7684 Bean\uFF0CgetBean \u7684\u65F6\u5019\u4F1A\u4ECE\u7F13\u5B58\u91CC\u5934\u83B7\u53D6\uFF0C\u56E0\u4E3A\u5BB9\u5668\u521D\u59CB\u5316\u9636\u6BB5 Bean \u5DF2\u7ECF\u521D\u59CB\u5316\u5B8C\u6210\u5E76\u7F13\u5B58\u5230\u4E86\u5355\u4F8B\u6C60(<code>singletonObjects</code>)\u4E2D\u3002</li></ul><h3 id="\u7B2C\u4E94\u8282-spring-ioc\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E94\u8282-spring-ioc\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898" aria-hidden="true">#</a> \u7B2C\u4E94\u8282 Spring IoC\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898</h3><h4 id="_5-1-\u4EC0\u4E48\u662F\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_5-1-\u4EC0\u4E48\u662F\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> 5.1 \u4EC0\u4E48\u662F\u5FAA\u73AF\u4F9D\u8D56</h4><p>\u5FAA\u73AF\u4F9D\u8D56\u5176\u5B9E\u5C31\u662F\u5FAA\u73AF\u5F15\u7528\uFF0C\u4E5F\u5C31\u662F\u4E24\u4E2A\u6216\u8005\u4E24\u4E2A\u4EE5\u4E0A\u7684 Bean \u4E92\u76F8\u6301\u6709\u5BF9\u65B9\uFF0C\u6700\u7EC8\u5F62\u6210\u95ED\u73AF\u3002<br> \u6BD4\u5982A \u4F9D\u8D56\u4E8EB\uFF0CB\u4F9D\u8D56\u4E8EC\uFF0CC\u53C8\u4F9D\u8D56\u4E8EA\u3002</p><blockquote><p>\u6CE8\u610F\uFF1A\u8FD9\u91CC\u4E0D\u662F\u51FD\u6570\u7684\u5FAA\u73AF\u8C03\u7528\uFF0C\u662F\u5BF9\u8C61\u7684\u76F8\u4E92\u4F9D\u8D56\u5173\u7CFB\u3002\u5FAA\u73AF\u8C03\u7528\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u9664\u975E\u6709\u7EC8\u7ED3\u6761\u4EF6\u3002</p></blockquote><p>Spring\u4E2D\u5FAA\u73AF\u4F9D\u8D56\u573A\u666F\u6709:</p><ul><li>\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56(\u6784\u9020\u5668\u6CE8\u5165)</li><li>Field \u5C5E\u6027\u7684\u5FAA\u73AF\u4F9D\u8D56(set\u6CE8\u5165)</li></ul><p>\u5176\u4E2D\uFF0C\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\u65E0\u6CD5\u89E3\u51B3\uFF0C\u53EA\u80FD\u62CB\u51FA BeanCurrentlyInCreationException \u5F02\u5E38\uFF1B \u5728\u89E3\u51B3\u5C5E\u6027\u5FAA\u73AF\u4F9D\u8D56\u65F6\uFF0CSpring \u91C7\u7528\u7684\u662F\u63D0\u524D\u66B4\u9732\u5BF9\u8C61\u7684\u65B9\u6CD5\u3002</p><p><strong>\u5FAA\u73AF\u4F9D\u8D56\u89E3\u51B3</strong></p><p>\u65E0\u6CD5\u89E3\u51B3\uFF1A</p><ul><li>\u5355\u4F8B singleton bean \u6784\u9020\u5668\u53C2\u6570\u5FAA\u73AF\u4F9D\u8D56(\u65E0\u6CD5\u89E3\u51B3)</li><li>\u539F\u578B prototype bean \u5FAA\u73AF\u4F9D\u8D56(\u65E0\u6CD5\u89E3\u51B3)</li></ul><p>\u53EF\u4EE5\u89E3\u51B3\uFF1A</p><ul><li>\u5355\u4F8Bbean\u901A\u8FC7setXxx\u6216\u8005@Autowired\u8FDB\u884C\u5FAA\u73AF\u4F9D\u8D56</li></ul><h4 id="_5-2-\u5FAA\u73AF\u4F9D\u8D56\u5904\u7406\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_5-2-\u5FAA\u73AF\u4F9D\u8D56\u5904\u7406\u673A\u5236" aria-hidden="true">#</a> 5.2 \u5FAA\u73AF\u4F9D\u8D56\u5904\u7406\u673A\u5236</h4><p>Spring \u7684\u5FAA\u73AF\u4F9D\u8D56\u7684\u7406\u8BBA\u4F9D\u662F Java \u7684\u5F15\u7528\u4F20\u9012\u3002 \u5F53\u83B7\u5F97\u5BF9\u8C61\u7684\u5F15\u7528\u65F6\uFF0C\u5BF9\u8C61\u7684\u5C5E\u6027\u662F\u53EF\u4EE5\u5EF6\u540E\u8BBE\u7F6E\u7684\uFF0C\u4F46\u662F\u6784\u9020\u5668\u5FC5\u987B\u662F\u5728\u83B7\u53D6\u5F15\u7528\u4E4B\u524D\u3002</p><p>Spring \u901A\u8FC7 setXxx \u6216\u8005 @Autowired \u65B9\u6CD5\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5176\u5B9E\u662F\u901A\u8FC7\u63D0\u524D\u66B4\u9732\u4E00\u4E2A ObjectFactory \u5BF9\u8C61\u6765\u5B8C\u6210\u7684\u3002 \u7B80\u5355\u6765\u8BF4 ClassA \u5728\u8C03\u7528\u6784\u9020\u5668\u5B8C\u6210\u5BF9\u8C61\u521D\u59CB\u5316\u4E4B\u540E\uFF0C\u5728\u8C03\u7528 ClassA \u7684 setClassB \u65B9\u6CD5\u4E4B\u524D\u5C31\u628A ClassA \u5B9E\u4F8B\u5316\u7684\u5BF9\u8C61\u901A\u8FC7 ObjectFactory \u63D0\u524D\u66B4\u9732\u5230Spring\u5BB9\u5668\u4E2D\u3002</p><p>\u5982\uFF1A\u73B0\u6709 ClassA \u4F9D\u8D56\u4E8E ClassB\uFF0CClassB \u53C8\u4F9D\u8D56\u4E8E ClassA\u3002<br> ClassA \u5B9E\u4F8B\u5316\u65F6\uFF0C\u8C03\u7528\u5B8C\u6784\u9020\u65B9\u6CD5\u540E\u5C06\u81EA\u5DF1\u653E\u5230\u4E09\u7EA7\u7F13\u5B58\u4E2D\u3002 \u5728\u8BBE\u503C\u65F6\u53D1\u73B0\u4F9D\u8D56\u4E8E ClassB\uFF0C\u6B64\u65F6\u53EF\u4EE5\u53BB\u4E09\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6\u5C1A\u672A\u5B8C\u6210\u8BBE\u503C\u7684 BeanA\uFF0C\u540C\u65F6\u5C06 BeanA \u5347\u7EA7\u5230\u4E8C\u7EA7\u7F13\u5B58\u4E2D\u3002 BeanB \u521B\u5EFA\u5B8C\u6210\u540E\uFF0C\u4F1A\u653E\u5165\u4E00\u7EA7\u7F13\u5B58(singletonObjects)\u3002BeanA \u518D\u4ECE\u4E00\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6 BeanB \u5B8C\u6210\u8BBE\u503C\u3002</p><blockquote><p>\u611F\u89C9\u4E0A\uFF0C\u53EA\u9700\u8981\u4E8C\u7EA7\u7F13\u5B58\u5C31\u591F\u4E86\u3002\u8FD9\u6837\u8BBE\u8BA1\uFF0C\u662F\u56E0\u4E3A\u5728\u4ECE\u4E09\u7EA7\u7F13\u5B58\u5411\u4E8C\u7EA7\u7F13\u5B58\u5347\u7EA7\u7684\u65F6\u5019\uFF0C\u8FD8\u53EF\u4EE5\u901A\u8FC7\u6269\u5C55\u63A5\u53E3\u6DFB\u52A0\u5176\u4ED6\u64CD\u4F5C\u3002</p></blockquote><p>\u73B0\u5728\u6211\u4EEC\u8FDB\u5165\u6E90\u7801\uFF1A</p><p>\u5728 <code>AbstractAutowireCapableBeanFactory#doCreateBean</code> \u65B9\u6CD5\u5F53\u4E2D, \u6267\u884C\u5B8C Bean \u521D\u59CB\u5316\u6784\u5EFA(\u7B80\u5355\u6267\u884C\u6784\u9020\u65B9\u6CD5)\u540E\uFF0C\u6709\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Eagerly cache singletons to be able to resolve circular references</span>
<span class="token comment">// even when triggered by lifecycle interfaces like BeanFactoryAware.</span>
<span class="token keyword">boolean</span> earlySingletonExposure <span class="token operator">=</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>allowCircularReferences <span class="token operator">&amp;&amp;</span>
		<span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>earlySingletonExposure<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Eagerly caching bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
				<span class="token string">&quot;&#39; to allow for resolving potential circular references&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">addSingletonFactory</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5728\u6B64\u6BB5\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u662F\u5355\u4F8BBean\u3001\u5141\u8BB8\u5FAA\u73AF\u4F9D\u8D56\u3001\u800C\u4E14\u6B63\u5728\u6784\u5EFA\u4E2D\uFF0C\u5219\u4F1A\u5C06 Bean \u6DFB\u52A0\u5230\u4E09\u7EA7\u7F13\u5B58(singletonFactory)\u5F53\u4E2D\uFF0C \u5176\u4EE3\u7801\u5B9E\u73B0 <code>DefaultSingletonBeanRegistry#addSingletonFactory</code> \u4E5F\u5F88\u7B80\u5355\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addSingletonFactory</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> singletonFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>singletonFactory<span class="token punctuation">,</span> <span class="token string">&quot;Singleton factory must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>registeredSingletons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>BeanA \u521D\u59CB\u5316\u6784\u5EFA\u5B8C\u6210\u5E76\u52A0\u5165\u4E09\u7EA7\u7F13\u5B58\u4E2D\u4EE5\u540E\uFF0C\u5BF9BeanB\u7684\u4F9D\u8D56\u4F53\u73B0\u5728 BeanB \u662F BeanA \u7684\u5C5E\u6027\uFF0C \u6240\u4EE5\u5904\u7406\u4F9D\u8D56\u95EE\u9898\uFF0C\u5B9E\u9645\u4E0A\u5C31\u5728\u8BBE\u7F6E\u5C5E\u6027\u7684\u4EE3\u7801\u4E2D\u3002\u6211\u4EEC\u7EE7\u7EED\u89C2\u5BDF\u8BBE\u7F6E\u5C5E\u6027\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">populateBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">BeanWrapper</span> bw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">// ... \u8FD9\u91CC\u6709\u4E00\u5927\u6BB5\u4EE3\u7801\uFF0C\u4F46\u662F\u4E0E\u6211\u4EEC\u6B64\u884C\u65E0\u5173\uFF0C\u6211\u4EEC\u76F4\u63A5\u8FDB\u5165\u6700\u540E\u4E00\u884C\u7684\u4EE3\u7801\u5F53\u4E2D</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span>pvs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">applyPropertyValues</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bw<span class="token punctuation">,</span> pvs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FDB\u5165\u5230 <code>AbstractAutowireCapableBeanFactory#applyPropertyValues</code> \u65B9\u6CD5\u5F53\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> propertyName <span class="token operator">=</span> pv<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> originalValue <span class="token operator">=</span> pv<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>originalValue <span class="token operator">==</span> <span class="token class-name">AutowiredPropertyMarker</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">Method</span> writeMethod <span class="token operator">=</span> bw<span class="token punctuation">.</span><span class="token function">getPropertyDescriptor</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWriteMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>writeMethod <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Autowire marker for property without write method: &quot;</span> <span class="token operator">+</span> pv<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	originalValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DependencyDescriptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodParameter</span><span class="token punctuation">(</span>writeMethod<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5904\u7406\u4F9D\u8D56</span>
<span class="token class-name">Object</span> resolvedValue <span class="token operator">=</span> valueResolver<span class="token punctuation">.</span><span class="token function">resolveValueIfNecessary</span><span class="token punctuation">(</span>pv<span class="token punctuation">,</span> originalValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> convertedValue <span class="token operator">=</span> resolvedValue<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FDB\u5165\u5904\u7406\u4F9D\u8D56\u7684\u65B9\u6CD5 <code>BeanDefinitionValueResolver#resolveValueIfNecessary</code> \u5F53\u4E2D\uFF0C\u4F1A\u8FDB\u5165\u5982\u4E0B\u5206\u652F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// We must check each value to see whether it requires a runtime reference</span>
<span class="token comment">// to another bean to be resolved.</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">RuntimeBeanReference</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">RuntimeBeanReference</span> ref <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeBeanReference</span><span class="token punctuation">)</span> value<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">resolveReference</span><span class="token punctuation">(</span>argName<span class="token punctuation">,</span> ref<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7EE7\u7EED\u8FDB\u5165 <code>BeanDefinitionValueResolver#resolveReference</code> \u5F53\u4E2D\uFF0C\u53EF\u4EE5\u53D1\u73B0\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u7684 Object \u90FD\u662F\u901A\u8FC7 <code>AbstractBeanFactory#getBean(java.lang.String)</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u3002\u800C\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u76F8\u5F53\u719F\u6089\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
	<span class="token comment">// doXxx !!! \u771F\u6B63\u5E72\u6D3B\u7684\u6765\u4E86\u3002</span>
	<span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6B64\u65F6\uFF0C\u901A\u8FC7\u8C03\u7528 <code>getBean</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6BeanA\u6240\u4F9D\u8D56\u7684BeanB\u3002</p><p>\u548C BeanA \u4E00\u6837\uFF0C\u5728\u7ED9 BeanB \u8BBE\u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u53D1\u73B0\u5728 BeanB \u540C\u6837\u4F9D\u8D56 BeanA\uFF0C\u53C8\u56DE\u7ECF\u8FC7\u540C\u6837\u7684\u6D41\u7A0B\u8FDB\u5165\u5230\u6B64\u5730\u3002</p><p>\u5E26\u7740\u65B0\u7684\u5173\u6CE8\u70B9\uFF0C\u8FDB\u5165\u719F\u6089\u7684\u65B9\u6CD5\u5F53\u4E2D\u3002\u8FD9\u4E00\u6B21\u6211\u4EEC\u9996\u5148\u5173\u6CE8\u8FD9\u4E00\u884C\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Eagerly check singleton cache for manually registered singletons.</span>
<span class="token comment">// \u5C1D\u8BD5\u4ECE\u5355\u4F8B\u6C60(singletonObjects)\u4E2D\u901A\u8FC7 BeanName \u83B7\u53D6 Bean</span>
<span class="token class-name">Object</span> sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FDB\u5165\u5176\u5B9E\u73B0 <code>DefaultSingletonBeanRegistry#getSingleton(java.lang.String, boolean)</code> \u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">boolean</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// Quick check for existing instance without full singleton lock</span>
	<span class="token class-name">Object</span> singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// Consistent creation of early reference within full singleton lock</span>
				singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> singletonFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>singletonFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							singletonObject <span class="token operator">=</span> singletonFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> singletonObject<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p>\u901A\u8FC7\u6B64\u5904\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E3A\u4EC0\u4E48\u6211\u4EEC\u79F0 <code>singletonObjects</code> \u4E3A\u4E00\u7EA7\u7F13\u5B58\u3001 <code>earlySingletonObjects</code> \u4E3A\u4E8C\u7EA7\u7F13\u5B58\uFF0C<code>singletonFactories</code> \u4E3A\u4E09\u7EA7\u7F13\u5B58\u3002</p></blockquote><p>\u901A\u8FC7\u6B64\u65B9\u6CD5\uFF0CBeanB \u4F1A\u83B7\u53D6\u5230\u591A\u4F9D\u8D56\u7684(\u672A\u6210\u5F62\u7684) BeanA\u3002BeanB \u8BBE\u503C\u5B8C\u6210\u540E\u4F1A\u5C06\u5176\u653E\u5165\u4E00\u7EA7\u7F13\u5B58\u4E2D\uFF1A</p><p>DefaultSingletonBeanRegistry#addSingleton \u6E90\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> singletonObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>registeredSingletons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>BeanB \u6784\u5EFA\u7EC4\u88C5\u5B8C\u6210\u540E\uFF0CBeanA \u4E5F\u53EF\u4EE5\u987A\u5229\u5B8C\u6210\u88C5\u914D\u5E76\u5347\u7EA7\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D\u3002</p><hr><h2 id="spring-aop-\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#spring-aop-\u5E94\u7528" aria-hidden="true">#</a> Spring AOP \u5E94\u7528</h2><blockquote><p>AOP \u672C\u8D28\uFF1A\u5728\u4E0D\u6539\u53D8\u539F\u6709\u4E1A\u52A1\u903B\u8F91\u7684\u60C5\u51B5\u4E0B\u589E\u5F3A\u6A2A\u5207\u903B\u8F91\u3002 \u4F7F\u7528\u573A\u666F\uFF1A\u6A2A\u5207\u903B\u8F91\u4EE3\u7801\u5F80\u5F80\u662F\u6743\u9650\u6821\u9A8C\u4EE3\u7801\u3001\u65E5\u5FD7\u4EE3\u7801\u3001\u4E8B\u52A1\u63A7\u5236\u4EE3\u7801\u3001\u6027\u80FD\u76D1\u63A7\u4EE3\u7801\u3002</p></blockquote><h3 id="\u7B2C\u4E00\u8282-aop-\u76F8\u5173\u672F\u8BED" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u8282-aop-\u76F8\u5173\u672F\u8BED" aria-hidden="true">#</a> \u7B2C\u4E00\u8282 AOP \u76F8\u5173\u672F\u8BED</h3><p>\u4E3A\u4EC0\u4E48\u53EB\u505A\u9762\u5411\u5207\u9762\u7F16\u7A0B\uFF1F \u5982\u679C\u628A\u8F6F\u4EF6\u6D41\u7A0B\u5FC5\u505A\u7011\u5E03\u7684\u8BDD\uFF0C\u50CF\u6743\u9650\u6821\u9A8C\u3001\u4E8B\u52A1\u7684\u5F00\u542F\u548C\u63D0\u4EA4\u7B49\u8FD9\u4E9B\u529F\u80FD\uFF0C\u662F\u6BCF\u4E00\u4E2A\u529F\u80FD\u90FD\u9700\u8981\u7684\u3002\u800C\u4E14\u90FD\u662F\u5728\u6838\u5FC3\u529F\u80FD\u7684\u524D\u540E\u3002 \u628A\u6BCF\u4E2A\u6838\u5FC3\u529F\u80FD\u7684\u8FD9\u4E9B\u5916\u56F4\u529F\u80FD\u8FDE\u63A5\u8D77\u6765\u7684\u8BDD\uFF0C\u5C31\u50CF\u662F\u88AB\u5207\u5F00\u4E86\u4E00\u6837\u3002</p><p>\u6709\u4E9B\u4E66\u4E0A\u8BF4\uFF0C\u9762\u5411\u5207\u9762\u7F16\u7A0B\u5F25\u8865\u4E86\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u4E0D\u8DB3\uFF0C\u5982\u4F55\u7406\u89E3\uFF1F \u56E0\u4E3A\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u7279\u70B9\u662F\uFF1A\u5C01\u88C5\u3001\u7EE7\u627F\u3001\u591A\u6001\u3002\u6211\u7684\u7406\u89E3\u662F\u6838\u5FC3\u8FD8\u662F\u7EE7\u627F\uFF0C\u5404\u4E2A\u7C7B\u7684\u4EA4\u4E92\u662F\u901A\u8FC7\u7236\u5B50\u7EE7\u627F\u5173\u7CFB\uFF0C\u8FD9\u6837\u4E5F\u5C31\u50CF\u7011\u5E03\u4E00\u6837\u81EA\u4E0A\u800C\u4E0B\u3002 \u5F53\u9700\u8981\u5728\u4E00\u5806\u4E0D\u76F8\u5173\u7684\u7C7B\u7684\u6307\u5B9A\u4F4D\u7F6E\u6DFB\u52A0\u7EDF\u4E00\u7684\u529F\u80FD\uFF0C\u8FD9\u6837\u5C31\u65E0\u80FD\u4E3A\u529B\u4E86\u3002\u800C\u8FD9\uFF0C\u6070\u597D\u662FAOP\u7684\u4E13\u957F\u3002</p><p><strong>AOP\u672F\u8BED</strong></p><table><thead><tr><th>\u540D\u8BCD</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>JoinPoint(\u8FDE\u63A5\u70B9)</td><td>\u5B83\u6307\u7684\u662F\u90A3\u4E9B\u53EF\u4EE5\u7528\u4E8E\u628A\u589E\u5F3A\u4EE3\u7801\u52A0\u5165\u5230\u4E1A\u52A1\u4E3B\u7EBF\u4E2D\u7684\u70B9\uFF0C\u8FD9\u4E9B\u70B9\u6307\u7684\u5C31\u662F\u65B9\u6CD5\u3002\u5728\u65B9\u6CD5\u6267\u884C\u7684\u524D\u540E\u901A\u8FC7\u52A8\u6001\u4EE3\u7406\u6280\u672F\u52A0\u5165\u589E\u5F3A\u7684\u4EE3\u7801\u3002\u5728Spring\u6846\u67B6AOP\u601D\u60F3\u7684\u6280\u672F\u5B9E\u73B0\u4E2D\uFF0C\u4E5F\u53EA\u652F\u6301\u65B9\u6CD5\u7C7B\u578B\u7684\u8FDE\u63A5\u70B9\u3002</td></tr><tr><td>Pointcut(\u5207\u5165\u70B9)</td><td>\u5B83\u6307\u7684\u662F\u90A3\u4E9B\u5DF2\u7ECF\u628A\u589E\u5F3A\u4EE3\u7801\u52A0\u5165\u5230\u4E1A\u52A1\u4E3B\u7EBF\u8FDB\u6765\u4E4B\u540E\u7684\u8FDE\u63A5\u70B9\u3002\u6CA1\u6709\u5BF9\u5176\u589E\u5F3A\u7684\u65B9\u6CD5\u5C31\u53EA\u662F\u8FDE\u63A5\u70B9\u3002</td></tr><tr><td>Advice(\u589E\u5F3A)</td><td>\u5B83\u6307\u7684\u662F\u5207\u9762\u7C7B\u4E2D\u7528\u4E8E\u63D0\u4F9B\u589E\u5F3A\u529F\u80FD\u7684\u65B9\u6CD5\u3002\u5E76\u4E14\u4E0D\u540C\u7684\u65B9\u6CD5\u589E\u5F3A\u7684\u65F6\u673A\u662F\u4E0D\u4E00\u6837\u7684\u3002\u6BD4\u5982\uFF0C\u5F00\u542F\u4E8B\u52A1\u80AF\u5B9A\u8981\u5728\u4E1A\u52A1\u65B9\u6CD5\u6267\u884C\u4E4B\u524D\u6267\u884C;\u63D0\u4EA4\u4E8B\u52A1\u8981\u5728\u4E1A\u52A1\u65B9\u6CD5\u6B63\u5E38\u6267\u884C\u4E4B\u540E\u6267\u884C\uFF0C\u800C\u56DE\u6EDA\u4E8B\u52A1\u8981\u5728\u4E1A\u52A1\u65B9\u6CD5\u6267\u884C\u4EA7\u751F\u5F02\u5E38\u4E4B\u540E\u6267\u884C\u7B49\u7B49\u3002\u8FD9\u4E9B\u5C31\u662F\u589E\u5F3A\u7684\u7C7B\u578B\u3002\u5176\u5206\u7C7B\u6709:\u524D\u7F6E\u589E\u5F3A\u3001\u540E\u7F6E\u589E\u5F3A\u3001\u5F02\u5E38\u589E\u5F3A\u3001\u6700\u7EC8\u589E\u5F3A\u3001\u73AF\u7ED5\u589E\u5F3A\u3002</td></tr><tr><td>Target(\u76EE\u6807\u5BF9\u8C61)</td><td>\u5B83\u6307\u7684\u662F\u4EE3\u7406\u7684\u76EE\u6807\u5BF9\u8C61\u3002\u5373\u88AB\u4EE3\u7406\u5BF9\u8C61\u3002</td></tr><tr><td>Proxy(\u4EE3\u7406)</td><td>\u5B83\u6307\u7684\u662F\u4E00\u4E2A\u7C7B\u88ABAOP\u7EC7\u5165\u589E\u5F3A\u540E\uFF0C\u4EA7\u751F\u7684\u4EE3\u7406\u7C7B\u3002\u5373\u4EE3\u7406\u5BF9\u8C61\u3002</td></tr><tr><td>Weaving(\u7EC7\u5165)</td><td>\u5B83\u6307\u7684\u662F\u628A\u589E\u5F3A\u5E94\u7528\u5230\u76EE\u6807\u5BF9\u8C61\u6765\u521B\u5EFA\u65B0\u7684\u4EE3\u7406\u5BF9\u8C61\u7684<em>\u8FC7\u7A0B</em>\u3002Spring\u91C7\u7528\u52A8\u6001\u4EE3\u7406\u7EC7\u5165\uFF0C\u800CAspectJ\u91C7\u7528\u7F16\u8BD1\u671F\u7EC7\u5165\u548C\u7C7B\u88C5\u8F7D\u671F\u7EC7\u5165\u3002</td></tr><tr><td>Aspect(\u5207\u9762)</td><td>\u5B83\u6307\u5B9A\u662F\u589E\u5F3A\u7684\u4EE3\u7801\u6240\u5173\u6CE8\u7684\u65B9\u9762\uFF0C\u628A\u8FD9\u4E9B\u76F8\u5173\u7684\u589E\u5F3A\u4EE3\u7801\u5B9A\u4E49\u5230\u4E00\u4E2A\u7C7B\u4E2D\uFF0C\u8FD9\u4E2A\u7C7B\u5C31\u662F\u5207\u9762\u7C7B\u3002\u4F8B\u5982\uFF0C\u4E8B\u52A1\u5207\u9762\uFF0C\u5B83\u91CC\u9762\u5B9A\u4E49\u7684\u65B9\u6CD5\u5C31\u662F\u548C\u4E8B\u52A1\u76F8\u5173\u7684\uFF0C\u50CF\u5F00\u542F\u4E8B\u52A1\uFF0C\u63D0\u4EA4\u4E8B\u52A1\uFF0C\u56DE\u6EDA\u4E8B\u52A1\u7B49\u7B49\uFF0C\u4E0D\u4F1A\u5B9A\u4E49\u5176\u4ED6\u4E0E\u4E8B\u52A1\u65E0\u5173\u7684\u65B9\u6CD5\u3002\u524D\u9762\u7684\u6848\u4F8B\u4E2D TransactionManager \u5C31\u662F\u4E00\u4E2A\u5207\u9762\u3002</td></tr></tbody></table><blockquote><p>\u4F17\u591A\u7684\u6982\u5FF5\uFF0C\u76EE\u7684\u5C31\u662F\u4E3A\u4E86\u9501\u5B9A\u8981\u5728\u54EA\u4E2A\u5730\u65B9\u63D2\u5165\u4EC0\u4E48\u6A2A\u5207\u903B\u8F91\u4EE3\u7801\u3002</p></blockquote><h3 id="\u7B2C\u4E8C\u8282-spring\u4E2Daop\u7684\u4EE3\u7406\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u8282-spring\u4E2Daop\u7684\u4EE3\u7406\u9009\u62E9" aria-hidden="true">#</a> \u7B2C\u4E8C\u8282 Spring\u4E2DAOP\u7684\u4EE3\u7406\u9009\u62E9</h3><p>Spring \u5B9E\u73B0AOP\u601D\u60F3\u4F7F\u7528\u7684\u662F\u52A8\u6001\u4EE3\u7406\u6280\u672F\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CSpring\u4F1A\u6839\u636E\u88AB\u4EE3\u7406\u5BF9\u8C61\u662F\u5426\u5B9E\u73B0\u63A5\u53E3\u6765\u9009\u62E9\u4F7F\u7528JDK\u8FD8\u662FCGLIB\u3002 \u5F53\u88AB\u4EE3\u7406\u5BF9\u8C61\u6CA1\u6709\u5B9E\u73B0\u4EFB\u4F55\u63A5\u53E3\u65F6\uFF0CSpring \u4F1A\u9009\u62E9CGLIB\u3002\u5F53\u88AB\u4EE3\u7406\u5BF9\u8C61\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0CSpring\u4F1A\u9009\u62E9JDK\u5B98\u65B9\u7684\u4EE3\u7406\u6280\u672F\u3002</p><p>\u4E0D\u8FC7\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u914D\u7F6E\u7684\u65B9\u5F0F\uFF0C\u8BA9 Spring \u5F3A\u5236\u4F7F\u7528CGLIB\u3002\u3010\u53EF\u4EE5\u4F46\u6CA1\u6709\u5FC5\u8981\u3011</p><h3 id="\u7B2C\u4E09\u8282-spring\u4E2Daop\u7684\u914D\u7F6E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u8282-spring\u4E2Daop\u7684\u914D\u7F6E\u65B9\u5F0F" aria-hidden="true">#</a> \u7B2C\u4E09\u8282 Spring\u4E2DAOP\u7684\u914D\u7F6E\u65B9\u5F0F</h3><p>\u5728Spring\u7684AOP\u914D\u7F6E\u4E2D\uFF0C\u4E5F\u548C IoC \u914D\u7F6E\u4E00\u6837\uFF0C\u652F\u63013\u7C7B\u914D\u7F6E\u65B9\u5F0F\u3002</p><ul><li>\u7B2C\u4E00\u7C7B:\u4F7F\u7528XML\u914D\u7F6E</li><li>\u7B2C\u4E8C\u7C7B:\u4F7F\u7528XML+\u6CE8\u89E3\u7EC4\u5408\u914D\u7F6E</li><li>\u7B2C\u4E09\u7C7B:\u4F7F\u7528\u7EAF\u6CE8\u89E3\u914D\u7F6E</li></ul><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u9010\u4E00\u5B9E\u73B0\u3002</p><h3 id="\u7B2C\u56DB\u8282-spring\u4E2Daop\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u8282-spring\u4E2Daop\u5B9E\u73B0" aria-hidden="true">#</a> \u7B2C\u56DB\u8282 Spring\u4E2DAOP\u5B9E\u73B0</h3><h4 id="_4-1-xml-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-1-xml-\u6A21\u5F0F" aria-hidden="true">#</a> 4.1 XML \u6A21\u5F0F</h4><p>\u9996\u5148\u5F15\u5165\u5750\u6807</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-aop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.12.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u914D\u7F6E AOP \u76F8\u5173\u4FE1\u606F</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--  \u914D\u7F6E aop \u76F8\u5173\u5185\u5BB9  --&gt;</span>

<span class="token comment">&lt;!--  \u6A2A\u5207\u903B\u8F91 Bean  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logUtils<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mujunlin.transfer.utils.LogUtils<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token comment">&lt;!--  \u4F7F\u7528 config \u6807\u7B7E\uFF0C\u8868\u660E\u5F00\u59CB aop \u914D\u7F6E\uFF0C \u5728\u5185\u90E8\u914D\u7F6E\u5207\u9762 aspect  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--    \u6A2A\u5207\u903B\u8F91    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logAspect<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logUtils<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--       \u5207\u5165\u70B9\u9501\u5B9A\u611F\u5174\u8DA3\u7684\u65B9\u6CD5\uFF0C\u4F7F\u7528 aspectj \u8868\u8FBE\u5F0F     --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>pointcut</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>execution(* com.mujunlin.transfer.service.impl.*.*(..))<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!--      \u589E\u5F3A\u7C7B\u578B      --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>before</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>beforeMethod<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pt1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspect</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>\u4E94\u79CD\u589E\u5F3A\u7C7B\u578B</strong></p><table><thead><tr><th>\u7C7B\u578B</th><th>\u6807\u7B7E</th><th>\u4F4D\u7F6E</th><th>\u6267\u884C\u65F6\u673A</th><th>\u7EC6\u8282</th></tr></thead><tbody><tr><td>\u524D\u7F6E\u589E\u5F3A</td><td>aop:before</td><td>\u5B83\u53EA\u80FD\u51FA\u73B0\u5728aop:aspect\u6807\u7B7E\u5185\u90E8</td><td>\u524D\u7F6E\u901A\u77E5\u6C38\u8FDC\u90FD\u4F1A\u5728\u5207\u5165\u70B9\u65B9\u6CD5(\u4E1A\u52A1\u6838\u5FC3\u65B9\u6CD5)\u6267\u884C\u4E4B\u524D\u6267\u884C</td><td>\u524D\u7F6E\u901A\u77E5\u53EF\u4EE5\u83B7\u53D6\u5207\u5165\u70B9\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u5E76\u5BF9\u5176\u8FDB\u884C\u589E\u5F3A</td></tr><tr><td>\u6B63\u5E38\u6267\u884C\u65F6\u589E\u5F3A</td><td>aop:after-returning</td><td>\u5B83\u53EA\u80FD\u51FA\u73B0\u5728aop:aspect\u6807\u7B7E\u5185\u90E8</td><td>\u65B9\u6CD5\u6B63\u5E38\u6267\u884C\u4E4B\u540E\u6267\u884C</td><td></td></tr><tr><td>\u5F02\u5E38\u589E\u5F3A</td><td>aop:after-throwing</td><td>\u5B83\u53EA\u80FD\u51FA\u73B0\u5728aop:aspect\u6807\u7B7E\u5185\u90E8</td><td>\u5F02\u5E38\u901A\u77E5\u7684\u6267\u884C\u65F6\u673A\u662F\u5728\u5207\u5165\u70B9\u65B9\u6CD5(\u4E1A\u52A1\u6838\u5FC3\u65B9\u6CD5)\u6267\u884C\u4EA7\u751F\u5F02\u5E38\u4E4B\u540E\uFF0C\u5F02\u5E38\u901A\u77E5\u6267\u884C\u3002\u5982\u679C\u5207\u5165\u70B9\u65B9\u6CD5\u6267\u884C\u6CA1\u6709\u4EA7\u751F\u5F02\u5E38\uFF0C\u5219\u5F02\u5E38\u901A\u77E5\u4E0D\u4F1A\u6267\u884C\u3002</td><td>\u5F02\u5E38\u901A\u77E5\u4E0D\u4EC5\u53EF\u4EE5\u83B7\u53D6\u5207\u5165\u70B9\u65B9\u6CD5\u6267\u884C\u7684\u53C2\u6570\uFF0C\u4E5F\u53EF\u4EE5\u83B7\u53D6\u5207\u5165\u70B9\u65B9\u6CD5\u6267\u884C\u4EA7\u751F\u7684\u5F02\u5E38\u4FE1\u606F\u3002</td></tr><tr><td>\u6700\u7EC8\u589E\u5F3A</td><td>aop:after</td><td>\u5B83\u53EA\u80FD\u51FA\u73B0\u5728aop:aspect\u6807\u7B7E\u5185\u90E8</td><td>\u6700\u7EC8\u901A\u77E5\u7684\u6267\u884C\u65F6\u673A\u662F\u5728\u5207\u5165\u70B9\u65B9\u6CD5(\u4E1A\u52A1\u6838\u5FC3\u65B9\u6CD5)\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u5207\u5165\u70B9\u65B9\u6CD5\u8FD4\u56DE\u4E4B\u524D\u6267\u884C\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF0C\u65E0\u8BBA\u5207\u5165\u70B9\u65B9\u6CD5\u6267\u884C\u662F\u5426\u4EA7\u751F\u5F02\u5E38\uFF0C\u5B83\u90FD\u4F1A\u5728\u8FD4\u56DE\u4E4B\u524D\u6267\u884C\u3002</td><td>\u6700\u7EC8\u901A\u77E5\u6267\u884C\u65F6\uFF0C\u53EF\u4EE5\u83B7\u53D6\u5230\u901A\u77E5\u65B9\u6CD5\u7684\u53C2\u6570\u3002\u540C\u65F6\u5B83\u53EF\u4EE5\u505A\u4E00\u4E9B\u6E05\u7406\u64CD\u4F5C\u3002</td></tr><tr><td>\u73AF\u7ED5\u589E\u5F3A</td><td>aop:around</td><td>\u5B83\u53EA\u80FD\u51FA\u73B0\u5728aop:aspect\u6807\u7B7E\u5185\u90E8</td><td></td><td></td></tr></tbody></table><blockquote><p>\u7279\u522B\u8BF4\u660E\uFF1A \u73AF\u7ED5\u901A\u77E5\uFF0C\u5B83\u662F\u6709\u522B\u4E8E\u524D\u9762\u56DB\u79CD\u901A\u77E5\u7C7B\u578B\u5916\u7684\u7279\u6B8A\u901A\u77E5\u3002 \u524D\u9762\u56DB\u79CD\u901A\u77E5(\u524D\u7F6E\uFF0C\u540E\u7F6E\uFF0C\u5F02\u5E38\u548C\u6700\u7EC8) \u5B83\u4EEC\u90FD\u662F\u6307\u5B9A\u4F55\u65F6\u589E\u5F3A\u7684\u901A\u77E5\u7C7B\u578B\u3002<br> \u800C\u73AF\u7ED5\u901A\u77E5\uFF0C\u5B83\u662F <code>Spring</code> \u6846\u67B6\u4E3A\u6211\u4EEC\u63D0\u4F9B\u7684\u4E00\u79CD\u53EF\u4EE5\u901A\u8FC7\u7F16\u7801\u7684\u65B9\u5F0F\uFF0C\u63A7\u5236\u589E\u5F3A\u4EE3\u7801\u4F55\u65F6\u6267\u884C\u7684\u901A\u77E5\u7C7B\u578B\u3002 \u5B83\u91CC\u9762\u501F\u52A9\u7684 <code>ProceedingJoinPoint</code> \u63A5\u53E3\u53CA\u5176\u5B9E\u73B0\u7C7B\uFF0C \u5B9E\u73B0\u624B\u52A8\u89E6\u53D1\u5207\u5165\u70B9\u65B9\u6CD5\u7684\u8C03\u7528(\u4E5F\u5C31\u662F\u53EF\u4EE5\u81EA\u5DF1\u51B3\u5B9A\u662F\u5426\u89E6\u53D1\u5207\u5165\u70B9\u65B9\u6CD5)\u3002</p></blockquote><blockquote><p>method:\u7528\u4E8E\u6307\u5B9A\u524D\u7F6E\u901A\u77E5\u7684\u65B9\u6CD5\u540D\u79F0<br> pointcut:\u7528\u4E8E\u6307\u5B9A\u5207\u5165\u70B9\u8868\u8FBE\u5F0F<br> pointcut-ref:\u7528\u4E8E\u6307\u5B9A\u5207\u5165\u70B9\u8868\u8FBE\u5F0F\u7684\u5F15\u7528</p></blockquote><h4 id="_4-2-xml-\u6CE8\u89E3\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-2-xml-\u6CE8\u89E3\u6A21\u5F0F" aria-hidden="true">#</a> 4.2 XML+\u6CE8\u89E3\u6A21\u5F0F</h4><p>\u4F7F\u7528\u6CE8\u89E3\u914D\u7F6E\u5207\u9762\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Aspect</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogUtils</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">&quot;execution(public void com.mujunlin.transfer.service.impl.*.*(..))&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">point1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">&quot;point1()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeMethod</span><span class="token punctuation">(</span><span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EF\u4EE5\u83B7\u53D6\u8FDE\u63A5\u70B9\u7684\u53C2\u6570</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> arg <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E1A\u52A1\u903B\u8F91\u5F00\u59CB\u524D\u6267\u884C\u3002\u3002\u3002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// ... \u5176\u4ED6\u7701\u7565</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4F7F\u7528 xml \u914D\u7F6E\u6CE8\u89E3\u9A71\u52A8</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span> <span class="token attr-name">proxy-target-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_4-3-\u6CE8\u89E3\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-3-\u6CE8\u89E3\u6A21\u5F0F" aria-hidden="true">#</a> 4.3 \u6CE8\u89E3\u6A21\u5F0F</h4><p>\u7EAF\u6CE8\u89E3\u6A21\u5F0F\uFF0C\u53EA\u9700\u8981\u5728\u524D\u9762\u7684\u57FA\u7840\u4E0A\u5C06\u6CE8\u89E3\u9A71\u52A8\u6539\u4E3A\u914D\u7F6E\u7C7B\u7684\u65B9\u5F0F\u3002</p><p>\u5728 Spring \u7684\u914D\u7F6E\u7C7B\u4E0A\u6DFB\u52A0 <code>@EnableAspectJAutoProxy</code> \u6CE8\u89E3\u5373\u53EF</p><h3 id="\u7B2C\u4E94\u8282-spring-\u58F0\u660E\u5F0F\u4E8B\u52A1\u7684\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E94\u8282-spring-\u58F0\u660E\u5F0F\u4E8B\u52A1\u7684\u652F\u6301" aria-hidden="true">#</a> \u7B2C\u4E94\u8282 Spring \u58F0\u660E\u5F0F\u4E8B\u52A1\u7684\u652F\u6301</h3><blockquote><p>\u7F16\u7A0B\u5F0F\u4E8B\u52A1:\u5728\u4E1A\u52A1\u4EE3\u7801\u4E2D\u6DFB\u52A0\u4E8B\u52A1\u63A7\u5236\u4EE3\u7801\uFF0C\u8FD9\u6837\u7684\u4E8B\u52A1\u63A7\u5236\u673A\u5236\u5C31\u53EB\u505A\u7F16\u7A0B\u5F0F\u4E8B\u52A1\u3002</p><p>\u58F0\u660E\u5F0F\u4E8B\u52A1:\u901A\u8FC7xml\u6216\u8005\u6CE8\u89E3\u914D\u7F6E\u7684\u65B9\u5F0F\u8FBE\u5230\u4E8B\u52A1\u63A7\u5236\u7684\u76EE\u7684\uFF0C\u53EB\u505A\u58F0\u660E\u5F0F\u4E8B\u52A1\u3002</p></blockquote><h4 id="_5-1-\u4E8B\u52A1\u56DE\u987E" tabindex="-1"><a class="header-anchor" href="#_5-1-\u4E8B\u52A1\u56DE\u987E" aria-hidden="true">#</a> 5.1 \u4E8B\u52A1\u56DE\u987E</h4><p><strong>\u4E8B\u52A1\u7684\u6982\u5FF5</strong></p><p>\u4E8B\u52A1\u6307\u903B\u8F91\u4E0A\u7684\u4E00\u7EC4\u64CD\u4F5C\uFF0C\u7EC4\u6210\u8FD9\u7EC4\u64CD\u4F5C\u7684\u5404\u4E2A\u5355\u5143\uFF0C\u8981\u4E48\u5168\u90E8\u6210\u529F\uFF0C\u8981\u4E48\u5168\u90E8\u4E0D\u6210\u529F\u3002\u4ECE\u800C\u786E\u4FDD\u4E86\u6570\u636E\u7684\u51C6\u786E\u4E0E\u5B89\u5168\u3002</p><p><strong>\u4E8B\u52A1\u7684\u56DB\u5927\u7279\u6027</strong></p><p><em>\u539F\u5B50\u6027(Atomicity)</em></p><p>\u539F\u5B50\u6027\u662F\u6307\u4E8B\u52A1\u662F\u4E00\u4E2A\u4E0D\u53EF\u5206\u5272\u7684\u5DE5\u4F5C\u5355\u4F4D\uFF0C\u4E8B\u52A1\u4E2D\u7684\u64CD\u4F5C\u8981\u4E48\u90FD\u53D1\u751F\uFF0C\u8981\u4E48\u90FD\u4E0D\u53D1\u751F\u3002</p><p>\u4ECE\u64CD\u4F5C\u7684\u2EC6\u5EA6\u6765\u63CF\u8FF0\uFF0C\u4E8B\u52A1\u4E2D\u7684\u5404\u4E2A\u64CD\u4F5C\u8981\u4E48\u90FD\u6210\u529F\u8981\u4E48\u90FD\u5931\u8D25\u3002</p><p><em>\u4E00\u81F4\u6027(Consistency)</em></p><p>\u4E8B\u52A1\u5FC5\u987B\u4F7F\u6570\u636E\u5E93\u4ECE\u4E00\u4E2A\u4E00\u81F4\u6027\u72B6\u6001\u53D8\u6362\u5230\u53E6\u5916\u4E00\u4E2A\u4E00\u81F4\u6027\u72B6\u6001\u3002</p><p>\u4F8B\u5982\u8F6C\u8D26\u524DA\u67091000\uFF0CB\u67091000\u3002\u8F6C\u8D26\u540EA+B\u4E5F\u5F97\u662F2000\u3002</p><p>\u4E00\u81F4\u6027\u662F\u4ECE\u6570\u636E\u7684\u2EC6\u5EA6\u6765\u8BB2\u7684\u3002(1000\uFF0C1000) (900\uFF0C1100)\uFF0C\u4E0D\u5E94\u8BE5\u51FA\u73B0(900\uFF0C1000)</p><p><em>\u9694\u79BB\u6027(Isolation)</em></p><p>\u4E8B\u52A1\u7684\u9694\u79BB\u6027\u662F\u591A\u4E2A\u7528\u6237\u5E76\u53D1\u8BBF\u95EE\u6570\u636E\u5E93\u65F6\uFF0C\u6570\u636E\u5E93\u4E3A\u6BCF\u4E00\u4E2A\u7528\u6237\u5F00\u542F\u7684\u4E8B\u52A1\uFF0C \u6BCF\u4E2A\u4E8B\u52A1\u4E0D\u80FD\u88AB\u5176\u4ED6\u4E8B\u52A1\u7684\u64CD\u4F5C\u6570\u636E\u6240\u5E72\u6270\uFF0C\u591A\u4E2A\u5E76\u53D1\u4E8B\u52A1\u4E4B\u95F4\u8981\u76F8\u4E92\u9694\u79BB\u3002</p><p>\u6BD4\u5982:\u4E8B\u52A11\u7ED9\u5458\u5DE5\u6DA8\u5DE5\u8D442000\uFF0C\u4F46\u662F\u4E8B\u52A11\u5C1A\u672A\u88AB\u63D0\u4EA4\uFF0C\u5458\u5DE5\u53D1\u8D77\u4E8B\u52A12\u67E5\u8BE2\u5DE5\u8D44\uFF0C\u53D1\u73B0\u5DE5\u8D44\u6DA8\u4E862000 \u5757\u94B1\uFF0C\u8BFB\u5230\u4E86\u4E8B\u52A11\u5C1A\u672A\u63D0\u4EA4\u7684\u6570\u636E(\u810F\u8BFB)</p><p><em>\u6301\u4E45\u6027(Durability)</em></p><p>\u6301\u4E45\u6027\u662F\u6307\u4E00\u4E2A\u4E8B\u52A1\u4E00\u65E6\u88AB\u63D0\u4EA4\uFF0C\u5B83\u5BF9\u6570\u636E\u5E93\u4E2D\u6570\u636E\u7684\u6539\u53D8\u5C31\u662F\u6C38\u4E45\u6027\u7684\uFF0C\u63A5\u4E0B\u6765\u5373\u4F7F\u6570\u636E\u5E93\u53D1\u751F\u6545\u969C\u4E5F\u4E0D\u5E94\u8BE5\u5BF9\u5176\u6709\u4EFB\u4F55\u5F71\u54CD\u3002</p><p><strong>\u4E8B\u52A1\u7684\u9694\u79BB\u7EA7\u522B</strong></p><p>\u4E0D\u8003\u8651\u9694\u79BB\u7EA7\u522B\uFF0C\u4F1A\u51FA\u73B0\u4EE5\u4E0B\u60C5\u51B5:(\u4EE5\u4E0B\u60C5\u51B5\u5168\u662F\u9519\u8BEF\u7684)\uFF0C\u4E5F\u5373\u4E3A\u9694\u79BB\u7EA7\u522B\u5728\u89E3\u51B3\u4E8B\u52A1\u5E76\u53D1\u95EE\u9898</p><ul><li>\u810F\u8BFB: \u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u7684\u4E8B\u52A1\u8BFB\u5230\u4E86\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u4E2D <em>\u672A\u63D0\u4EA4</em> \u7684\u6570\u636E\u3002</li><li>\u4E0D\u53EF\u91CD\u590D\u8BFB: \u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u7684\u4E8B\u52A1\u8BFB\u5230\u4E86\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u5DF2\u7ECF\u63D0\u4EA4\u7684 <em>update</em> \u7684\u6570\u636E(\u524D\u540E\u5185\u5BB9\u4E0D\u4E00\u6837)</li><li>\u865A\u8BFB(\u5E7B\u8BFB): \u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u7684\u4E8B\u52A1\u8BFB\u5230\u4E86\u53E6\u5916\u4E00\u4E2A\u7EBF\u7A0B\u4E2D\u5DF2\u7ECF\u63D0\u4EA4\u7684 <em>insert</em> \u6216\u8005 <em>delete</em> \u7684\u6570\u636E(\u524D\u540E\u6761 \u6570\u4E0D\u4E00\u6837)</li></ul><p>\u573A\u666F:<br> \u5458\u5DE5A\u53D1\u8D77\u4E8B\u52A11\uFF0C\u67E5\u8BE2\u5DE5\u8D44\uFF0C\u5DE5\u8D44\u4E3A1w\uFF0C\u6B64\u65F6\u4E8B\u52A11\u5C1A\u672A\u5173\u95ED\uFF1B<br> \u8D22\u52A1\u4EBA\u5458\u53D1\u8D77\u4E86\u4E8B\u52A12\uFF0C\u7ED9\u5458\u5DE5A\u5F20\u4E862000\u5757\u94B1\uFF0C\u5E76\u4E14\u63D0\u4EA4\u4E86\u4E8B\u52A1\uFF1B<br> \u5458\u5DE5A\u901A\u8FC7\u4E8B\u52A11\u518D\u6B21\u53D1\u8D77\u67E5\u8BE2\u8BF7\u6C42\uFF0C\u53D1\u73B0\u5DE5\u8D44\u4E3A1.2w\uFF0C\u539F\u6765\u8BFB\u51FA\u67651w\u8BFB\u4E0D\u5230\u4E86\uFF0C\u53EB\u505A\u4E0D\u53EF\u91CD\u590D\u8BFB</p><p>\u573A\u666F:<br> \u4E8B\u52A11\u67E5\u8BE2\u6240\u6709\u5DE5\u8D44\u4E3A1w\u7684\u5458\u5DE5\u7684\u603B\u6570\uFF0C\u67E5\u8BE2\u51FA\u6765\u4E8610\u4E2A\u4EBA\uFF0C\u6B64\u65F6\u4E8B\u52A1\u5C1A\u672A\u5173\u95ED<br> \u4E8B\u52A12\u8D22\u52A1\u4EBA\u5458\u53D1\u8D77\uFF0C\u65B0\u6765\u5458\u5DE5\uFF0C\u5DE5\u8D441w\uFF0C\u5411\u8868\u4E2D\u63D2\u5165\u4E862\u6761\u6570\u636E\uFF0C\u5E76\u4E14\u63D0\u4EA4\u4E86\u4E8B\u52A1<br> \u4E8B\u52A11\u518D\u6B21\u67E5\u8BE2\u5DE5\u8D44\u4E3A1w\u7684\u5458\u5DE5\u4E2A\u6570\uFF0C\u53D1\u73B0\u670912\u4E2A\u4EBA\uFF0C\u2EC5\u4E86\u2EE4\u4E86\uFF0C\u8FD9\u5C31\u53EB\u5E7B\u8BFB</p><p><strong>\u6570\u636E\u5E93\u5B9A\u4E49\u7684\u56DB\u79CD\u9694\u79BB\u7EA7\u522B</strong></p><table><thead><tr><th>\u7EA7\u522B</th><th>\u8BF4\u660E</th><th>\u9694\u79BB\u7EA7\u522B</th><th>\u5907\u6CE8</th></tr></thead><tbody><tr><td>Serializable(\u4E32\u884C\u5316)</td><td>\u53EF\u907F\u514D\u810F\u8BFB\u3001\u4E0D\u53EF\u91CD\u590D\u8BFB\u3001\u865A\u8BFB\u60C5\u51B5\u7684\u53D1\u751F\u3002(\u4E32\u884C\u5316)</td><td>\u6700\u9AD8</td><td></td></tr><tr><td>Repeatable read(\u53EF\u91CD\u590D\u8BFB)</td><td>\u53EF\u907F\u514D\u810F\u8BFB\u3001\u4E0D\u53EF\u91CD\u590D\u8BFB\u60C5\u51B5\u7684\u53D1\u751F\u3002(\u5E7B\u8BFB\u6709\u53EF\u80FD\u53D1\u751F)</td><td>\u7B2C\u4E8C</td><td>\u8BE5\u673A\u5236\u4E0B\u4F1A\u5BF9\u8981 update \u7684\u884C\u8FDB\u884C\u52A0\u9501</td></tr><tr><td>Read committed(\u8BFB\u5DF2\u63D0\u4EA4)</td><td>\u53EF\u907F\u514D\u810F\u8BFB\u60C5\u51B5\u53D1\u751F\u3002\u4E0D\u53EF\u91CD\u590D\u8BFB\u548C\u5E7B\u8BFB\u4E00\u5B9A\u4F1A\u53D1\u751F\u3002</td><td>\u7B2C\u4E09</td><td></td></tr><tr><td>Read uncommitted(\u8BFB\u672A\u63D0\u4EA4)</td><td>\u6700\u4F4E\u7EA7\u522B\uFF0C\u4EE5\u4E0A\u60C5\u51B5\u5747\u65E0\u6CD5\u4FDD\u8BC1\u3002(\u8BFB\u672A\u63D0\u4EA4)</td><td>\u6700\u4F4E</td><td></td></tr></tbody></table><blockquote><p>\u6CE8\u610F:\u7EA7\u522B\u4F9D\u6B21\u5347\u9AD8\uFF0C\u6548\u7387\u4F9D\u6B21\u964D\u4F4E</p><p>MySQL\u7684\u9ED8\u8BA4\u9694\u79BB\u7EA7\u522B\u662F:REPEATABLE READ</p><p>\u67E5\u8BE2\u5F53\u524D\u4F7F\u7528\u7684\u9694\u79BB\u7EA7\u522B: <code>select @@tx_isolation;</code></p><p>\u8BBE\u7F6EMySQL\u4E8B\u52A1\u7684\u9694\u79BB\u7EA7\u522B: <code>set session transaction isolation level xxx;</code> (\u8BBE\u7F6E\u7684\u662F\u5F53\u524D mysql\u8FDE\u63A5\u4F1A\u8BDD\u7684\uFF0C\u5E76\u4E0D\u662F\u6C38\u4E45\u6539\u53D8\u7684)</p></blockquote><p><strong>\u4E8B\u52A1\u7684\u4F20\u64AD\u884C\u4E3A</strong></p><p>\u4E8B\u52A1\u5F80\u5F80\u5728service\u5C42\u8FDB\u884C\u63A7\u5236\uFF0C\u5982\u679C\u51FA\u73B0service\u5C42\u65B9\u6CD5A\u8C03\u7528\u4E86\u53E6\u5916\u4E00\u4E2Aservice\u5C42\u65B9\u6CD5B\uFF0CA\u548CB\u65B9\u6CD5\u672C\u8EAB\u90FD\u5DF2\u7ECF\u88AB\u6DFB\u52A0\u4E86\u4E8B\u52A1\u63A7\u5236\uFF0C \u90A3\u4E48A\u8C03\u7528B\u7684\u65F6\u5019\uFF0C\u5C31\u9700\u8981\u8FDB\u884C\u4E8B\u52A1\u7684\u4E00\u4E9B\u534F\u5546\uFF0C\u8FD9\u5C31\u53EB\u505A\u4E8B\u52A1\u7684\u4F20\u64AD\u884C\u4E3A\u3002</p><p>A\u8C03\u7528B\uFF0C\u6211\u4EEC\u7AD9\u5728 B \u7684\u2EC6\u5EA6\u6765\u89C2\u5BDF\u6765\u5B9A\u4E49\u4E8B\u52A1\u7684\u4F20\u64AD\u884C\u4E3A</p><table><thead><tr><th>\u7EA7\u522B</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>PROPAGATION_REQUIRED</td><td>\u5982\u679C\u5F53\u524D\u6CA1\u6709\u4E8B\u52A1\uFF0C\u5C31\u65B0\u5EFA\u4E00\u4E2A\u4E8B\u52A1\uFF0C\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E00\u4E2A\u4E8B\u52A1\u4E2D\uFF0C\u52A0\u5165\u5230\u8FD9\u4E2A\u4E8B\u52A1\u4E2D\u3002\u3010\u8FD9\u662F\u6700\u5E38\u2EC5\u7684\u9009\u62E9\u3002\u3011</td></tr><tr><td>PROPAGATION_SUPPORTS</td><td>\u652F\u6301\u5F53\u524D\u4E8B\u52A1\uFF0C\u5982\u679C\u5F53\u524D\u6CA1\u6709\u4E8B\u52A1\uFF0C\u5C31\u4EE5\u975E\u4E8B\u52A1\u65B9\u5F0F\u6267\u884C\u3002</td></tr><tr><td>PROPAGATION_MANDATORY</td><td>\u4F7F\u7528\u5F53\u524D\u7684\u4E8B\u52A1\uFF0C\u5982\u679C\u5F53\u524D\u6CA1\u6709\u4E8B\u52A1\uFF0C\u5C31\u629B\u51FA\u5F02\u5E38\u3002</td></tr><tr><td>PROPAGATION_REQUIRES_NEW</td><td>\u65B0\u5EFA\u4E8B\u52A1\uFF0C\u5982\u679C\u5F53\u524D\u5B58\u5728\u4E8B\u52A1\uFF0C\u628A\u5F53\u524D\u4E8B\u52A1\u6302\u8D77\u3002</td></tr><tr><td>PROPAGATION_NOT_SUPPORTED</td><td>\u4EE5\u975E\u4E8B\u52A1\u65B9\u5F0F\u6267\u884C\u64CD\u4F5C\uFF0C\u5982\u679C\u5F53\u524D\u5B58\u5728\u4E8B\u52A1\uFF0C\u5C31\u628A\u5F53\u524D\u4E8B\u52A1\u6302\u8D77\u3002</td></tr><tr><td>PROPAGATION_NEVER</td><td>\u4EE5\u975E\u4E8B\u52A1\u65B9\u5F0F\u6267\u884C\uFF0C\u5982\u679C\u5F53\u524D\u5B58\u5728\u4E8B\u52A1\uFF0C\u5219\u629B\u51FA\u5F02\u5E38\u3002</td></tr><tr><td>PROPAGATION_NESTED</td><td>\u5982\u679C\u5F53\u524D\u5B58\u5728\u4E8B\u52A1\uFF0C\u5219\u5728\u5D4C\u5957\u4E8B\u52A1\u5185\u6267\u884C\u3002\u5982\u679C\u5F53\u524D\u6CA1\u6709\u4E8B\u52A1\uFF0C\u5219\u6267\u884C\u4E0E PROPAGATION_REQUIRED \u7C7B\u4F3C\u7684\u64CD\u4F5C\u3002</td></tr></tbody></table><blockquote><p>\u524D\u4E24\u4E2A\u8F83\u4E3A\u5E38\u89C1\u3002</p></blockquote><h4 id="_5-2-spring\u4E2D\u4E8B\u52A1\u7684api" tabindex="-1"><a class="header-anchor" href="#_5-2-spring\u4E2D\u4E8B\u52A1\u7684api" aria-hidden="true">#</a> 5.2 Spring\u4E2D\u4E8B\u52A1\u7684API</h4><p>\u4E0D\u540C\u7684 ORM \u6846\u67B6\uFF0C\u63D0\u4EA4\u4E8B\u52A1\u4F7F\u7528\u4E86\u4E0D\u540C\u7684\u65B9\u6CD5\u3002</p><ul><li>mybatis: <code>sqlSession.commit();</code></li><li>hibernate: <code>session.commit();</code></li></ul><p>\u56E0\u6B64 Spring \u63D0\u4F9B\u4E86\u7EDF\u4E00\u7684\u63A5\u53E3</p><blockquote><p>\u6B64\u63A5\u53E3\u662FSpring\u7684\u4E8B\u52A1\u7BA1\u7406\u5668\u6838\u5FC3\u63A5\u53E3\u3002</p><p>Spring\u672C\u8EAB\u5E76\u4E0D\u652F\u6301\u4E8B\u52A1\u5B9E\u73B0\uFF0C\u53EA\u662F\u8D1F\u8D23\u63D0\u4F9B\u6807\u51C6\uFF0C\u5E94\u7528\u5E95\u5C42\u652F\u6301\u4EC0\u4E48\u6837\u7684\u4E8B\u52A1\uFF0C\u9700\u8981\u63D0\u4F9B\u5177\u4F53\u5B9E\u73B0\u7C7B\u3002 \u6B64\u5904\u4E5F\u662F\u7B56\u7565\u6A21\u5F0F\u7684\u5177\u4F53\u5E94\u7528\u3002</p><p>\u5728Spring\u6846\u67B6\u4E2D\uFF0C\u4E5F\u4E3A\u6211\u4EEC\u5185\u7F6E\u4E86\u4E00\u4E9B\u5177\u4F53\u7B56\u7565\uFF0C\u4F8B\u5982:<code>DataSourceTransactionManager</code>, <code>HibernateTransactionManager</code> \u7B49\u7B49\u3002 (HibernateTransactionManager \u4E8B\u52A1\u7BA1\u7406\u5668\u5728 spring-orm-5.1.12.RELEASE.jar \u4E2D)</p></blockquote><p>DataSourceTransactionManager -&gt; Spring JdbcTemplate\u3001Mybatis(mybatis-spring.jar)</p><p>HibernateTransactionManager -&gt; Hibernate\u6846\u67B6</p><blockquote><p>DataSourceTransactionManager \u5F52\u6839\u7ED3\u5E95\u662F\u6A2A\u5207\u903B\u8F91\u4EE3\u7801\uFF0C\u58F0\u660E\u5F0F\u4E8B\u52A1\u8981\u505A\u7684\u5C31\u662F\u4F7F\u7528Aop(\u52A8\u6001\u4EE3\u7406)\u5C06\u4E8B\u52A1\u63A7\u5236\u903B\u8F91\u7EC7\u5165\u5230\u4E1A\u52A1\u4EE3\u7801\u3002</p></blockquote><h4 id="_5-3-spring-\u58F0\u660E\u5F0F\u4E8B\u52A1\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_5-3-spring-\u58F0\u660E\u5F0F\u4E8B\u52A1\u914D\u7F6E" aria-hidden="true">#</a> 5.3 Spring \u58F0\u660E\u5F0F\u4E8B\u52A1\u914D\u7F6E</h4><p><strong>XML\u7684\u65B9\u5F0F\u914D\u7F6E</strong></p><p>\u58F0\u660E\u5F0F\u4E8B\u52A1\uFF0C\u65E0\u975E\u4E5F\u5C31\u662F\u914D\u7F6E\u4E00\u4E2A AOP</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transactionManager<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.jdbc.datasource.DataSourceTransactionManager<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>advice</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>txAdvice<span class="token punctuation">&quot;</span></span> <span class="token attr-name">transaction-manager</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transactionManager<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--    \u5B9A\u5236\u4E8B\u52A1\u7EC6\u8282\uFF1A\u4F20\u64AD\u884C\u4E3A\u3001\u9694\u79BB\u7EA7\u522B    --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>attributes</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--    \u4E00\u822C\u6027\u914D\u7F6E    --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">read-only</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">propagation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>REQUIRED<span class="token punctuation">&quot;</span></span> <span class="token attr-name">isolation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DEFAULT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!--    \u9488\u5BF9 query \u65B9\u6CD5\u7684\u914D\u7F6E    --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">tx:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>query*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">read-only</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">propagation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SUPPORTS<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">tx:</span>attributes</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">tx:</span>advice</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>advisor</span> <span class="token attr-name">advice-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>txAdvice<span class="token punctuation">&quot;</span></span> <span class="token attr-name">pointcut</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>execution(* com.mujunlin.transfer.service.impl.*(..))<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>\u6CE8\u89E3\u65B9\u5F0F</strong></p><p>\u5728\u63A5\u53E3\u3001\u7C7B\u6216\u8005\u65B9\u6CD5\u4E0A\u6DFB\u52A0@Transactional\u6CE8\u89E3\u3002</p><p>Spring\u57FA\u4E8E\u6CE8\u89E3\u9A71\u52A8\u5F00\u53D1\u7684\u4E8B\u52A1\u63A7\u5236\u914D\u7F6E\uFF0C\u53EA\u9700\u8981\u628A xml \u914D\u7F6E\u90E8\u5206\u6539\u4E3A\u6CE8\u89E3\u5B9E\u73B0\u3002 \u53EA\u662F\u9700\u8981\u4E00\u4E2A\u6CE8\u89E3\u66FF\u6362\u6389xml\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684 <code>&lt;tx:annotation-driven transaction- manager=&quot;transactionManager&quot;/&gt;</code> \u914D\u7F6E\u3002 \u5728 Spring \u7684\u914D\u7F6E\u7C7B\u4E0A\u6DFB\u52A0 @EnableTransactionManagement \u6CE8\u89E3\u5373\u53EF</p><h2 id="spring-aop-\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#spring-aop-\u6E90\u7801" aria-hidden="true">#</a> Spring AOP \u6E90\u7801</h2><h3 id="\u7B2C\u4E00\u8282-\u4EE3\u7406\u5BF9\u8C61\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u8282-\u4EE3\u7406\u5BF9\u8C61\u521B\u5EFA" aria-hidden="true">#</a> \u7B2C\u4E00\u8282 \u4EE3\u7406\u5BF9\u8C61\u521B\u5EFA</h3><p>\u5DF2\u77E5Spring AOP \u662F\u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u7684\u65B9\u5F0F\u5B9E\u73B0\uFF0C\u800C\u4EE3\u7406\u5BF9\u8C61\u7684\u4EA7\u751F\u9700\u8981\u540E\u4E8E\u59D4\u6258\u5BF9\u8C61\u7684\u4EA7\u751F\u3002\u6211\u4EEC\u53EF\u4EE5\u63A8\u65AD\uFF1A \u4EE3\u7406\u5BF9\u8C61\u7684\u521B\u5EFA\u65F6\u673A\u662F\u5728 Bean \u521B\u5EFA\u5B8C\u6210\u540E\uFF0C\u8FD4\u56DE\u524D\u3002\u6211\u4EEC\u53EF\u4EE5\u8FDB\u5165 <code>AbstractAutowireCapableBeanFactory#initializeBean</code> \u65B9\u6CD5\u89C2\u5BDF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">initializeBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">RootBeanDefinition</span> mbd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getAccessControlContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token function">invokeAwareMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token class-name">Object</span> wrappedBean <span class="token operator">=</span> bean<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsBeforeInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token function">invokeInitMethods</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> wrappedBean<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>
				<span class="token punctuation">(</span>mbd <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				beanName<span class="token punctuation">,</span> <span class="token string">&quot;Invocation of init method failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>mbd <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>mbd<span class="token punctuation">.</span><span class="token function">isSynthetic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		wrappedBean <span class="token operator">=</span> <span class="token function">applyBeanPostProcessorsAfterInitialization</span><span class="token punctuation">(</span>wrappedBean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> wrappedBean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6211\u4EEC\u7EE7\u7EED\u8FDB\u5165 \u540E\u7F6E\u5904\u7406\u65B9\u6CD5</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">applyBeanPostProcessorsAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> existingBean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span>
		<span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

	<span class="token class-name">Object</span> result <span class="token operator">=</span> existingBean<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BeanPostProcessor</span> processor <span class="token operator">:</span> <span class="token function">getBeanPostProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Object</span> current <span class="token operator">=</span> processor<span class="token punctuation">.</span><span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> result<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		result <span class="token operator">=</span> current<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u7EE7\u7EED\u8FDB\u5165\u5230\u4EA7\u751F\u4EE3\u7406\u5BF9\u8C61\u7684 <code>AbstractAutoProxyCreator#postProcessAfterInitialization</code> \u65B9\u6CD5\u5F53\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Object</span> cacheKey <span class="token operator">=</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyProxyReferences<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span> <span class="token operator">!=</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5173\u952E\u4F3C\u4E4E\u5C31\u5728 return \u7684 wrapXxx \u5F53\u4E2D\u4E86\u3002\u7EE7\u7EED\u8FDB\u5165</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> cacheKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetSourcedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span>FALSE<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">shouldSkip</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Create proxy if we have advice.</span>
	<span class="token comment">// \u67E5\u627E\u548C\u5F53\u524D\u59D4\u6258 Bean \u5339\u914D\u7684 Advisor</span>
	<span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specificInterceptors <span class="token operator">=</span> <span class="token function">getAdvicesAndAdvisorsForBean</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>specificInterceptors <span class="token operator">!=</span> DO_NOT_PROXY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Object</span> proxy <span class="token operator">=</span> <span class="token function">createProxy</span><span class="token punctuation">(</span>
				bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> specificInterceptors<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SingletonTargetSource</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>proxyTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> proxy<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>FALSE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7EE7\u7EED\u8FDB\u5165\u5230 createProxy \u65B9\u6CD5\u5F53\u4E2D</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">createProxy</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span>
		<span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specificInterceptors<span class="token punctuation">,</span> <span class="token class-name">TargetSource</span> targetSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token keyword">instanceof</span> <span class="token class-name">ConfigurableListableBeanFactory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">AutoProxyUtils</span><span class="token punctuation">.</span><span class="token function">exposeTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u521B\u5EFA\u4EE3\u7406\u7684\u5DE5\u4F5C\u4EA4\u7ED9 ProxyFactory</span>
	<span class="token class-name">ProxyFactory</span> proxyFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProxyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	proxyFactory<span class="token punctuation">.</span><span class="token function">copyFrom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u5224\u65AD\u662F\u5426\u8BBE\u7F6E proxyTargetClass \u4E3A true\u3002\u5BF9\u5E94\u914D\u7F6E\u4E0A\u7684\u662F\u5426\u5F3A\u5236\u4F7F\u7528 CgLib \u52A8\u6001\u4EE3\u7406</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>proxyFactory<span class="token punctuation">.</span><span class="token function">isProxyTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldProxyTargetClass</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			proxyFactory<span class="token punctuation">.</span><span class="token function">setProxyTargetClass</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">evaluateProxyInterfaces</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> proxyFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// \u628A\u589E\u5F3A\u548C\u901A\u7528\u62E6\u622A\u5668\u5408\u5E76\uFF0C\u90FD\u9002\u914D\u6210 Advisor</span>
	<span class="token class-name">Advisor</span><span class="token punctuation">[</span><span class="token punctuation">]</span> advisors <span class="token operator">=</span> <span class="token function">buildAdvisors</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> specificInterceptors<span class="token punctuation">)</span><span class="token punctuation">;</span>
	proxyFactory<span class="token punctuation">.</span><span class="token function">addAdvisors</span><span class="token punctuation">(</span>advisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u8BBE\u7F6E\u53C2\u6570</span>
	proxyFactory<span class="token punctuation">.</span><span class="token function">setTargetSource</span><span class="token punctuation">(</span>targetSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">customizeProxyFactory</span><span class="token punctuation">(</span>proxyFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

	proxyFactory<span class="token punctuation">.</span><span class="token function">setFrozen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>freezeProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">advisorsPreFiltered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		proxyFactory<span class="token punctuation">.</span><span class="token function">setPreFiltered</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Use original ClassLoader if bean class not locally loaded in overriding class loader</span>
	<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token function">getProxyClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>classLoader <span class="token keyword">instanceof</span> <span class="token class-name">SmartClassLoader</span> <span class="token operator">&amp;&amp;</span> classLoader <span class="token operator">!=</span> beanClass<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		classLoader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartClassLoader</span><span class="token punctuation">)</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginalClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u51C6\u5907\u5DE5\u4F5C\u5B8C\u6210\uFF0C\u5F00\u59CB\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61</span>
	<span class="token keyword">return</span> proxyFactory<span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br></div></div><p>\u8FDB\u5165\u5230 <code>ProxyFactory#getProxy(java.lang.ClassLoader)</code> \u65B9\u6CD5\u5F53\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">createAopProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u901A\u8FC7 <code>createAopProxy</code> \u65B9\u6CD5\u5728\u5185\u90E8\u51B3\u5B9A\u4F7F\u7528 JDK \u52A8\u6001\u4EE3\u7406\u8FD8\u662F CgLib \u52A8\u6001\u4EE3\u7406\u3002 \u901A\u8FC7 <code>getProxy</code> \u65B9\u6CD5\u8C03\u7528\u5177\u4F53\u65B9\u6CD5\u5B8C\u6210\u4EE3\u7406\u5BF9\u8C61\u521B\u5EFA\u3002</p><blockquote><p>\u901A\u8FC7\u6E90\u7801\u8DDF\u8E2A\uFF0C\u6211\u4EEC\u6700\u7EC8\u53D1\u73B0\uFF1A AOP \u4EE3\u7406\u5BF9\u8C61\u7684\u521B\u5EFA\u662F\u4F7F\u7528\u4E86\u540E\u7F6E\u5904\u7406\u5668 AbstractAutoProxyCreator \u6765\u5B8C\u6210\u7684\u3002</p></blockquote><h3 id="\u7B2C\u4E8C\u8282-spring\u58F0\u660E\u5F0F\u4E8B\u52A1\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u8282-spring\u58F0\u660E\u5F0F\u4E8B\u52A1\u63A7\u5236" aria-hidden="true">#</a> \u7B2C\u4E8C\u8282 Spring\u58F0\u660E\u5F0F\u4E8B\u52A1\u63A7\u5236</h3><p>\u58F0\u660E\u5F0F\u4E8B\u52A1\u5F88\u65B9\u4FBF\uFF0C\u5C24\u5176\u7EAF\u6CE8\u89E3\u6A21\u5F0F\uFF0C\u4EC5\u4EC5\u51E0\u4E2A\u6CE8\u89E3\u5C31\u80FD\u63A7\u5236\u4E8B\u52A1\u4E86\u3002\u597D\u795E\u5947!</p><p>\u90A3\u4E48\u8FD9\u4E9B\u6CE8\u89E3\u90FD\u505A\u4E86\u4EC0\u4E48?</p><blockquote><p>@EnableTransactionManagement</p><p>@Transactional</p></blockquote><p>\u4ECE\u5F00\u5173\u6CE8\u89E3\u5165\u624B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">TransactionManagementConfigurationSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53D1\u73B0\u4ED6\u5F15\u5165\u4E86 <code>TransactionManagementConfigurationSelector</code> \u7C7B\u3002\u8FDB\u5165\u5176\u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionManagementConfigurationSelector</span> <span class="token keyword">extends</span> <span class="token class-name">AdviceModeImportSelector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EnableTransactionManagement</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectImports</span><span class="token punctuation">(</span><span class="token class-name">AdviceMode</span> adviceMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>adviceMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">case</span> PROXY<span class="token operator">:</span>
				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token class-name">AutoProxyRegistrar</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
						<span class="token class-name">ProxyTransactionManagementConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> ASPECTJ<span class="token operator">:</span>
				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token function">determineTransactionAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
				<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">determineTransactionAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token string">&quot;javax.transaction.Transactional&quot;</span><span class="token punctuation">,</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span>
				<span class="token class-name">TransactionManagementConfigUtils</span><span class="token punctuation">.</span>JTA_TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME <span class="token operator">:</span>
				<span class="token class-name">TransactionManagementConfigUtils</span><span class="token punctuation">.</span>TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5173\u6CE8\u7B2C\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u6700\u7EC8\u8FD4\u56DE\u4E86\u4E24\u4E2A\u5BF9\u8C61\uFF1A</p><p><code>AutoProxyRegistrar</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoProxyRegistrar</span> <span class="token keyword">implements</span> <span class="token class-name">ImportBeanDefinitionRegistrar</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">AnnotationMetadata</span> importingClassMetadata<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> candidateFound <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> annTypes <span class="token operator">=</span> importingClassMetadata<span class="token punctuation">.</span><span class="token function">getAnnotationTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> annType <span class="token operator">:</span> annTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">AnnotationAttributes</span> candidate <span class="token operator">=</span> <span class="token class-name">AnnotationConfigUtils</span><span class="token punctuation">.</span><span class="token function">attributesFor</span><span class="token punctuation">(</span>importingClassMetadata<span class="token punctuation">,</span> annType<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">continue</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token class-name">Object</span> mode <span class="token operator">=</span> candidate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Object</span> proxyTargetClass <span class="token operator">=</span> candidate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;proxyTargetClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> proxyTargetClass <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">AdviceMode</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> mode<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
					<span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> proxyTargetClass<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				candidateFound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">==</span> <span class="token class-name">AdviceMode</span><span class="token punctuation">.</span>PROXY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token class-name">AopConfigUtils</span><span class="token punctuation">.</span><span class="token function">registerAutoProxyCreatorIfNecessary</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span> proxyTargetClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">AopConfigUtils</span><span class="token punctuation">.</span><span class="token function">forceAutoProxyCreatorToUseClassProxying</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">return</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>candidateFound <span class="token operator">&amp;&amp;</span> logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// log ...</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p><code>ProxyTransactionManagementConfiguration</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span>ROLE_INFRASTRUCTURE<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProxyTransactionManagementConfiguration</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractTransactionManagementConfiguration</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token class-name">TransactionManagementConfigUtils</span><span class="token punctuation">.</span>TRANSACTION_ADVISOR_BEAN_NAME<span class="token punctuation">)</span>
	<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span>ROLE_INFRASTRUCTURE<span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">BeanFactoryTransactionAttributeSourceAdvisor</span> <span class="token function">transactionAdvisor</span><span class="token punctuation">(</span>
			<span class="token class-name">TransactionAttributeSource</span> transactionAttributeSource<span class="token punctuation">,</span> <span class="token class-name">TransactionInterceptor</span> transactionInterceptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u4E8B\u52A1\u589E\u5F3A</span>
		<span class="token class-name">BeanFactoryTransactionAttributeSourceAdvisor</span> advisor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanFactoryTransactionAttributeSourceAdvisor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5411\u4E8B\u52A1\u589E\u5F3A\u4E2D\u6CE8\u5165\u5C5E\u6027\u89E3\u6790\u5668 transactionAttributeSource</span>
		advisor<span class="token punctuation">.</span><span class="token function">setTransactionAttributeSource</span><span class="token punctuation">(</span>transactionAttributeSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u5411\u4E8B\u52A1\u589E\u5F3A\u4E2D\u6CE8\u5165\u4E8B\u52A1\u62E6\u622A\u5668 transactionInterceptor</span>
		advisor<span class="token punctuation">.</span><span class="token function">setAdvice</span><span class="token punctuation">(</span>transactionInterceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>enableTx <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			advisor<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>enableTx<span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> advisor<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span>ROLE_INFRASTRUCTURE<span class="token punctuation">)</span>
	<span class="token comment">// \u5C5E\u6027\u89E3\u6790\u5668 transactionAttributeSource</span>
	<span class="token keyword">public</span> <span class="token class-name">TransactionAttributeSource</span> <span class="token function">transactionAttributeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationTransactionAttributeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span>ROLE_INFRASTRUCTURE<span class="token punctuation">)</span>
	<span class="token comment">// \u4E8B\u52A1\u62E6\u622A\u5668 transactionInterceptor</span>
	<span class="token keyword">public</span> <span class="token class-name">TransactionInterceptor</span> <span class="token function">transactionInterceptor</span><span class="token punctuation">(</span><span class="token class-name">TransactionAttributeSource</span> transactionAttributeSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">TransactionInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		interceptor<span class="token punctuation">.</span><span class="token function">setTransactionAttributeSource</span><span class="token punctuation">(</span>transactionAttributeSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>txManager <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			interceptor<span class="token punctuation">.</span><span class="token function">setTransactionManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>txManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><blockquote><p><code>@EnableTransactionManagement</code> \u6CE8\u89E3</p><p>1)\u901A\u8FC7 <code>@import</code> \u5F15\u5165\u4E86 <code>TransactionManagementConfigurationSelector</code>\u7C7B</p><p>\u5B83\u7684selectImports\u65B9\u6CD5\u5BFC\u5165\u4E86\u53E6\u5916\u4E24\u4E2A\u7C7B: <code>AutoProxyRegistrar</code> \u548C <code>ProxyTransactionManagementConfiguration</code></p><p>2)<code>AutoProxyRegistrar</code> \u7C7B\u5206\u6790</p><p>\u65B9\u6CD5 <code>registerBeanDefinitions</code> \u4E2D\uFF0C\u5F15\u5165\u4E86\u5176\u4ED6\u7C7B\uFF0C\u901A\u8FC7 <code>AopConfigUtils.registerAutoProxyCreatorIfNecessary(registry)</code> \u5F15\u5165 <code>InfrastructureAdvisorAutoProxyCreator</code>\uFF0C \u5B83\u7EE7\u627F\u4E86 <code>AbstractAutoProxyCreator</code>\uFF0C\u662F\u4E00\u4E2A\u540E\u7F6E\u5904\u7406\u5668\u7C7B</p><p>3)<code>ProxyTransactionManagementConfiguration</code> \u662F\u4E00\u4E2A\u6DFB\u52A0\u4E86 <code>@Configuration</code> \u6CE8\u89E3\u7684\u914D\u7F6E\u7C7B (\u6CE8\u518Cbean)</p><p>\u6CE8\u518C\u4E8B\u52A1\u589E\u5F3A\u5668(\u6CE8\u5165\u5C5E\u6027\u89E3\u6790\u5668\u3001\u4E8B\u52A1\u62E6\u622A\u5668)</p><p>\u5C5E\u6027\u89E3\u6790\u5668: <code>AnnotationTransactionAttributeSource</code>\uFF0C\u5185\u90E8\u6301\u6709\u4E86\u4E00\u4E2A\u89E3\u6790\u5668\u96C6\u5408, <code>Set&lt;TransactionAnnotationParser&gt; annotationParsers</code>; \u5177\u4F53\u4F7F\u7528\u7684\u662F <code>SpringTransactionAnnotationParser</code> \u89E3\u6790\u5668\uFF0C\u7528\u6765\u89E3\u6790 <code>@Transactional</code> \u7684\u4E8B\u52A1\u5C5E\u6027</p><p>\u4E8B\u52A1\u62E6\u622A\u5668: <code>TransactionInterceptor</code> \u5B9E\u73B0\u4E86 <code>MethodInterceptor</code> \u63A5\u53E3\uFF0C\u8BE5\u901A\u7528\u62E6\u622A\u4F1A\u5728\u4EA7\u751F\u4EE3\u7406\u5BF9\u8C61\u4E4B\u524D\u548Caop\u589E\u5F3A\u5408\u5E76\uFF0C\u6700\u7EC8\u4E00\u8D77\u5F71\u54CD\u5230\u4EE3\u7406\u5BF9\u8C61</p><p><code>TransactionInterceptor</code> \u7684 <code>invoke</code> \u65B9\u6CD5\u4E2D <code>invokeWithinTransaction</code> \u4F1A\u89E6\u53D1\u539F\u6709\u4E1A\u52A1\u903B\u8F91\u8C03\u7528(\u589E\u5F3A\u4E8B\u52A1)</p></blockquote>`,361);function l(u,i){return c}var k=n(o,[["render",l],["__file","Spring.html.vue"]]);export{k as default};
