import{_ as e,r as o,o as c,a as l,b as n,d as p,F as r,c as t,e as s}from"./app.40df414d.js";var u="/doc/assets/README-1646471045857.2f993365.png";const i={},k=t('<h1 id="scala\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#scala\u7F16\u7A0B" aria-hidden="true">#</a> Scala\u7F16\u7A0B</h1><h2 id="\u7B2C\u4E00\u90E8\u5206-scala-\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u90E8\u5206-scala-\u57FA\u7840" aria-hidden="true">#</a> \u7B2C\u4E00\u90E8\u5206 Scala \u57FA\u7840</h2><h3 id="\u7B2C1\u8282-scala\u8BED\u8A00\u6982\u51B5" tabindex="-1"><a class="header-anchor" href="#\u7B2C1\u8282-scala\u8BED\u8A00\u6982\u51B5" aria-hidden="true">#</a> \u7B2C1\u8282 Scala\u8BED\u8A00\u6982\u51B5</h3><h4 id="_1-1-scala\u8BED\u8A00\u8D77\u6E90" tabindex="-1"><a class="header-anchor" href="#_1-1-scala\u8BED\u8A00\u8D77\u6E90" aria-hidden="true">#</a> 1.1 Scala\u8BED\u8A00\u8D77\u6E90</h4><p>\u9A6C\u4E01\xB7\u5965\u5FB7\u65AF\u57FA\uFF08Martin Odersky\uFF09\u662F\u7F16\u8BD1\u5668\u53CA\u7F16\u7A0B\u7684\u72C2\u70ED\u7231\u597D\u8005\u3002</p><p>\u4E3B\u6D41JVM\u7684Javac\u7F16\u8BD1\u5668\u5C31\u662F\u9A6C\u4E01\xB7\u5965\u5FB7\u65AF\u57FA\u7F16\u5199\u51FA\u6765\u7684\uFF0CJDK5.0\u3001JDK8.0\u7684\u7F16\u8BD1\u5668\u5C31\u662F\u4ED6\u5199\u7684\u3002</p><p>\u957F\u65F6\u95F4\u7684\u7F16\u7A0B\u4E4B\u540E\uFF0C\u4ED6\u5E0C\u671B\u53D1\u660E\u4E00\u79CD\u8BED\u8A00\uFF0C\u80FD\u591F\u8BA9\u5199\u7A0B\u5E8F\u8FD9\u6837\u7684\u57FA\u7840\u5DE5\u4F5C\u53D8\u5F97\u9AD8\u6548\uFF0C\u7B80\u5355\u3002</p><p>\u5F53\u63A5\u89E6\u5230Java\u8BED\u8A00\u540E\uFF0C\u5BF9Java\u8FD9\u95E8\u8BED\u8A00\u4EA7\u751F\u4E86\u6781\u5927\u7684\u5174\u8DA3\uFF0C\u6240\u4EE5\u51B3\u5B9A\u5C06\u51FD\u6570\u5F0F\u7F16\u7A0B\u8BED\u8A00\u7684\u7279\u70B9\u878D\u5408\u5230 Java \u4E2D\uFF0C\u7531\u6B64\u53D1\u660E\u4E86Scala\u3002</p><h4 id="_1-2-scala\u8BED\u8A00\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-2-scala\u8BED\u8A00\u7279\u70B9" aria-hidden="true">#</a> 1.2 Scala\u8BED\u8A00\u7279\u70B9</h4><p>Scala\u662F\u4E00\u95E8\u4EE5 JVM \u4E3A\u8FD0\u884C\u73AF\u5883\u5E76\u5C06\u9762\u5411\u5BF9\u8C61\u548C\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u6700\u4F73\u7279\u6027\u7ED3\u5408\u5728\u4E00\u8D77\u7684\u9759\u6001\u7C7B\u578B\u7F16\u7A0B\u8BED\u8A00\u3002</p><p>Scala\u6E90\u4EE3\u7801\u4F1A\u88AB\u7F16\u8BD1\u6210Java\u5B57\u8282\u7801\uFF0C\u7136\u540E\u8FD0\u884C\u4E8EJVM\u4E4B\u4E0A\uFF0C\u5E76\u53EF\u4EE5\u8C03\u7528\u73B0\u6709\u7684Java\u7C7B\u5E93\uFF0C\u5B9E\u73B0\u4E24\u79CD\u8BED\u8A00\u7684\u65E0\u7F1D\u4E92\u64CD\u4F5C\u7684\u3002</p><ul><li>\u9762\u5411\u5BF9\u8C61</li></ul><p>Scala\u662F\u4E00\u79CD\u9762\u5411\u5BF9\u8C61\u7684\u8BED\u8A00\u3002</p><p>Scala\u4E2D\u7684\u6BCF\u4E2A\u503C\u90FD\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5305\u62EC\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF08\u5373\u5E03\u5C14\u503C\u3001\u6570\u5B57\u7B49\uFF09\u5728\u5185\uFF0C\u8FDE\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61\u3002</p><ul><li>\u51FD\u6570\u5F0F\u7F16\u7A0B</li></ul><p>Scala\u4E5F\u662F\u4E00\u79CD\u51FD\u6570\u5F0F\u8BED\u8A00\uFF0C\u5176\u51FD\u6570\u4E5F\u80FD\u5F53\u6210\u503C\u6765\u4F7F\u7528\u3002</p><p>Scala\u4E2D\u652F\u6301\u9AD8\u9636\u51FD\u6570\uFF0C\u5141\u8BB8\u5D4C\u5957\u591A\u5C42\u51FD\u6570\uFF0C\u5E76\u652F\u6301\u67EF\u91CC\u5316\u3002</p><p>Scala\u63D0\u4F9B\u4E86\u6A21\u5F0F\u5339\u914D\uFF0C\u53EF\u4EE5\u5339\u914D\u5404\u79CD\u60C5\u51B5\uFF0C\u6BD4\u5982\u53D8\u91CF\u7684\u7C7B\u578B\u3001\u96C6\u5408\u7684\u5143\u7D20\u3001\u6709\u503C\u6216\u65E0\u503C\u3002</p><ul><li>\u9759\u6001\u7C7B\u578B</li></ul><p>Scala\u5177\u5907\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u901A\u8FC7\u7F16\u8BD1\u65F6\u68C0\u67E5\uFF0C\u4FDD\u8BC1\u4EE3\u7801\u7684\u5B89\u5168\u6027\u548C\u4E00\u81F4\u6027\u3002</p><ul><li>\u5E76\u53D1\u6027</li></ul><p>Scala\u4F7F\u7528Actor\u4F5C\u4E3A\u5176\u5E76\u53D1\u6A21\u578B\uFF0CActor\u662F\u7C7B\u4F3C\u7EBF\u7A0B\u7684\u5B9E\u4F53\u3002</p><p>Actor\u53EF\u4EE5\u590D\u7528\u7EBF\u7A0B\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u4F7F\u7528\u6570\u767E\u4E07\u4E2AActor\uFF0C\u800C\u7EBF\u7A0B\u53EA\u80FD\u521B\u5EFA\u6570\u5343\u4E2A\u3002</p><h4 id="_1-3-\u4E3A\u4EC0\u4E48\u8981\u5B66scala" tabindex="-1"><a class="header-anchor" href="#_1-3-\u4E3A\u4EC0\u4E48\u8981\u5B66scala" aria-hidden="true">#</a> 1.3 \u4E3A\u4EC0\u4E48\u8981\u5B66Scala</h4><p>\u4F18\u96C5\uFF1A\u8FD9\u662F\u6846\u67B6\u8BBE\u8BA1\u5E08\u7B2C\u4E00\u4E2A\u8981\u8003\u8651\u7684\u95EE\u9898\uFF0C\u6846\u67B6\u7684\u7528\u6237\u662F\u5E94\u7528\u5F00\u53D1\u7A0B\u5E8F\u5458\uFF0CAPI\u662F\u5426\u4F18\u96C5\u76F4\u63A5\u5F71\u54CD\u7528\u6237\u4F53\u9A8C\u3002</p><p>\u7B80\u6D01\uFF1AScala\u8BED\u8A00\u8868\u8FBE\u80FD\u529B\u5F3A\uFF0C\u4E00\u884C\u4EE3\u7801\u62B5\u5F97\u4E0AJava\u591A\u884C\uFF0C\u5F00\u53D1\u901F\u5EA6\u5FEB\u3002</p><p>\u878D\u5408\u5927\u6570\u636E\u751F\u6001\u5708\uFF1AHadoop\u73B0\u5728\u662F\u5927\u6570\u636E\u4E8B\u5B9E\u6807\u51C6\uFF0C(Kafka, Spark\u6E90\u7801\u90FD\u662F\u7528Scala\u7F16\u5199\u7684\uFF0CSpark, Flink \u90FD\u652F\u6301\u4F7F\u7528Scala\u8FDB\u884C\u5F00\u53D1)</p><blockquote><p>Spark\u5E76\u4E0D\u662F\u8981\u53D6\u4EE3Hadoop\uFF0C\u800C\u662F\u8981\u5B8C\u5584Hadoop\u751F\u6001\u3002</p></blockquote><h3 id="\u7B2C2\u8282-\u73AF\u5883\u51C6\u5907" tabindex="-1"><a class="header-anchor" href="#\u7B2C2\u8282-\u73AF\u5883\u51C6\u5907" aria-hidden="true">#</a> \u7B2C2\u8282 \u73AF\u5883\u51C6\u5907</h3>',29),b=s("Scala\u5B98\u7F51\uFF1A"),m={href:"https://www.scala-lang.org/",target:"_blank",rel:"noopener noreferrer"},d=s("https://www.scala-lang.org/"),g=n("h4",{id:"_2-1-windows\u4E0B\u73AF\u5883\u914D\u7F6E",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-1-windows\u4E0B\u73AF\u5883\u914D\u7F6E","aria-hidden":"true"},"#"),s(" 2.1 Windows\u4E0B\u73AF\u5883\u914D\u7F6E")],-1),f=s("\u8BBF\u95EEScala\u5B98\u7F51\u4E0B\u8F7DScala 2.11.8\u5B89\u88C5\u5305\uFF0C\u4E0B\u8F7D\u5730\u5740\uFF1A"),h={href:"https://www.scala-lang.org/download/2.11.8.html",target:"_blank",rel:"noopener noreferrer"},y=s("https://www.scala-lang.org/download/2.11.8.html"),v=t(`<p>\u4E0B\u8F7D <code>scala-2.11.8.msi</code> \u540E\uFF0C\u70B9\u51FB\u4E0B\u4E00\u6B65\u5C31\u53EF\u4EE5\u4E86\uFF08\u81EA\u52A8\u914D\u7F6E\u4E0A\u73AF\u5883\u53D8\u91CF\uFF09\u3002</p><p>\u4E5F\u53EF\u4EE5\u4E0B\u8F7D scala-2.11.8.zip\uFF0C\u89E3\u538B\u540E\u914D\u7F6E\u4E0A\u73AF\u5883\u53D8\u91CF\u5C31\u53EF\u4EE5\u4E86\u3002</p><blockquote><p>\u5907\u6CE8\uFF1A\u5B89\u88C5Scala\u4E4B\u524D\uFF0CWindows\u7CFB\u7EDF\u9700\u8981\u5B89\u88C5JDK\u3002</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scala -version
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-2-idea\u73AF\u5883\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_2-2-idea\u73AF\u5883\u914D\u7F6E" aria-hidden="true">#</a> 2.2 IDEA\u73AF\u5883\u914D\u7F6E</h4><p>IDEA\u662F Java \u7684\u96C6\u6210\u5F00\u53D1\u73AF\u5883\uFF0C\u8981\u652F\u6301Scala\u5F00\u53D1\uFF0C\u9700\u8981\u5B89\u88C5Scala\u63D2\u4EF6\uFF1B</p><p>HelloWorld</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> HelloScala <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;Hello world!&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_2-3-scala\u7684repl" tabindex="-1"><a class="header-anchor" href="#_2-3-scala\u7684repl" aria-hidden="true">#</a> 2.3 Scala\u7684REPL</h4><p>\u5728\u547D\u4EE4\u884C\u8F93\u5165 <code>Scala</code> \u53EF\u542F\u52A8Scala REPL\u3002</p><p>REPL \u662F\u4E00\u4E2A\u4EA4\u4E92\u5F0F\u89E3\u6790\u5668\u73AF\u5883\uFF0CR(read)\u3001E(evaluate) \u3001P\uFF08print\uFF09\u3001L\uFF08loop\uFF09\u8F93\u5165\u503C\uFF0C\u4EA4\u4E92\u5F0F\u89E3\u6790\u5668\u4F1A\u8BFB\u53D6\u8F93\u5165\u5185\u5BB9\u5E76\u5BF9\u5B83\u6C42\u503C\uFF0C\u518D\u6253\u5370\u7ED3\u679C\uFF0C\u5E76\u91CD\u590D\u6B64\u8FC7\u7A0B\u3002</p><h3 id="\u7B2C3\u8282-\u57FA\u7840\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B2C3\u8282-\u57FA\u7840\u8BED\u6CD5" aria-hidden="true">#</a> \u7B2C3\u8282 \u57FA\u7840\u8BED\u6CD5</h3><p>\u57FA\u7840\u8BED\u6CD5\u89C4\u5219\uFF1A</p><p>\u533A\u5206\u5927\u5C0F\u5199 - Scala\u8BED\u8A00\u5BF9\u5927\u5C0F\u5199\u654F\u611F\uFF1B</p><p>\u7C7B\u540D - \u5BF9\u4E8E\u6240\u6709\u7684\u7C7B\u540D\u7684\u7B2C\u4E00\u4E2A\u5B57\u6BCD\u8981\u5927\u5199\u3002\u5982\u679C\u9700\u8981\u4F7F\u7528\u51E0\u4E2A\u5355\u8BCD\u6765\u6784\u6210\u4E00\u4E2A\u7C7B\u540D\uFF0C\u6BCF\u4E2A\u5355\u8BCD\u7684\u7B2C\u4E00\u4E2A\u5B57\u6BCD\u8981\u5927\u5199\uFF1B\u6BD4\u5982: <code>ListDemo</code></p><p>\u65B9\u6CD5\u540D - \u6240\u6709\u65B9\u6CD5\u540D\u7684\u7B2C\u4E00\u4E2A\u5B57\u6BCD\u7528\u5C0F\u5199\u3002\u5982\u679C\u9700\u8981\u4F7F\u7528\u51E0\u4E2A\u5355\u8BCD\u6765\u6784\u6210\u65B9\u6CD5\u540D\uFF0C\u9664\u7B2C\u4E00\u4E2A\u5355\u8BCD\u5916\u6BCF\u4E2A\u8BCD\u7684\u7B2C\u4E00\u4E2A\u5B57\u6BCD\u5E94\u5927\u5199(\u5C0F\u9A7C\u5CF0)\uFF1B\u6BD4\u5982\uFF1A<code>getResult</code></p><p>\u7A0B\u5E8F\u6587\u4EF6\u540D - Scala\u7A0B\u5E8F\u6587\u4EF6\u7684\u540E\u7F00\u540D\u662F <code>.scala</code>\uFF0C\u7A0B\u5E8F\u6587\u4EF6\u7684\u540D\u79F0\u53EF\u4EE5\u4E0D\u4E0E\u5BF9\u8C61\u540D\u79F0\u5B8C\u5168\u5339\u914D\u3002\u8FD9\u70B9\u4E0EJava\u6709\u6240\u533A\u522B\u3002</p><blockquote><p>\u5907\u6CE8\uFF1A\u5EFA\u8BAE\u9075\u5FAA Java \u7684\u60EF\u4F8B\uFF0C\u7A0B\u5E8F\u6587\u4EF6\u540D\u79F0\u4E0E\u5BF9\u8C61\u540D\u79F0\u5339\u914D\uFF1B</p></blockquote><p><code>main()</code> \u65B9\u6CD5 - Scala\u7A0B\u5E8F\u4ECE <code>main()</code> \u65B9\u6CD5\u5F00\u59CB\u5904\u7406\uFF0C\u8FD9\u662F\u6BCF\u4E00\u4E2AScala\u7A0B\u5E8F\u7684\u5165\u53E3\u70B9\u3002<code>main()</code>\u5B9A\u4E49\u5728 <code>object</code> \u4E2D\uFF1B</p><blockquote><p>object \u76F8\u5F53\u4E8E Java \u4E2D\u7684\u5355\u4F8B\u5BF9\u8C61</p></blockquote><p>\u6807\u8BC6\u7B26 - \u6240\u6709Scala\u7EC4\u4EF6\u90FD\u9700\u8981\u540D\u79F0\uFF0C\u7528\u4E8E\u5BF9\u8C61\u3001\u7C7B\u3001\u53D8\u91CF\u548C\u65B9\u6CD5\u7684\u540D\u79F0\u79F0\u4E3A\u6807\u8BC6\u7B26\u3002</p><blockquote><p>\u5173\u952E\u5B57\u4E0D\u80FD\u7528\u4F5C\u6807\u8BC6\u7B26\uFF0C\u6807\u8BC6\u7B26<strong>\u533A\u5206\u5927\u5C0F\u5199</strong>\uFF1B\u6807\u8BC6\u7B26\u4EE5\u5B57\u6BCD\u6216\u4E0B\u5212\u7EBF\u5F00\u5934\uFF0C\u540E\u9762\u53EF\u4EE5\u6709\u66F4\u591A\u7684\u5B57\u6BCD\u3001\u6570\u5B57\u6216\u4E0B\u5212\u7EBF\uFF1B<code>$</code> \u5B57\u7B26\u662FScala\u4E2D\u7684\u4FDD\u7559\u5173\u952E\u5B57\uFF0C\u4E0D\u80FD\u5728\u6807\u8BC6\u7B26\u4E2D\u4F7F\u7528\uFF1B</p></blockquote><p>\u6CE8\u91CA - Scala\u4F7F\u7528\u4E86\u4E0EJava\u76F8\u540C\u7684\u5355\u884C\u548C\u591A\u884C\u6CE8\u91CA\uFF1B</p><p>\u6362\u884C\u7B26 - Scala\u8BED\u53E5\u53EF\u4EE5\u7528\u5206\u53F7\u4F5C\u4E3A\u4E00\u884C\u7684\u7ED3\u675F\uFF0C\u8BED\u53E5\u672B\u5C3E\u7684\u5206\u53F7\u901A\u5E38\u53EF\u4EE5\u7701\u7565\uFF0C\u4F46\u662F\u5982\u679C\u4E00\u884C\u91CC\u6709\u591A\u4E2A\u8BED\u53E5\u90A3\u4E48\u5206\u53F7\u662F\u5FC5\u987B\u7684\u3002</p><p>\u5C0F\u7ED3\uFF1AScala\u7684\u57FA\u7840\u8BED\u6CD5\u4E0EJava\u6BD4\u8F83\u7C7B\u4F3C\uFF0C\u4F46\u662F\u4ECD\u7136\u6709\u4E09\u70B9\u4E0D\u4E00\u6837\u7684\u5730\u65B9\uFF1A</p><ol><li>\u5728Scala\u4E2D\u6362\u884C\u7B26\u662F\u53EF\u4EE5\u7701\u7565\u7684</li><li>Scala\u4E2D <code>main</code> \u65B9\u6CD5\u5B9A\u4E49\u5728 <code>object</code> \u4E2D</li><li>Scala\u4E2D\u7A0B\u5E8F\u6587\u4EF6\u540D\u53EF\u4EE5\u4E0D\u4E0E\u5BF9\u8C61\u540D\u79F0\u76F8\u5339\u914D\uFF0C\u4F46\u662F\u5EFA\u8BAE\u4ECD\u7136\u9075\u5FAAJava\u7684\u89C4\u8303\uFF0C\u4E8C\u8005\u6700\u597D\u5339\u914D</li></ol><h3 id="\u7B2C4\u8282-\u5E38\u7528\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#\u7B2C4\u8282-\u5E38\u7528\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF" aria-hidden="true">#</a> \u7B2C4\u8282 \u5E38\u7528\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF</h3><table><thead><tr><th>\u6570\u636E\u7C7B\u578B</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>Byte</td><td>8\u4F4D\u6709\u7B26\u53F7\u8865\u7801\u6574\u6570\u3002\u6570\u503C\u533A\u95F4\u4E3A -128 \u5230 127</td></tr><tr><td>Short</td><td>16\u4F4D\u6709\u7B26\u53F7\u8865\u7801\u6574\u6570\u3002\u6570\u503C\u533A\u95F4\u4E3A -32768 \u5230 32767</td></tr><tr><td>Int</td><td>32\u4F4D\u6709\u7B26\u53F7\u8865\u7801\u6574\u6570\u3002\u6570\u503C\u533A\u95F4\u4E3A -2147483648 \u5230 2147483647</td></tr><tr><td>Long</td><td>64\u4F4D\u6709\u7B26\u53F7\u8865\u7801\u6574\u6570\u3002\u6570\u503C\u533A\u95F4\u4E3A -9223372036854775808 \u5230 9223372036854775807</td></tr><tr><td>Float</td><td>32 \u4F4D, IEEE 754\u6807\u51C6\u7684\u5355\u7CBE\u5EA6\u6D6E\u70B9\u6570</td></tr><tr><td>Double</td><td>64 \u4F4D IEEE 754\u6807\u51C6\u7684\u53CC\u7CBE\u5EA6\u6D6E\u70B9\u6570</td></tr><tr><td>Char</td><td>16\u4F4D\u65E0\u7B26\u53F7Unicode\u5B57\u7B26, \u533A\u95F4\u503C\u4E3A U+0000 \u5230 U+FFFF</td></tr><tr><td>String</td><td>\u5B57\u7B26\u5E8F\u5217</td></tr><tr><td>Boolean</td><td>true\u6216false</td></tr><tr><td>Unit</td><td>\u8868\u793A\u65E0\u503C\uFF0C\u76F8\u5F53\u4E8EJava\u4E2D\u7684 <code>void</code>\uFF0C\u7528\u4E8E\u4E0D\u8FD4\u56DE\u4EFB\u4F55\u7ED3\u679C\u7684\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u3002Unit\u5199\u6210 <code>()</code></td></tr><tr><td>Null</td><td>\u901A\u5E38\u5199\u6210 <code>null</code></td></tr><tr><td>Nothing</td><td>Nothing \u7C7B\u578B\u5728 Scala \u7C7B\u5C42\u7EA7\u7684\u6700\u4F4E\u7AEF\uFF0C\u5B83\u662F\u4EFB\u4F55\u5176\u4ED6\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</td></tr><tr><td>Any</td><td>Any \u662F Scala \u4E2D\u6240\u6709\u7C7B\u7684\u8D85\u7C7B</td></tr><tr><td>AnyRef</td><td>AnyRef \u662F Scala \u4E2D\u6240\u6709<strong>\u5F15\u7528\u7C7B</strong>\u7684\u8D85\u7C7B</td></tr></tbody></table><p>Scala\u548CJava\u4E00\u6837\uFF0C\u67098\u79CD\u6570\u503C\u7C7B\u578B Byte\u3001Short\u3001Int\u3001Long\u3001Float\u3001Double\u3001Char\u3001Boolean \u7C7B\u578B\uFF1B\u548C Java \u4E0D\u540C\u7684\u662F\uFF0C\u8FD9\u4E9B\u7C7B\u578B\u90FD\u662F\u7C7B\uFF0C\u6709\u81EA\u5DF1\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002</p><blockquote><p>Scala\u5E76\u4E0D\u523B\u610F\u7684\u533A\u5206\u57FA\u672C\u7C7B\u578B\u548C\u5F15\u7528\u7C7B\u578B\u3002</p></blockquote><p>String \u76F4\u63A5\u5F15\u7528 <code>java.lang.String</code> \u4E2D\u7684\u7C7B\u578B\uFF0CString \u5728\u9700\u8981\u65F6\u80FD<strong>\u9690\u5F0F\u8F6C\u6362</strong>\u4E3A <code>StringOps</code> \uFF0C\u56E0\u6B64\u4E0D\u9700\u8981\u4EFB\u4F55\u989D\u5916\u7684\u8F6C\u6362\uFF0CString \u5C31\u53EF\u4EE5\u4F7F\u7528 <code>StringOps</code> \u4E2D\u7684\u65B9\u6CD5\u3002</p><p>\u6BCF\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u90FD\u6709\u5BF9\u5E94\u7684Rich\u7C7B\u578B\uFF0C\u5982RichInt\u3001RichChar\u7B49\uFF0C\u4E3A\u57FA\u672C\u7C7B\u578B\u63D0\u4F9B\u4E86\u66F4\u591A\u7684\u6709\u7528\u64CD\u4F5C\u3002</p><p>\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scala<span class="token operator">&gt;</span> <span class="token number">1</span>.max<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
res0: Int <span class="token operator">=</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><code>res0</code>: \u7CFB\u7EDF\u751F\u6210\u7684\u53D8\u91CF</li><li><code>Int</code>: \u6570\u636E\u7C7B\u578B\u4E3A <code>Int</code></li><li><code>1.max(10)</code>: \u5C06 <code>1</code> \u9690\u5F0F\u8F6C\u6362\u4E3A <code>RickInt</code> \u7C7B\u578B, \u7136\u540E\u8C03\u7528 <code>RichInt</code> \u7684 <code>max()</code> \u65B9\u6CD5</li></ul><p>\u7C7B\u578B\u8F6C\u6362\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scala<span class="token operator">&gt;</span> <span class="token number">1</span>.min<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
res1: Int <span class="token operator">=</span> <span class="token number">1</span>

scala<span class="token operator">&gt;</span> <span class="token number">1</span>.to<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
res2: scala.collection.immutable.Range.Inclusive <span class="token operator">=</span> Range<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">5</span>, <span class="token number">6</span>, <span class="token number">7</span>, <span class="token number">8</span>, <span class="token number">9</span>, <span class="token number">10</span><span class="token punctuation">)</span>

scala<span class="token operator">&gt;</span> <span class="token number">1</span>.until<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
res3: scala.collection.immutable.Range <span class="token operator">=</span> Range<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">5</span>, <span class="token number">6</span>, <span class="token number">7</span>, <span class="token number">8</span>, <span class="token number">9</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>\u4E0A\u9762\u8FD8\u53EF\u4EE5\u7B80\u5199\u4E3A: <code>1 min(10)</code>, <code>1 to(10)</code></p></blockquote><p>\u6574\u6570\u5B57\u9762\u91CF</p><blockquote><p>\u6574\u6570\u5B57\u9762\u91CF\u6709\u4E24\u79CD\u5F62\u5F0F\uFF0C\u5341\u8FDB\u5236\u4E0E\u5341\u516D\u8FDB\u5236(0X/0x\u5F00\u5934)</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u5341\u516D\u8FDB\u5236\u6574\u6570\u5B57\u9762\u91CF</span>
scala<span class="token operator">&gt;</span> val a <span class="token operator">=</span> 0xa
a: Int <span class="token operator">=</span> <span class="token number">10</span>

scala<span class="token operator">&gt;</span> val a <span class="token operator">=</span> 0X00FF
a: Int <span class="token operator">=</span> <span class="token number">255</span>

scala<span class="token operator">&gt;</span> val magic <span class="token operator">=</span> 0xcafe
magic: Int <span class="token operator">=</span> <span class="token number">51966</span>

<span class="token comment"># \u5341\u8FDB\u5236\u6574\u6570\u5B57\u9762\u91CF</span>
scala<span class="token operator">&gt;</span> val dec1 <span class="token operator">=</span> <span class="token number">255</span>
dec1: Int <span class="token operator">=</span> <span class="token number">255</span>

scala<span class="token operator">&gt;</span> val dec1 <span class="token operator">=</span> <span class="token number">31</span>
dec1: Int <span class="token operator">=</span> <span class="token number">31</span>

<span class="token comment"># Long\u7C7B\u578B\u6574\u6570\u5B57\u9762\u91CF</span>
scala<span class="token operator">&gt;</span> val magic <span class="token operator">=</span> 0xcafeL
magic: Long <span class="token operator">=</span> <span class="token number">51966</span>

scala<span class="token operator">&gt;</span> val long1 <span class="token operator">=</span> 255L
long1: Long <span class="token operator">=</span> <span class="token number">255</span>

<span class="token comment"># Short \u6216 Byte \u7C7B\u578B\uFF0C\u9700\u8981\u660E\u786E\u58F0\u660E\uFF0C\u5426\u5219\u7F16\u8BD1\u5668\u4F1A\u63A8\u65AD\u4E3AInt\u7C7B\u578B</span>
scala<span class="token operator">&gt;</span> val little:Short <span class="token operator">=</span> <span class="token number">32767</span>
little: Short <span class="token operator">=</span> <span class="token number">32767</span>

scala<span class="token operator">&gt;</span> val littler:Byte <span class="token operator">=</span> <span class="token number">127</span>
littler: Byte <span class="token operator">=</span> <span class="token number">127</span>

<span class="token comment"># \u5C0F\u6570\u9ED8\u8BA4\u4E3A Double</span>
scala<span class="token operator">&gt;</span> val <span class="token assign-left variable">nums</span><span class="token operator">=</span><span class="token number">3.1415</span>
nums: Double <span class="token operator">=</span> <span class="token number">3.1415</span>

scala<span class="token operator">&gt;</span> val <span class="token assign-left variable">nums2</span><span class="token operator">=</span><span class="token number">3</span>.1415f
nums2: Float <span class="token operator">=</span> <span class="token number">3.1415</span>

<span class="token comment"># \u652F\u6301\u79D1\u5B66\u8BA1\u6570</span>
scala<span class="token operator">&gt;</span> val <span class="token assign-left variable">nums</span><span class="token operator">=</span><span class="token number">3</span>.1415926e1
nums: Double <span class="token operator">=</span> <span class="token number">31.415926</span>

scala<span class="token operator">&gt;</span> val <span class="token assign-left variable">little</span><span class="token operator">=</span><span class="token number">3</span>.1415926e1F
little: Float <span class="token operator">=</span> <span class="token number">31.415926</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u5B57\u7B26\u5B57\u9762\u91CF</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scala<span class="token operator">&gt;</span> val a <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span>
a: Char <span class="token operator">=</span> A

<span class="token comment"># \u7528\u5B57\u7B26\u7684Unicode\u7801\u6765\u8868\u793A\u3002Unicode\u7801\u524D128\u4E2A\u5B57\u7B26\u5C31\u662FASCII\u7801</span>
scala<span class="token operator">&gt;</span> val b <span class="token operator">=</span> <span class="token string">&#39;\\u0042&#39;</span>
b: Char <span class="token operator">=</span> B

<span class="token comment"># \u8F6C\u4E49\u5B57\u7B26</span>
scala<span class="token operator">&gt;</span> val mark <span class="token operator">=</span> <span class="token string">&#39;\\&#39;</span>
<span class="token operator">&lt;</span>console<span class="token operator">&gt;</span>:1: error: unclosed character literal
val mark <span class="token operator">=</span> <span class="token string">&#39;\\&#39;</span>
           ^

scala<span class="token operator">&gt;</span> val mark <span class="token operator">=</span> <span class="token string">&#39;\\\\&#39;</span>
mark: Char <span class="token operator">=</span> <span class="token punctuation">\\</span>

<span class="token comment"># \u5B57\u7B26\u4E32\u5B57\u9762\u91CF</span>
scala<span class="token operator">&gt;</span> val str <span class="token operator">=</span> <span class="token string">&quot;Hello Scala&quot;</span>
str: String <span class="token operator">=</span> Hello Scala
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u7B2C5\u8282-\u7C7B\u5C42\u6B21\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u7B2C5\u8282-\u7C7B\u5C42\u6B21\u7ED3\u6784" aria-hidden="true">#</a> \u7B2C5\u8282 \u7C7B\u5C42\u6B21\u7ED3\u6784</h3><p>Scala\u4E2D\uFF0C\u6240\u6709\u7684\u7C7B\uFF0C\u5305\u62EC\u503C\u7C7B\u578B\u548C\u5F15\u7528\u7C7B\u578B\uFF0C\u90FD\u6700\u7EC8\u7EE7\u627F\u81EA\u4E00\u4E2A\u7EDF\u4E00\u7684\u6839\u7C7B\u578B <code>Any</code>\u3002</p><p>Scala\u4E2D\u5B9A\u4E49\u4E86\u4EE5\u4E0B\u4E09\u4E2A\u5E95\u5C42\u7C7B\uFF1AAny, AnyRef\u548CAnyVal</p><ul><li>Any \u662F\u6240\u6709\u7C7B\u578B\u5171\u540C\u7684\u6839\u7C7B\u578B\uFF0CAny\u662FAnyRef\u548CAnyVal\u7684\u8D85\u7C7B</li><li>AnyRef \u662F\u6240\u6709\u5F15\u7528\u7C7B\u578B\u7684\u8D85\u7C7B</li><li>AnyVal \u662F\u6240\u6709\u503C\u7C7B\u578B\u7684\u8D85\u7C7B</li></ul><p><img src="`+u+`" alt="Scala\u7C7B\u5C42\u6B21\u7ED3\u6784"></p><p>\u4E0A\u56FE\u4E2D\u6709\u4E09\u4E2A\u7C7B\u578B\u9700\u8981\u6CE8\u610F\uFF1A</p><p>Null \u662F\u6240\u6709\u5F15\u7528\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</p><blockquote><p>Null\u7C7B\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61 <code>null</code>\u3002</p><p>null\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u610F\u5F15\u7528\u7C7B\u578B\uFF0C\u4F46\u662F\u4E0D\u80FD\u8D4B\u503C\u7ED9\u503C\u7C7B\u578B\u3002</p></blockquote><p>Nothing \u4F4D\u4E8EScala\u7C7B\u7EE7\u627F\u5173\u7CFB\u7684\u5E95\u90E8\uFF0C\u5B83\u662F\u5176\u4ED6\u6240\u6709\u5176\u4ED6\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</p><blockquote><p>Nothing\u5BF9\u6CDB\u578B\u7ED3\u6784\u6709\u7528 \u3002\u6BD4\u5982\uFF0C\u7A7A\u5217\u8868Nil\u7684\u7C7B\u578B\u5C31\u662F <code>List[Nothing]</code></p><p>Nothing \u53EF\u4EE5\u7ED9\u51FA\u975E\u6B63\u5E38\u7EC8\u6B62\u7684\u4FE1\u53F7\u3002\u6BD4\u5982\uFF0C\u53EF\u4EE5\u4F7F\u7528 Nothing \u5904\u7406\u5F02\u5E38</p></blockquote><p>Unit\u7C7B\u578B\u7528\u6765\u6807\u8BC6\u8FC7\u7A0B\uFF0C\u8FC7\u7A0B\u5C31\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u65B9\u6CD5\uFF0CUnit\u7C7B\u4F3C\u4E8EJava\u91CC\u7684 <code>void</code>\u3002</p><blockquote><p>Unit\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B <code>()</code>\u3002</p></blockquote><p>\u4F7F\u7528\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># null \u4E0D\u80FD\u8D4B\u503C\u7ED9\u503C\u7C7B\u578B</span>
scala<span class="token operator">&gt;</span> val i: Int <span class="token operator">=</span> null
<span class="token operator">&lt;</span>console<span class="token operator">&gt;</span>:11: error: an expression of <span class="token builtin class-name">type</span> Null is ineligible <span class="token keyword">for</span> implicit conversion
       val i: Int <span class="token operator">=</span> null
                    ^
<span class="token comment"># \u53EF\u4EE5\u6B63\u5E38\u8D4B\u503C\u7ED9\u5F15\u7528\u7C7B\u578B</span>
scala<span class="token operator">&gt;</span> val str: String <span class="token operator">=</span> null
str: String <span class="token operator">=</span> null

<span class="token comment"># \u4F7F\u7528 Nothing \u5904\u7406\u5F02\u5E38</span>
scala<span class="token operator">&gt;</span> val flag <span class="token operator">=</span> <span class="token boolean">false</span>
flag: Boolean <span class="token operator">=</span> <span class="token boolean">false</span>

scala<span class="token operator">&gt;</span> val thing: Int <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token number">42</span> <span class="token keyword">else</span> throw new Exception<span class="token punctuation">(</span><span class="token string">&quot;ERROR!&quot;</span><span class="token punctuation">)</span>
java.lang.Exception: ERROR<span class="token operator">!</span>
  <span class="token punctuation">..</span>. <span class="token number">32</span> elided

<span class="token comment"># Unit\u7C7B\u578B\u53EA\u6709\u4E00\u4E2A\u5B9E\u4F8B()\uFF0C\u8BE5\u5B9E\u4F8B\u6CA1\u6709\u5B9E\u9645\u610F\u4E49</span>
scala<span class="token operator">&gt;</span> val a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
a: Unit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u7B2C6\u8282-\u503C\u4E0E\u53D8\u91CF-\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7B2C6\u8282-\u503C\u4E0E\u53D8\u91CF-\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a> \u7B2C6\u8282 \u503C\u4E0E\u53D8\u91CF&amp;\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD</h3><p>Scala\u4E2D\u7684\u58F0\u660E\u53D8\u91CF\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F\uFF1A</p><ul><li><code>val</code>: \u503C(value)\uFF0C\u7528 <code>val</code> \u5B9A\u4E49\u7684\u53D8\u91CF\uFF0C\u503C\u662F\u4E0D\u53EF\u53D8\u7684</li><li><code>var</code>: \u53D8\u91CF(variable)\uFF0C\u7528 <code>var</code> \u5B9A\u4E49\u7684\u53D8\u91CF\uFF0C\u503C\u662F\u53EF\u53D8\u7684</li></ul><p>\u5728Scala\u4E2D\uFF0C\u9F13\u52B1\u4F7F\u7528val\u3002\u5927\u591A\u6570\u7A0B\u5E8F\u5E76\u4E0D\u9700\u8981\u90A3\u4E48\u591A\u7684var\u53D8\u91CF\u3002</p><p>\u58F0\u660E\u53D8\u91CF\u65F6\uFF0C\u53EF\u4EE5\u4E0D\u6307\u5B9A\u53D8\u91CF\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u4F1A\u6839\u636E\u8D4B\u503C\u5185\u5BB9\u81EA\u52A8\u63A8\u65AD\u5F53\u524D\u53D8\u91CF\u7684\u6570\u636E\u7C7B\u578B\u3002</p><blockquote><p>\u5907\u6CE8\uFF1A\u7B80\u5355\u6570\u636E\u7C7B\u578B\u53EF\u4EE5\u7701\u7565\uFF0C\u5BF9\u4E8E\u590D\u6742\u7684\u6570\u636E\u7C7B\u578B\u5EFA\u8BAE\u660E\u786E\u58F0\u660E\uFF1B</p></blockquote><p>\u58F0\u660E\u53D8\u91CF\u65F6\uFF0C\u53EF\u4EE5\u5C06\u591A\u4E2A\u53D8\u91CF\u653E\u5728\u4E00\u8D77\u58F0\u660E\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># val\u5B9A\u4E49\u7684\u53D8\u91CF\u4E0D\u53EF\u66F4\u6539\uFF0C\u53D8\u91CF\u7684\u7C7B\u578B\u7F16\u8BD1\u5668\u53EF\u4EE5\u8FDB\u884C\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD</span>
scala<span class="token operator">&gt;</span> val name <span class="token operator">=</span> <span class="token string">&quot;john&quot;</span>
name: String <span class="token operator">=</span> john

scala<span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&quot;jack&quot;</span>
<span class="token operator">&lt;</span>console<span class="token operator">&gt;</span>:12: error: reassignment to val
       name <span class="token operator">=</span> <span class="token string">&quot;jack&quot;</span>
            ^

scala<span class="token operator">&gt;</span> val age <span class="token operator">=</span> <span class="token number">20</span>
age: Int <span class="token operator">=</span> <span class="token number">20</span>           

<span class="token comment"># \u5FC5\u8981\u65F6\u53EF\u4EE5\u6307\u5B9A\u6570\u636E\u7C7B\u578B</span>
scala<span class="token operator">&gt;</span> var name: String <span class="token operator">=</span> null
name: String <span class="token operator">=</span> null

<span class="token comment"># \u53EF\u4EE5\u5C06\u591A\u4E2A\u503C\u6216\u53D8\u91CF\u653E\u5728\u4E00\u8D77\u58F0\u660E</span>
scala<span class="token operator">&gt;</span> val x, y <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
x: Int <span class="token operator">=</span> <span class="token number">100</span>
y: Int <span class="token operator">=</span> <span class="token number">100</span>

scala<span class="token operator">&gt;</span> var name, message: String <span class="token operator">=</span> null
name: String <span class="token operator">=</span> null
message: String <span class="token operator">=</span> null
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="\u7B2C7\u8282-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7B2C7\u8282-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u7B2C7\u8282 \u64CD\u4F5C\u7B26</h3><p>Scala\u7684\u7B97\u672F\u64CD\u4F5C\u7B26\u3001\u4F4D\u64CD\u4F5C\u7B26\u4E0E Java \u4E2D\u7684\u6548\u679C\u662F\u4E00\u6837\u7684\u3002</p><blockquote><p>\u9700\u8981\u7279\u522B\u6CE8\u610F\u4E00\u70B9\uFF1AScala\u4E2D\u7684\u64CD\u4F5C\u7B26\u90FD\u662F\u65B9\u6CD5</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>a + b \u7B49\u4EF7\u4E8E a.+(b)
1 to 10 \u7B49\u4EF7\u4E8E 1.to(10)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>\u4E66\u5199\u65F6\u63A8\u8350\u4F7F\u7528\uFF1A<code>a + b</code>\u3001<code>1 to 10</code> \u8FD9\u79CD\u4EE3\u7801\u98CE\u683C\u3002</p></blockquote><p>Scala \u6CA1\u6709\u63D0\u4F9B <code>++</code>\u3001<code>--</code> \u64CD\u4F5C\u7B26\uFF0C\u4F46\u662F\u53EF\u4EE5\u4F7F\u7528 <code>+=</code>\u3001<code>-=</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scala<span class="token operator">&gt;</span> var num <span class="token operator">=</span> <span class="token number">1</span>
num: Int <span class="token operator">=</span> <span class="token number">1</span>

scala<span class="token operator">&gt;</span> num ++
<span class="token operator">&lt;</span>console<span class="token operator">&gt;</span>:13: error: value ++ is not a member of Int
       num ++
           ^

scala<span class="token operator">&gt;</span> num --
<span class="token operator">&lt;</span>console<span class="token operator">&gt;</span>:13: error: value -- is not a member of Int
       num --
           ^

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u7B2C8\u8282-\u5757\u8868\u8FBE\u5F0F\u548C\u8D4B\u503C\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u7B2C8\u8282-\u5757\u8868\u8FBE\u5F0F\u548C\u8D4B\u503C\u8BED\u53E5" aria-hidden="true">#</a> \u7B2C8\u8282 \u5757\u8868\u8FBE\u5F0F\u548C\u8D4B\u503C\u8BED\u53E5</h3><p><code>{}</code> \u5757\u5305\u542B\u4E00\u7CFB\u5217\u8868\u8FBE\u5F0F\uFF0C\u5176\u7ED3\u679C\u4E5F\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5757\u4E2D\u6700\u540E\u4E00\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\u5C31\u662F\u5757\u7684\u503C\u3002</p><p>\u8D4B\u503C\u8BED\u53E5\u8FD4\u56DEUnit\u7C7B\u578B\uFF0C\u4EE3\u8868\u6CA1\u6709\u503C\uFF1B</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> BlockDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> x1 <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">val</span> y1 <span class="token operator">=</span> <span class="token number">2</span>
    <span class="token keyword">val</span> x2 <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">val</span> y2 <span class="token operator">=</span> <span class="token number">4</span>
    <span class="token keyword">val</span> distance <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token keyword">val</span> dx <span class="token operator">=</span> x2 <span class="token operator">-</span> x1
      <span class="token keyword">val</span> dy <span class="token operator">=</span> y2 <span class="token operator">-</span> y1
      math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>dx <span class="token operator">*</span> dx <span class="token operator">+</span> dy <span class="token operator">*</span> dy<span class="token punctuation">)</span> <span class="token comment">// \u6B64\u5904\u7684\u503C\u5C06\u4F1A\u662F\u6574\u4E2A\u5757\u7684\u503C</span>
    <span class="token punctuation">}</span>
    println<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u8D4B\u503C\u8BED\u53E5\u7684\u503C\u662FUnit\u7C7B\u578B\uFF0C\u4E0D\u8981\u628A\u5B83\u4EEC\u4E32\u63A5\u5728\u4E00\u8D77\u3002x\u7684\u503C\u662F\u4EC0\u4E48?
var y = 0
val x = y = 1 // =&gt; ()
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u7B2C9\u8282-\u8F93\u5165\u548C\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u7B2C9\u8282-\u8F93\u5165\u548C\u8F93\u51FA" aria-hidden="true">#</a> \u7B2C9\u8282 \u8F93\u5165\u548C\u8F93\u51FA</h3><p>\u901A\u8FC7 <code>readLine</code> \u4ECE\u63A7\u5236\u53F0\u8BFB\u53D6\u4E00\u884C\u8F93\u5165\u3002</p><p>\u5982\u679C\u8981\u8BFB\u53D6\u6570\u5B57\u3001Boolean\u6216\u8005\u5B57\u7B26\uFF0C\u53EF\u4EE5\u7528 <code>readInt</code>\u3001<code>readDouble</code>\u3001<code>readByte</code>\u3001<code>readShort</code>\u3001 <code>readLong</code>\u3001<code>readFloat</code>\u3001<code>readBoolean</code> \u6216\u8005 <code>readChar</code>\u3002</p><p><code>print</code>\u3001<code>println</code>\u3001<code>printf</code> \u53EF\u4EE5\u5C06\u7ED3\u679C\u8F93\u51FA\u5230\u5C4F\u5E55\uFF1B</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> ReadLineAndPrintDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    print<span class="token punctuation">(</span><span class="token string">&quot;Input your name :&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> name <span class="token operator">=</span> scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span>StdIn<span class="token punctuation">.</span>readLine<span class="token punctuation">(</span><span class="token punctuation">)</span>
    print<span class="token punctuation">(</span><span class="token string">&quot;Input your age: &quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> age <span class="token operator">=</span> scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span>StdIn<span class="token punctuation">.</span>readInt<span class="token punctuation">(</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;Hello &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;, age is : &quot;</span> <span class="token operator">+</span> age<span class="token punctuation">)</span>
    printf<span class="token punctuation">(</span><span class="token string">&quot;Hello :%s, age is : %d&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>   <span class="token comment">// printf \u662F\u4E00\u4E2A\u5E26\u6709 C \u8BED\u8A00\u98CE\u683C\u7684\u683C\u5F0F\u5316\u5B57\u7B26\u4E32\u51FD\u6570</span>
    println<span class="token punctuation">(</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;Hello </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">name</span></span><span class="token string">, age is : </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">age</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input your name :john
Input your age: 18
Hello john, age is : 18
Hello :john, age is : 18
Hello john, age is : 18
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u7B2C10\u8282-\u5B57\u7B26\u4E32\u63D2\u503C\u5668" tabindex="-1"><a class="header-anchor" href="#\u7B2C10\u8282-\u5B57\u7B26\u4E32\u63D2\u503C\u5668" aria-hidden="true">#</a> \u7B2C10\u8282 \u5B57\u7B26\u4E32\u63D2\u503C\u5668</h3><p>Scala \u63D0\u4F9B\u4E86\u4E09\u79CD\u5B57\u7B26\u4E32\u63D2\u503C\u5668\uFF1A</p><ul><li>s \u63D2\u503C\u5668\uFF0C\u5BF9\u5185\u5D4C\u7684\u6BCF\u4E2A\u8868\u8FBE\u5F0F\u6C42\u503C\uFF0C\u5BF9\u6C42\u503C\u7ED3\u679C\u8C03\u7528 <code>toString</code>\uFF0C\u66FF\u6362\u6389\u5B57\u9762\u91CF\u4E2D\u7684\u90A3\u4E9B\u8868\u8FBE\u5F0F</li><li>f \u63D2\u503C\u5668\uFF0C\u5B83\u9664\u4E86\u62E5\u6709s\u63D2\u503C\u5668\u7684\u529F\u80FD\u5916\uFF0C\u8FD8\u80FD\u8FDB\u884C\u683C\u5F0F\u5316\u8F93\u51FA\uFF0C\u5728\u53D8\u91CF\u540E\u7528 <code>%</code> \u6307\u5B9A\u8F93\u51FA\u683C\u5F0F\uFF0C\u4F7F\u7528 <code>java.util.Formatter</code> \u4E2D\u7ED9\u51FA\u7684\u8BED\u6CD5</li><li>raw \u63D2\u503C\u5668\uFF0C\u6309\u7167\u5B57\u7B26\u4E32\u539F\u6837\u8FDB\u884C\u8F93\u51FA</li></ul><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> InterpolatorDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// s \u63D2\u503C\u5668</span>
    <span class="token comment">// \u53EF\u4EE5\u901A\u8FC7 $ \u83B7\u53D6\u53D8\u91CF\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C</span>
    <span class="token keyword">val</span> subject <span class="token operator">=</span> <span class="token string">&quot;scala&quot;</span>
    <span class="token keyword">val</span> msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;Hello </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">subject</span></span><span class="token string">&quot;</span></span>
    println<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token comment">// =&gt; Hello scala</span>

    <span class="token keyword">val</span> array<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray
    <span class="token keyword">val</span> str <span class="token operator">=</span> <span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;arr.length=</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">array<span class="token punctuation">.</span>length</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    println<span class="token punctuation">(</span>str<span class="token punctuation">)</span>    <span class="token comment">// =&gt; arr.length=10</span>

    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression"><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">9</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment">// =&gt; 90</span>


    <span class="token comment">// f \u63D2\u503C\u5668</span>
    <span class="token comment">// \u53EF\u4EE5\u7528 % \u6307\u5B9A\u8F93\u51FA\u683C\u5F0F</span>
    <span class="token keyword">val</span> year <span class="token operator">=</span> <span class="token number">2022</span>
    <span class="token keyword">val</span> month <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">val</span> day <span class="token operator">=</span> <span class="token number">5</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">year</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">month</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">day</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>         <span class="token comment">// =&gt; 2022-3-5</span>
    <span class="token comment">// \u671F\u671B\u683C\u5F0F yyyy-MM-dd, \u4E0D\u8DB3\u4E24\u4F4D\u7528 0 \u586B\u5145</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">f</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">year</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">month</span></span><span class="token string">%02d-</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">day</span></span><span class="token string">%02d&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">// =&gt; 2022-03-05</span>


    <span class="token comment">// row \u63D2\u503C\u5668</span>
    <span class="token comment">// \u5C06\u5B57\u7B26\u4E32\u6309\u539F\u6837\u8F93\u51FA</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;a\\nb\\tc&quot;</span><span class="token punctuation">)</span>      <span class="token comment">// =&gt; \u8F93\u51FA\u7ED3\u679C\u88AB\u8F6C\u4E49</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">raw</span><span class="token string">&quot;a\\nb\\tc&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment">// =&gt; a\\nb\\tc</span>
    println<span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;a\\nb\\tc&quot;&quot;&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// =&gt; a\\nb\\tc // \u4F7F\u7528\u4E09\u5BF9\u53CC\u5F15\u53F7, \u4E5F\u53EF\u4EE5\u5B9E\u73B0 raw \u63D2\u503C\u8868\u8FBE\u5F0F\u540C\u6837\u7684\u6548\u679C</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="\u7B2C11\u8282-\u5BF9\u8C61\u76F8\u7B49\u6027" tabindex="-1"><a class="header-anchor" href="#\u7B2C11\u8282-\u5BF9\u8C61\u76F8\u7B49\u6027" aria-hidden="true">#</a> \u7B2C11\u8282 \u5BF9\u8C61\u76F8\u7B49\u6027</h3><p>Java \u4E2D\u53EF\u4EE5 <code>==</code> \u6765\u6BD4\u8F83\u57FA\u672C\u7C7B\u578B\u548C\u5F15\u7528\u7C7B\u578B\uFF1A</p><ul><li>\u5BF9\u57FA\u672C\u7C7B\u578B\u800C\u8A00\uFF0C\u6BD4\u8F83\u7684\u662F\u503C\u7684\u76F8\u7B49\u6027</li><li>\u5BF9\u5F15\u7528\u7C7B\u578B\u800C\u8A00\uFF0C\u6BD4\u8F83\u7684\u662F\u5F15\u7528\u76F8\u7B49\u6027\uFF0C\u5373\u4E24\u4E2A\u53D8\u91CF\u662F\u5426\u6307\u5411JVM\u5806\u4E0A\u7684\u540C\u4E2A\u5BF9\u8C61</li></ul><p>Scala\u4E2D\uFF0C\u8981\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>==</code> \u6216 <code>!=</code></p><ul><li><p><code>==</code> \u6216 <code>!=</code> \u53EF\u4EE5\u6BD4\u8F83\u4E24\u4E2A\u57FA\u7840\u7C7B\u578B\u7684\u5BF9\u8C61\u662F\u5426\u76F8\u7B49</p></li><li><p><code>==</code> \u6216 <code>!=</code> \u53EF\u4EE5\u6BD4\u8F83\u540C\u4E00\u7C7B\u578B\u7684\u4E24\u4E2A\u5BF9\u8C61</p></li><li><p><code>==</code> \u6216 <code>!=</code> \u8FD8\u53EF\u4EE5\u6BD4\u8F83\u4E0D\u540C\u7C7B\u578B\u7684\u4E24\u4E2A\u5BF9\u8C61</p></li></ul><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> ObjectCompareDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    println<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    println<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

    <span class="token keyword">val</span> flag <span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> List<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token comment">// false</span>

    println<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">!=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

    <span class="token comment">// \u6BD4\u8F83\u4E0D\u540C\u7C7B\u578B\u7684\u5BF9\u8C61</span>
    println<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    println<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;Scala&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="\u7B2C\u4E8C\u90E8\u5206-\u63A7\u5236\u7ED3\u6784\u548C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u90E8\u5206-\u63A7\u5236\u7ED3\u6784\u548C\u51FD\u6570" aria-hidden="true">#</a> \u7B2C\u4E8C\u90E8\u5206 \u63A7\u5236\u7ED3\u6784\u548C\u51FD\u6570</h2><h3 id="\u7B2C1\u8282-if-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7B2C1\u8282-if-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u7B2C1\u8282 if \u8868\u8FBE\u5F0F</h3><p>Scala \u4E2D <code>if</code> \u8868\u8FBE\u5F0F\u6709\u8FD4\u56DE\u503C\u3002</p><p>\u5982\u679C <code>if</code> \u548C <code>else</code> \u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0D\u4E00\u6837\uFF0C\u90A3\u4E48\u5C31\u8FD4\u56DE\u4E24\u4E2A\u8FD4\u56DE\u503C\u7C7B\u578B\u516C\u5171\u7684\u7236\u7C7B\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> IfDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> num <span class="token operator">=</span> <span class="token number">20</span>

    <span class="token comment">// \u5728 Scala \u4E2D\uFF0C if ... else ... \u8BED\u53E5\u662F\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5C06 if/else \u4E2D\u6700\u540E\u4E00\u884C\u8BED\u53E5\u4F5C\u4E3A\u8FD4\u56DE\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token string">&quot;jack&quot;</span> <span class="token keyword">else</span> <span class="token string">&quot;john&quot;</span>

    <span class="token comment">// \u591A\u5206\u652F if \u8BED\u53E5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
      <span class="token number">0</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">)</span>
      <span class="token number">1</span>
    <span class="token keyword">else</span>
      <span class="token operator">-</span><span class="token number">1</span>

    <span class="token comment">// \u56E0\u4E3A if ... else ... \u8BED\u53E5\u6709\u8FD4\u56DE\u503C\uFF0C\u53EF\u4EE5\u76F4\u63A5\u5C06 if ... else ... \u8BED\u53E5\u8D4B\u503C\u7ED9\u4E00\u4E2A\u53D8\u91CF</span>
    <span class="token keyword">val</span> name <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token string">&quot;jack&quot;</span> <span class="token keyword">else</span> <span class="token string">&quot;john&quot;</span>
    <span class="token comment">// if ... else ... \u8BED\u53E5\u8FD4\u56DE\u503C\u4E0D\u9700\u8981\u52A0 return \u5173\u952E\u5B57</span>

    <span class="token comment">// \u5982\u679C if ... else ... \u8BED\u53E5\u4E2D\uFF0C\u4E24\u8005\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0D\u4E00\u6837\uFF0CScala \u4F1A\u81EA\u52A8\u63A8\u65AD\u51FA\u4E24\u8005\u7684\u516C\u5171\u7236\u7C7B\u578B\uFF0C\u7136\u540E\u5C06\u516C\u5171\u7236\u7C7B\u578B\u4F5C\u4E3A\u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</span>
    <span class="token keyword">val</span> name2<span class="token operator">:</span> <span class="token builtin">Any</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token string">&quot;tom&quot;</span> <span class="token keyword">else</span> <span class="token number">100</span>

    <span class="token comment">// \u5982\u679C if ... else ... \u8BED\u53E5\u4E2D\u7F3A\u5C11\u4E86 else \u8BED\u53E5\u5757\uFF0C\u90A3\u4E48\u9ED8\u8BA4\u7684 else \u7684\u8FD4\u56DE\u503C\u5C31\u662F Unit</span>
    <span class="token comment">// Unit \u7528 () \u8868\u793A\uFF0C\u7C7B\u4F3C\u4E8E Java \u4E2D\u7684 void \u5173\u952E\u5B57</span>
    <span class="token keyword">val</span> name3 <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token string">&quot;jack&quot;</span>
    <span class="token keyword">val</span> name4 <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token string">&quot;jack&quot;</span> <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6B64\u4E24\u884C\u8BED\u53E5\u7B49\u4EF7</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="\u7B2C2\u8282-for-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7B2C2\u8282-for-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u7B2C2\u8282 for \u8868\u8FBE\u5F0F</h3><p>Scala \u4E2D\uFF0C<code>for</code> \u5FAA\u73AF\u8BED\u6CD5\u7ED3\u6784: <code>for (i &lt;- \u8868\u8FBE\u5F0F/\u96C6\u5408)</code>\uFF0C\u8BA9\u53D8\u91CF <code>i</code> \u904D\u5386 <code>&lt;-</code> \u53F3\u8FB9\u7684\u8868\u8FBE\u5F0F/\u96C6\u5408\u7684\u6240\u6709\u503C\u3002</p><p>Scala \u4E3A <code>for</code> \u5FAA\u73AF\u63D0\u4F9B\u4E86\u5F88\u591A\u7684\u7279\u6027\uFF0C\u8FD9\u4E9B\u7279\u6027\u88AB\u79F0\u4E4B\u4E3A for\u5B88\u536B\u5F0F \u6216 for\u63A8\u5BFC\u5F0F\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Scala \u4E2D\u62E5\u6709\u4E0E Java \u76F8\u540C\u7684 while \u548C do ... while \u5FAA\u73AF\uFF0C
 * \u4F46\u662F\u6CA1\u6709\u4E0E Java \u4E2D for \u5FAA\u73AF\u76F8\u5BF9\u5E94\u7684\u8BED\u6CD5\u7ED3\u6784\uFF0CScala \u4E2D\u7684 for \u8BED\u6CD5\u7ED3\u6784\u5982\u4E0B\uFF1A
 * for (i &lt;- \u8868\u8FBE\u5F0F/\u96C6\u5408)\uFF1B \u901A\u8FC7 i \u53BB\u904D\u5386 &lt;- \u53F3\u8FB9\u7684\u8868\u8FBE\u5F0F\u6216\u96C6\u5408\u7684\u6240\u6709\u503C
 * \u6CE8\u610F\uFF1A\u5FAA\u73AF\u53D8\u91CF i \u524D\u9762\u6CA1\u6709 val/var \u4FEE\u9970\uFF0C\u8FD9\u4E2A\u5FAA\u73AF\u53D8\u91CF\u7684\u7C7B\u578B\u662F\u53F3\u8FB9\u8868\u8FBE\u5F0F\u6216\u96C6\u5408\u7684\u5143\u7D20\u7684\u7C7B\u578B\uFF1B\u5FAA\u73AF\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u4E00\u76F4\u6301\u7EED\u5230\u5FAA\u73AF\u7ED3\u675F
 */</span>
<span class="token keyword">object</span> ForDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528 to \u5B9E\u73B0\u4E24\u7AEF\u95ED\u5408\u7684\u8BBF\u95EE\u533A\u95F4\uFF1A [1, 10]</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> until <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528 until \u5B9E\u73B0\u5DE6\u95ED\u53F3\u5F00\u7684\u8BBF\u95EE\u533A\u95F4: [1, 10)</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u53CC\u91CD\u5FAA\u73AF\uFF0C\u76F8\u5F53\u4E8E Java \u4E2D\u7684\u5D4C\u5957\u5FAA\u73AF\uFF0C\u6761\u4EF6\u4E4B\u95F4\u7528 ; \u5206\u5272</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">3</span><span class="token punctuation">;</span> j <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span>i <span class="token operator">*</span> j<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5FAA\u73AF\u4E2D\u4F7F\u7528\u53D8\u91CF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">3</span><span class="token punctuation">;</span> j <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span>i <span class="token operator">*</span> j<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// for \u5FAA\u73AF\u4E2D\u7684\u5B88\u536B\u5F0F. \u5C31\u662F\u5728 for \u5FAA\u73AF\u4E2D\u6DFB\u52A0\u4E86 if \u6761\u4EF6\u8BED\u53E5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">;</span> j <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">10</span> <span class="token keyword">if</span> i <span class="token operator">==</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CE8\u610F if \u524D\u9762\u6CA1\u6709 ; \u5206\u53F7</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i * j = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">j</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">i <span class="token operator">*</span> j</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// for \u5FAA\u73AF\u4E2D\u7684\u63A8\u5BFC\u5F0F\uFF0C\u5C31\u662F\u5728 for \u5FAA\u73AF\u4E2D\u4F7F\u7528\u4E86\u5173\u952E\u5B57 yield \u63A5\u6536\u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">val</span> result <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> i <span class="token operator">%</span> <span class="token number">2</span>
    result<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C for \u5FAA\u73AF\u7684\u5FAA\u73AF\u4F53\u662F\u4EE5 yield \u5F00\u59CB\uFF0C\u6B64\u5FAA\u73AF\u4F1A\u6784\u9020\u51FA\u4E00\u4E2A\u96C6\u5408\uFF0C\u6BCF\u6B21\u8FED\u4EE3\u751F\u6210\u96C6\u5408\u4E2D\u7684\u4E00\u4E2A\u503C</span>
    <span class="token comment">// \u53EF\u4EE5\u4F7F\u7528\u53D8\u91CF\u63A5\u6536\u8FD9\u4E2A\u4EA7\u751F\u7684\u65B0\u96C6\u5408</span>

    <span class="token comment">// for \u5FAA\u73AF\u7ECF\u5178\u4E58\u6CD5\u8868\u5B9E\u73B0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">9</span><span class="token punctuation">;</span> j <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token namespace">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      print<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">j</span></span><span class="token string"> * </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">i <span class="token operator">*</span> j</span><span class="token punctuation">}</span></span><span class="token string"> \\t&quot;</span></span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> j<span class="token punctuation">)</span> println<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// for \u5FAA\u73AF\u4E2D\u4F7F\u7528\u5927\u62EC\u53F7</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
      i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">3</span>
      from <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">-</span> i
      j <span class="token keyword">&lt;-</span> from to <span class="token number">3</span>
    <span class="token punctuation">}</span> println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string">, j=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">j</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">// \u904D\u5386\u5B57\u7B26\u4E32</span>
    <span class="token keyword">val</span> msg <span class="token operator">=</span> <span class="token string">&quot;spark scala&quot;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>ele <span class="token keyword">&lt;-</span> msg<span class="token punctuation">)</span> print<span class="token punctuation">(</span>ele<span class="token punctuation">)</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><h3 id="\u7B2C3\u8282-while-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7B2C3\u8282-while-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u7B2C3\u8282 while \u8868\u8FBE\u5F0F</h3><p>Scala\u63D0\u4F9B\u4E86\u4E0E Java \u7C7B\u4F3C\u7684 <code>while</code> \u548C <code>do...while</code> \u5FAA\u73AF\u3002</p><p>while\u8BED\u53E5\u7684\u672C\u8EAB\u6CA1\u6709\u4EFB\u4F55\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u5373while\u8BED\u53E5\u7684\u8FD4\u56DE\u7ED3\u679C\u662FUnit\u7C7B\u578B\u7684 <code>() </code>\u3002</p><p>Scala\u5185\u7F6E\u63A7\u5236\u7ED3\u6784\u7279\u5730\u53BB\u6389\u4E86 <code>break</code> \u548C <code>continue</code>\u3002\u7279\u6B8A\u60C5\u51B5\u4E0B\u5982\u679C\u9700\u8981\u7EC8\u6B62\u5FAA\u73AF\uFF0C\u53EF\u4EE5\u6709\u4EE5\u4E0B\u4E09\u79CD\u65B9\u5F0F:</p><ul><li>\u4F7F\u7528Boolean\u7C7B\u578B\u7684\u63A7\u5236\u53D8\u91CF</li><li>\u4F7F\u7528return\u5173\u952E\u5B57</li><li>\u4F7F\u7528breakable \u548C break\uFF0C\u9700\u8981\u5BFC\u5165 <code>scala.util.control.Breaks</code> \u5305</li></ul><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>control<span class="token punctuation">.</span></span>Breaks<span class="token punctuation">.</span>_ <span class="token comment">// _ \u8868\u793A\u5BFC\u5165 Breaks \u5305\u4E0B\u7684\u6240\u6709</span>

<span class="token keyword">object</span> WhileDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token comment">// while \u5FAA\u73AF</span>
    <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;num = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">num</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
      num <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// do ... while \u5FAA\u73AF</span>
    <span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;num2 = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">num2</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
      num2 <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>num2 <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>

    <span class="token comment">// \u4F7F\u7528 boolean \u7C7B\u578B\u7684\u53D8\u91CF\u7EC8\u6B62\u5FAA\u73AF</span>
    <span class="token keyword">var</span> num3 <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;num3 = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">num3</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
      num3 <span class="token operator">+=</span> <span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>num3 <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> flag <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4F7F\u7528 return \u5173\u952E\u5B57\u7EC8\u6B62\u5FAA\u73AF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">return</span>    <span class="token comment">// \u6CE8\u610F: return \u5C06\u4F1A\u7EC8\u6B62\u65B9\u6CD5\u8FD0\u884C, \u4E5F\u5C31\u662F\u8BF4\u5982\u679C\u8981\u6D4B\u8BD5\u540E\u9762\u7684\u5185\u5BB9, \u9700\u8981\u6CE8\u91CA\u6389\u8FD9\u4E2A\u6D4B\u8BD5\u6848\u4F8B</span>
      println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4F7F\u7528 breakable \u548C break \u7EC8\u6B62\u5FAA\u73AF, \u9700\u8981\u5BFC\u5165 scala.util.control.Breaks \u5305</span>
    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token number">0</span>
    breakable <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> until<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> break<span class="token punctuation">(</span><span class="token punctuation">)</span>
        res <span class="token operator">+=</span> i
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;res = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">res</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="\u7B2C4\u8282-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B2C4\u8282-\u51FD\u6570" aria-hidden="true">#</a> \u7B2C4\u8282 \u51FD\u6570</h3><p>\u51FD\u6570\u4F53\u4E2D\u6700\u540E\u4E00\u53E5\u4E3A\u8FD4\u56DE\u503C\u7684\u8BDD\uFF0C\u53EF\u4EE5\u5C06 <code>return</code> \u53BB\u6389; \u5982\u679C\u4E00\u4E2A\u51FD\u6570\u4F53\u53EA\u6709\u4E00\u53E5\u4EE3\u7801\uFF0C\u5927\u62EC\u53F7\u53EF\u4EE5\u53BB\u6389;</p><p>\u5982\u679C\u4E00\u4E2A\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5176\u8FD4\u56DE\u7C7B\u578B\u4E3A <code>Unit</code>, \u5E76\u4E14 <code>=</code> \u53F7\u53EF\u4EE5\u53BB\u6389\uFF0C\u8FD9\u6837\u7684\u51FD\u6570\u88AB\u79F0\u4E3A<em>\u8FC7\u7A0B</em>;</p><p>\u53EF\u4EE5\u4E0D\u58F0\u660E\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u8FD4\u56DE\u7C7B\u578B\u53EF\u901A\u8FC7\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD\u6765\u5B8C\u6210\uFF0C\u4F46\u9012\u5F52\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u58F0\u660E;</p><blockquote><p>\u5907\u6CE8: \u5EFA\u8BAE\u660E\u786E\u58F0\u660E\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u5373\u4F7F\u4E3AUnit</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> FunctionDemo <span class="token punctuation">{</span>

  <span class="token comment">// \u5B9A\u4E8E\u51FD\u6570\u7684\u8BED\u6CD5\u7ED3\u6784\uFF1A def \u51FD\u6570\u540D(\u53C2\u6570\u5217\u8868): \u8FD4\u56DE\u503C\u7C7B\u578B = {\u51FD\u6570\u4F53}</span>
  <span class="token comment">// \u51FD\u6570\u4F53\u4E2D\u6700\u540E\u4E00\u6761\u8BED\u53E5\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u6574\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u8FD4\u56DE\u503C\u4E0D\u9700\u8981\u4F7F\u7528 return \u5173\u952E\u5B57</span>
  <span class="token keyword">def</span> add<span class="token punctuation">(</span>num1<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> num2<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token punctuation">{</span> 
    <span class="token comment">// \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u53EF\u4EE5\u7701\u7565\uFF0C</span>
    <span class="token comment">// Scala \u4F1A\u81EA\u52A8\u6839\u636E\u6700\u540E\u4E00\u6761\u8BED\u53E5\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u63A8\u65AD\u51FA\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</span>
    <span class="token comment">// \u5982\u679C\u662F\u9012\u5F52\u51FD\u6570\uFF0C\u5219\u5FC5\u987B\u58F0\u660E\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</span>
    num1 <span class="token operator">+</span> num2
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4F7F\u7528\u9012\u5F52\u51FD\u6570\u8BA1\u7B97\u9636\u4E58</span>
  <span class="token keyword">def</span> factorial<span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Long</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token number">1</span>
    <span class="token keyword">else</span>
      num <span class="token operator">*</span> factorial<span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u601D\u8003\uFF1A\u4E3A\u4EC0\u4E48\u9012\u5F52\u51FD\u6570\u5FC5\u987B\u8981\u58F0\u660E\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1F</span>
  <span class="token comment">// \u4E2A\u4EBA\u89C9\u5F97\u662F\u56E0\u4E3A\u5982\u679C\u6CA1\u6709\u8FD4\u56DE\u503C\u5C31\u9ED8\u8BA4\u4EE3\u8868\u8FD4\u56DE\u503C\u4E3A Unit\uFF1B</span>
  <span class="token comment">// \u800C\u5728\u4E0A\u8FF0\u7684\u4F8B\u5B50\u5F53\u4E2D Unit \u4E0E \u6570\u5B57\u76F8\u4E58\u663E\u7136\u662F\u9519\u8BEF\u7684\u3002</span>
  <span class="token comment">// \u5176\u6B21\uFF0C\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD\u662F\u901A\u8FC7\u51FD\u6570\u6700\u540E\u4E00\u884C\u4EE3\u7801\u7684\u8FD4\u56DE\u503C\u63A8\u65AD\u51FA\u6765\u7684\uFF0C</span>
  <span class="token comment">// \u800C\u9012\u5F52\u51FD\u6570\u5728\u6700\u540E\u4E00\u884C\u8FD8\u6CA1\u6765\u5F97\u53CA\u63A8\u65AD\u51FA\u6765\uFF0C\u5C31\u53C8\u88AB\u8C03\u7528\u4E86\uFF0C\u663E\u7136\u7F16\u8BD1\u5668\u5C31\u65E0\u4ECE\u5F97\u77E5\u8FD4\u56DE\u503C\u7C7B\u578B\u4E86\u3002</span>
  
  <span class="token comment">// \u53E6\u5916\uFF1A&lt;&lt;\u4EE3\u7801\u5927\u51682&gt;&gt;\u4E2D\u4F5C\u8005\u5F88\u660E\u786E\u5730\u6307\u51FA:</span>
  <span class="token comment">// \u7528\u9012\u5F52\u6765\u6C42\u89E3\u9636\u4E58\u6216\u8005\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u6559\u6750\u5F0F\u8BB2\u89E3\u65B9\u6CD5\u662F\u5F88\u50BB\u7684</span>

  <span class="token comment">// \u901A\u8FC7\u9012\u5F52\u51FD\u6570\u5B9E\u73B0\u4E00\u4E2A\u83F2\u6CE2\u90A3\u5207\u6570\u5217\uFF1A 1,1,2,3,5,8</span>
  <span class="token keyword">def</span> fibonacci<span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Long</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      fibonacci<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fibonacci<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5219\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A Unit\uFF0C\u7C7B\u4F3C\u4E8E Java \u4E2D\u7684 void\uFF0C\u5E76\u4E14\u540E\u9762\u7684\u7B49\u53F7\u4E5F\u53EF\u4EE5\u7701\u7565</span>
  <span class="token comment">// \u5728 Scala \u4E2D\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u79F0\u4E3A\u8FC7\u7A0B</span>
  <span class="token keyword">def</span> getSum<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u51FD\u6570\u4E2D\u7684\u53C2\u6570\u53EF\u4EE5\u6709\u9ED8\u8BA4\u503C\uFF0C\u79F0\u4E3A\u9ED8\u8BA4\u53C2\u6570</span>
  <span class="token keyword">def</span> add2<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u53D8\u957F\u53C2\u6570\uFF1A\u53C2\u6570\u7C7B\u578B\u7684\u53F3\u8FB9\u4F1A\u52A0\u4E0A *</span>
  <span class="token keyword">def</span> addSum<span class="token punctuation">(</span>nums<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    nums<span class="token punctuation">.</span>sum
  <span class="token punctuation">}</span>
  <span class="token comment">// \u53D8\u957F\u53C2\u6570\u53EA\u80FD\u6709\u4E00\u4E2A\uFF0C\u800C\u4E14\u53EA\u80FD\u51FA\u73B0\u5728\u53C2\u6570\u5217\u8868\u7684\u5C3E\u90E8</span>
  <span class="token comment">// \u5728 Spark \u7684\u6E90\u7801\u4E2D\uFF0C\u53D8\u957F\u53C2\u6570\u975E\u5E38\u5E38\u89C1</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;\u8BA1\u7B97\u9636\u4E58\uFF1A&quot;</span> <span class="token operator">+</span> factorial<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;\u83F2\u6CE2\u90A3\u5207\u6570\u5217\uFF1A&quot;</span> <span class="token operator">+</span> fibonacci<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    add2<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u4F7F\u7528\u53C2\u6570\u7684\u9ED8\u8BA4\u503C</span>
    add2<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u7ED9\u53C2\u6570\u91CD\u65B0\u8D4B\u503C</span>
    add2<span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">,</span> x <span class="token operator">=</span> <span class="token number">70</span><span class="token punctuation">)</span> <span class="token comment">// \u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u4F7F\u7528\u5E26\u540D\u53C2\u6570\u7684\u65B9\u5F0F\u4F20\u9012\uFF0C\u53EF\u4EE5\u4E0D\u6309\u7167\u51FD\u6570\u5B9A\u4E49\u7684\u53C2\u6570\u987A\u5E8F\u6765\u4F20\u9012\u503C</span>

    println<span class="token punctuation">(</span>addSum<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>addSum<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u53D8\u957F\u53C2\u6570\u7684\u53C2\u6570\u957F\u5EA6\u4E0D\u56FA\u5B9A</span>
    println<span class="token punctuation">(</span>addSum<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token operator">:</span> _<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u4F7F\u7528 parameter: _* \u7684\u5F62\u5F0F\u544A\u8BC9\u7F16\u8BD1\u5668\uFF1A\u8FD9\u4E2A\u53C2\u6570\u88AB\u5F53\u6210\u53C2\u6570\u5E8F\u5217\u6765\u5904\u7406</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h3 id="\u7B2C5\u8282-\u61D2\u503C" tabindex="-1"><a class="header-anchor" href="#\u7B2C5\u8282-\u61D2\u503C" aria-hidden="true">#</a> \u7B2C5\u8282 \u61D2\u503C</h3><p>\u5F53 <code>val</code> \u88AB\u58F0\u660E\u4E3Alazy\u65F6(var\u4E0D\u80FD\u58F0\u660E\u4E3Alazy)\uFF0C\u5B83\u7684\u521D\u59CB\u5316\u5C06\u88AB\u63A8\u8FDF\uFF0C\u76F4\u5230\u9996\u6B21\u5BF9\u6B64\u53D6\u503C\uFF0C\u9002\u7528\u4E8E\u521D\u59CB\u5316\u5F00\u9500\u8F83\u5927\u7684\u573A\u666F\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> LazyDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728 Scala \u4E2D\u63D0\u4F9B\u4E86 lazy \u7684\u7279\u6027\u3002</span>
    <span class="token comment">// \u5982\u679C\u5C06\u4E00\u4E2A\u53D8\u91CF\u58F0\u660E\u4E3A lazy\uFF0C\u90A3\u4E48\u53EA\u6709\u7B2C\u4E00\u6B21\u4F7F\u7528\u53D8\u91CF\u65F6\uFF0C\u53D8\u91CF\u5BF9\u5E94\u7684\u8868\u8FBE\u5F0F\u624D\u4F1A\u53D1\u751F\u8BA1\u7B97\u3002</span>
    <span class="token comment">// \u8FD9\u79CD\u7279\u6027\u5BF9\u4E8E\u7279\u522B\u8017\u65F6\u7684\u8BA1\u7B97\u64CD\u4F5C\u7279\u522B\u6709\u7528\u3002</span>
    <span class="token comment">// \u6BD4\u5982\uFF1A\u521D\u59CB\u5316\u5F00\u9500\u8F83\u5927\u7684\u573A\u666F\uFF0C\u5BF9\u6587\u4EF6\u8FDB\u884C I/O\uFF0C\u8FDB\u884C\u7F51\u7EDC IO \u7684\u64CD\u4F5C\u7B49\u3002</span>

    <span class="token comment">// val file1 = scala.io.Source.fromFile(&quot;src/test.scala&quot;) </span>
    <span class="token comment">// \u6587\u4EF6\u5B9E\u9645\u4E0D\u5B58\u5728 // =&gt; src/test.scala (No such file or directory)</span>

    <span class="token keyword">lazy</span> <span class="token keyword">val</span> file2 <span class="token operator">=</span> scala<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Source<span class="token punctuation">.</span>fromFile<span class="token punctuation">(</span><span class="token string">&quot;src/test.scala&quot;</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u4F1A\u53D1\u751F\u4EFB\u4F55\u5F02\u5E38</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;OK!&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// \u6B63\u5E38\u8F93\u51FA</span>
    file2<span class="token punctuation">.</span>getLines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size <span class="token comment">// =&gt; src/test.scala (No such file or directory)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u7B2C6\u8282-\u6587\u4EF6\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7B2C6\u8282-\u6587\u4EF6\u64CD\u4F5C" aria-hidden="true">#</a> \u7B2C6\u8282 \u6587\u4EF6\u64CD\u4F5C</h3><p>\u5BFC\u5165 <code>scala.io.Source</code> \u540E\uFF0C\u53EF\u5F15\u7528 Source \u4E2D\u7684\u65B9\u6CD5\u8BFB\u53D6\u6587\u672C\u6587\u4EF6\u7684\u5185\u5BB9</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> FileDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token comment">// I/O \u64CD\u4F5C\u662F\u4E00\u95E8\u7F16\u7A0B\u8BED\u8A00\u7684\u91CD\u8981\u5185\u5BB9\uFF0C</span>
    <span class="token comment">// \u76F8\u8F83\u4E8EJava\u8BED\u8A00\u4E2D\u7684I/O\uFF0CScala\u7684I/O\u7C7B\u7684\u6570\u91CF\u8F83\u5C11\uFF0C\u6700\u5E38\u7528\u7684\u662F Source \u7C7B\u3002</span>
    <span class="token comment">// \u5728 Scala \u4E2D\u66F4\u591A\u7684\u662F\u8C03\u7528 Java \u4E2D\u7684 I/O \u7C7B\u6216\u8005</span>
    <span class="token comment">// \u901A\u8FC7\u5BF9 Java \u4E2D\u7684 I/O \u8FDB\u884C\u76F8\u5E94\u7684\u5C01\u88C5\u6765\u5B9E\u73B0 I/O \u64CD\u4F5C\u3002</span>

    readTextFile<span class="token punctuation">(</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;==========&quot;</span><span class="token punctuation">)</span>
    readNetSource<span class="token punctuation">(</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;==========&quot;</span><span class="token punctuation">)</span>
    writeTextFile<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u6587\u672C\u6587\u4EF6</span>
  <span class="token keyword">def</span> readTextFile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> file <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromFile<span class="token punctuation">(</span><span class="token string">&quot;/Users/faustine/Code/test.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> lines<span class="token operator">:</span> Iterator<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> file<span class="token punctuation">.</span>getLines<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6\u6587\u4EF6\u5185\u5BB9</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>line <span class="token keyword">&lt;-</span> lines<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5173\u95ED\u6587\u4EF6</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BFB\u53D6\u7F51\u7EDC\u8D44\u6E90</span>
  <span class="token keyword">def</span> readNetSource<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> source<span class="token operator">:</span> BufferedSource <span class="token operator">=</span> Source<span class="token punctuation">.</span>fromURL<span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> message <span class="token operator">=</span> source<span class="token punctuation">.</span>mkString
    println<span class="token punctuation">(</span>message<span class="token punctuation">)</span>
    source<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5173\u95ED source</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5199\u5165\u6587\u672C\u6587\u4EF6</span>
  <span class="token comment">// Scala \u4E2D\u6CA1\u6709\u5185\u7F6E\u5BF9\u5199\u5165\u6587\u4EF6\u7684\u652F\u6301\uFF0C\u9700\u8981\u4F7F\u7528 java.io.PrintWriter \u6765\u5B9E\u73B0</span>
  <span class="token keyword">def</span> writeTextFile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> PrintWriter<span class="token punctuation">(</span><span class="token string">&quot;/Users/faustine/Code/test.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5199\u5165\u6587\u4EF6\u5185\u5BB9</span>
      writer<span class="token punctuation">.</span>println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;i = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">i</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
      writer<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5237\u65B0 PrintWriter \u6D41\u7684\u7F13\u51B2\u533A</span>
    <span class="token punctuation">}</span>
    writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5173\u95ED\u5199\u5165\u6D41</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><blockquote><p>\u5982\u679C\u8981\u5C06\u6587\u4EF6\u5185\u5BB9\u8F6C\u6570\u7EC4\uFF0C\u76F4\u63A5\u8C03\u7528 <code>toArray</code>\u3002</p></blockquote><blockquote><p>Scala \u6CA1\u6709\u5185\u5EFA\u7684\u5BF9\u5199\u5165\u6587\u4EF6\u7684\u652F\u6301\u3002\u8981\u5199\u5165\u6587\u672C\u6587\u4EF6\uFF0C\u53EF\u4F7F\u7528 <code>java.io.PrintWriter</code></p></blockquote><h2 id="\u7B2C\u4E09\u90E8\u5206-\u6570\u7EC4\u548C\u5143\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u90E8\u5206-\u6570\u7EC4\u548C\u5143\u7EC4" aria-hidden="true">#</a> \u7B2C\u4E09\u90E8\u5206 \u6570\u7EC4\u548C\u5143\u7EC4</h2><h3 id="\u7B2C1\u8282-\u6570\u7EC4\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u7B2C1\u8282-\u6570\u7EC4\u5B9A\u4E49" aria-hidden="true">#</a> \u7B2C1\u8282 \u6570\u7EC4\u5B9A\u4E49</h3><p>\u6570\u7EC4\u51E0\u4E4E\u662F\u6240\u6709\u8BED\u8A00\u4E2D\u6700\u57FA\u7840\u7684\u6570\u636E\u7ED3\u6784\u3002\u6570\u7EC4\u53EF\u7D22\u5F15\u3001\u7C7B\u578B\u4E00\u81F4\u3001\u957F\u5EA6\u4E0D\u53D8\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * \u5728 Scala \u4E2D\u6570\u7EC4\u5206\u4E3A\u5B9A\u957F\u6570\u7EC4\u548C\u53D8\u957F\u6570\u7EC4\u3002
 * \u5B9A\u957F\u6570\u7EC4\uFF1AArray, \u957F\u5EA6\u662F\u4E0D\u53D8\u7684\u3002
 * \u53D8\u957F\u6570\u7EC4: ArrayBuffer, \u957F\u5EA6\u662F\u53EF\u53D8\u7684\u3002[\u76F8\u5F53\u4E8EJava\u4E2D\u7684 ArrayList]\u3002
 * \u4F7F\u7528\u53D8\u957F\u6570\u7EC4\u9700\u8981\u5BFC\u5165\u5305 scala.collection.mutable.ArrayBuffer
 */</span>
<span class="token keyword">object</span> ArrayDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>

    println<span class="token punctuation">(</span><span class="token string">&quot;================ \u5B9A\u957F\u6570\u7EC4 ================&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5B9A\u4E49\u957F\u5EA6\u4E3A10\u7684\u6574\u5F62\u6570\u7EC4\uFF0C\u521D\u59CB\u503C\u4E3A 0</span>
    <span class="token keyword">val</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5B9A\u4E49\u957F\u5EA6\u4E3A10\u7684\u5B57\u7B26\u4E32\u6570\u7EC4\uFF0C\u521D\u59CB\u503C\u4E3Anull</span>
    <span class="token keyword">val</span> strs <span class="token operator">=</span> <span class="token keyword">new</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8BBF\u95EE\u6570\u7EC4\u5143\u7D20\uFF0C\u7D22\u5F15\u4ECE0\u5F00\u59CB\uFF0C\u4F7F\u7528 () \u8BBF\u95EE</span>
    println<span class="token punctuation">(</span>strs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5B9A\u4E49\u6570\u7EC4\u65F6\u7701\u7565\u4E86\u5173\u952E\u5B57 new, Scala \u4F1A\u8FDB\u884C\u81EA\u52A8\u7C7B\u578B\u63A8\u65AD</span>
    <span class="token keyword">val</span> arrays<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> arrays2<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">Nothing</span><span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>arrays<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// \u8F93\u51FA\u6570\u7EC4\u957F\u5EA6</span>

    <span class="token comment">// \u901A\u8FC7 toArray \u5FEB\u901F\u751F\u6210\u6570\u7EC4\uFF0C\u4E00\u822C\u7528\u4E8E\u6D4B\u8BD5</span>
    <span class="token keyword">val</span> numList<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="\u7B2C2\u8282-\u53D8\u957F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7B2C2\u8282-\u53D8\u957F\u6570\u7EC4" aria-hidden="true">#</a> \u7B2C2\u8282 \u53D8\u957F\u6570\u7EC4</h3><p>\u957F\u5EA6\u6309\u9700\u8981\u53D8\u6362\u7684\u6570\u7EC4ArrayBuffer\u3002</p><p>Scala \u4E2D\u5F88\u591A\u6570\u7EC4\u7C7B\u578B\u90FD\u6709\u53EF\u53D8\u3001\u4E0D\u53EF\u53D8\u4E24\u4E2A\u7248\u672C\uFF0C\u63A8\u8350\u4F7F\u7528\u4E0D\u53EF\u53D8\u7684\u6570\u7EC4\u7C7B\u578B\uFF0C\u4F7F\u7528\u53EF\u53D8\u6570\u7EC4\u7C7B\u578B\u65F6\u9700\u8981\u663E\u793A\u58F0\u660E;</p><p>\u4F7F\u7528 ArrayBuffer \u65F6\uFF0C\u9700\u8981\u5BFC\u5305 <code>import scala.collection.mutable.ArrayBuffer</code>;</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> ArrayDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;================ \u53D8\u957F\u6570\u7EC4 ================&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7A7A\u7684 Int \u7C7B\u578B\u7684\u53D8\u957F\u6570\u7EC4</span>
    <span class="token keyword">val</span> numsBuffer <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6CE8\u610F: \u6700\u540E\u7684 () \u4E0D\u80FD\u7701\u7565</span>

    <span class="token comment">// \u901A\u8FC7 += \u5728\u53D8\u957F\u6570\u7EC4\u7684\u5C3E\u90E8\u6DFB\u52A0\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20</span>
    numsBuffer <span class="token operator">+=</span> <span class="token number">1</span>
    numsBuffer <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// \u8FC7\u65F6</span>
    <span class="token comment">// \u901A\u8FC7 ++= \u5728\u5C3E\u90E8\u6DFB\u52A0\u96C6\u5408</span>
    numsBuffer <span class="token operator">++</span><span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6253\u5370\u6240\u6709\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u901A\u8FC7 -= --= \u5BF9\u53D8\u957F\u6570\u7EC4\u8FDB\u884C\u5220\u51CF</span>
    numsBuffer <span class="token operator">-=</span> <span class="token number">8</span>
    numsBuffer <span class="token operator">--</span><span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u4F7F\u7528 append \u8FFD\u52A0\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// \u8FC7\u65F6</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u901A\u8FC7 insert \u5728\u67D0\u4E2A\u7D22\u5F15\u4E4B\u524D\u63D2\u5165\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u79FB\u9664\u5143\u7D20</span>
    <span class="token comment">// trimEnd \u79FB\u9664\u6700\u540E\u7684 n \u4E2A\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>dropRightInPlace<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token comment">// dropInPlace \u79FB\u9664\u5F00\u5934\u7684 n \u4E2A\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>dropInPlace<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u901A\u8FC7 remove \u4ECE\u67D0\u7D22\u5F15\u5904\u79FB\u9664\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20</span>
    numsBuffer<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    numsBuffer<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="\u7B2C3\u8282-\u6570\u7EC4\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7B2C3\u8282-\u6570\u7EC4\u64CD\u4F5C" aria-hidden="true">#</a> \u7B2C3\u8282 \u6570\u7EC4\u64CD\u4F5C</h3><p>\u6570\u7EC4\u8F6C\u6362</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// toArray: \u53D8\u957F\u6570\u7EC4\u8F6C\u6362\u4E3A\u5B9A\u957F\u6570\u7EC4</span>
<span class="token keyword">val</span> numArr<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> numsBuffer<span class="token punctuation">.</span>toArray
<span class="token comment">// toBuffer: \u5B9A\u957F\u6570\u7EC4\u8F6C\u6362\u4E3A\u53D8\u957F\u6570\u7EC4</span>
<span class="token keyword">val</span> arrBuffer<span class="token operator">:</span> mutable<span class="token punctuation">.</span>Buffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> arrays<span class="token punctuation">.</span>toBuffer
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u6570\u7EC4\u904D\u5386</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code>println<span class="token punctuation">(</span><span class="token string">&quot;================ \u6570\u7EC4\u904D\u5386 ================&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// \u4F7F\u7528 until \u8FDB\u884C\u6570\u7EC4\u904D\u5386</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">0</span> until<span class="token punctuation">(</span>arrays<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  println<span class="token punctuation">(</span>arrays<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528 to \u8FDB\u884C\u6570\u7EC4\u904D\u5386</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">0</span> to <span class="token namespace">arrays<span class="token punctuation">.</span>length</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  println<span class="token punctuation">(</span>arrays<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528\u589E\u5F3A for \u5FAA\u73AF\u7684\u65B9\u5F0F\u8FDB\u884C\u904D\u5386</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>ele <span class="token keyword">&lt;-</span> arrays<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  println<span class="token punctuation">(</span>ele<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F7F\u7528 foreach \u8FDB\u884C\u6570\u7EC4\u904D\u5386</span>
arrays<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// _: \u5360\u4F4D\u7B26\uFF0C\u8868\u793A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF1Auntil \u548C to \u90FD\u4E0D\u5728\u63A8\u8350\u4F7F\u7528\u4E86\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>arrays.indices</code> \u6765\u66FF\u6362\u3002</p></blockquote><h3 id="\u7B2C4\u8282-\u5E38\u89C1\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B2C4\u8282-\u5E38\u89C1\u7B97\u6CD5" aria-hidden="true">#</a> \u7B2C4\u8282 \u5E38\u89C1\u7B97\u6CD5</h3><p>\u5728Scala\u4E2D\u5BF9\u6570\u7EC4\u8FDB\u884C\u8F6C\u6362\u975E\u5E38\u7B80\u5355\u65B9\u4FBF\uFF0C\u8FD9\u4E9B\u8F6C\u6362\u52A8\u4F5C\u4E0D\u4F1A\u4FEE\u6539\u539F\u59CB\u6570\u7EC4\uFF0C\u800C\u662F\u4EA7\u751F\u4E00\u4E2A\u5168\u65B0\u7684\u6570\u7EC4\u3002</p><p>\u4EFB\u52A1: \u5C06\u6570\u7EC4\u4E2D\u5076\u6570\u5143\u7D20\u52A0\u500D\uFF0C\u5947\u6570\u5143\u7D20\u4E22\u5F03</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> OperatorDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u6570\u7EC4\u4E2D\u7684\u5076\u6570\u52A0\u500D\uFF0C\u5947\u6570\u4E22\u5F03</span>
    <span class="token keyword">val</span> nums <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray
    <span class="token keyword">val</span> result <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>ele <span class="token keyword">&lt;-</span> nums <span class="token keyword">if</span> ele <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> ele <span class="token operator">*</span> <span class="token number">2</span>
    <span class="token keyword">val</span> result2 <span class="token operator">=</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>ele <span class="token keyword">&lt;-</span> nums<span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ele <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> ele <span class="token operator">*</span> <span class="token number">2</span>

    result<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span>
    result2<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u4F7F\u7528 scala \u4E2D\u7684\u9AD8\u9636\u51FD\u6570\u5B9E\u73B0</span>
    nums<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span>

    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>head<span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E00\u4E2A\u5143\u7D20</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>last<span class="token punctuation">)</span> <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>tail<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E00\u4E2A\u5143\u7D20\u4E4B\u5916\u7684\u5176\u4ED6\u5143\u7D20[\u7ED3\u679C\u662F\u96C6\u5408]</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>init<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E4B\u5916\u7684\u5176\u4ED6\u5143\u7D20[\u7ED3\u679C\u662F\u96C6\u5408] toBuffer \u662F\u4E3A\u4E86\u65B9\u4FBF\u89C2\u5BDF</span>

    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>sum<span class="token punctuation">)</span> <span class="token comment">// \u6C42\u548C</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token comment">// \u6700\u5927\u503C</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>min<span class="token punctuation">)</span> <span class="token comment">// \u6700\u5C0F\u503C</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> num2 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>num2<span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u6392\u5E8F(\u5347\u5E8F)</span>
    println<span class="token punctuation">(</span>num2<span class="token punctuation">.</span>product<span class="token punctuation">)</span> <span class="token comment">// \u5143\u7D20\u76F8\u4E58</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;-----------------&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> num3 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u5143\u7D20\u4E58\u4EE52</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>reduce<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u9010\u4E2A\u5143\u7D20\u76F8\u52A0</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>distinct<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u53BB\u91CD</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// \u6570\u7EC4\u957F\u5EA6</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token comment">// \u6570\u7EC4\u957F\u5EA6 (\u5E95\u5C42\u5176\u5B9E\u8FD8\u662F\u4F7F\u7528\u7684 length)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u6BCF\u4E2A\u5143\u7D20\u7684\u7D22\u5F15</span>

    <span class="token comment">// \u4F7F\u7528 mkString \u8FDB\u884C\u8F93\u51FA (\u6BD4 toBuffer \u66F4\u52A0\u4F18\u96C5)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot; &amp; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6307\u5B9A\u5206\u5272\u7B26</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &amp; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6307\u5B9A\u524D\u7F00\uFF0C\u5206\u5272\u7B26\uFF0C\u540E\u7F00</span>

    <span class="token comment">// count() \u8BA1\u6570\uFF0C() \u5185\u5FC5\u987B\u6709\u6761\u4EF6</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>count<span class="token punctuation">(</span>_ <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5927\u4E8E 2 \u7684\u5143\u7D20\u7684\u4E2A\u6570</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>count<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5076\u6570\u7684\u4E2A\u6570</span>

    <span class="token comment">// filter \u8FC7\u6EE4\u51FA\u7B26\u5408\u6761\u4EF6\u7684\u6570\u636E; filterNot \u8FC7\u6EE4\u51FA\u4E0D\u7B26\u5408\u6761\u4EF6\u7684\u6570\u636E</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>_ <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>nums<span class="token punctuation">.</span>filterNot<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u8BA1\u6570</span>

    <span class="token comment">// take</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u63D0\u53D6\u524D n \u4E2A\u5143\u7D20 =&gt; ArrayBuffer(1, 2, 3)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>takeRight<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u63D0\u53D6\u540E n \u4E2A\u5143\u7D20 =&gt; ArrayBuffer(4, 3, 2, 1)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>takeWhile<span class="token punctuation">(</span>_ <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u4ECE\u5DE6\u5411\u53F3\u8FDB\u884C\u63D0\u53D6\uFF0C\u63D0\u53D6\u51FA\u7B26\u5408\u6761\u4EF6\u7684\u5143\u7D20\uFF0C\u5982\u679C\u6761\u4EF6\u4E0D\u6210\u7ACB\uFF0C\u5C31\u7EC8\u6B62\u63D0\u53D6\u3002 =&gt; ArrayBuffer(1, 2, 3)</span>

    <span class="token comment">// drop (\u64CD\u4F5C\u7684\u5143\u7D20\u7684\u4F4D\u7F6E\u548Ctake\u7C7B\u4F3C)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(4, 3, 2, 1)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>dropRight<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(1, 2, 3, 4)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>dropWhile<span class="token punctuation">(</span>_ <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(4, 3, 2, 1)</span>

    <span class="token comment">// \u6570\u7EC4\u5207\u5206</span>
    <span class="token keyword">val</span> tuple <span class="token operator">=</span> num3<span class="token punctuation">.</span>splitAt<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// \u4EE5\u524D\u4E09\u4E2A\u5143\u7D20\u4E3A\u754C\uFF0C\u5207\u5206\u6570\u7EC4</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toBuffer <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> tuple<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// =&gt; ArrayBuffer(1, 2, 3) ArrayBuffer(4, 3, 2, 1)</span>
    println<span class="token punctuation">(</span>num3<span class="token punctuation">.</span>slice<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u53D6 [2, 5) \u7684\u5143\u7D20 =&gt; ArrayBuffer(3, 4, 3)</span>

    println<span class="token punctuation">(</span><span class="token string">&quot;------------------&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> arr1 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> arr2 <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> z1 <span class="token operator">=</span> arr1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>arr2<span class="token punctuation">)</span> <span class="token comment">// \u62C9\u94FE\u64CD\u4F5C: \u5F53\u4E24\u4E2A\u6570\u7EC4\u957F\u5EA6\u4E0D\u4E00\u6837\u65F6\uFF0C\u622A\u53D6\u76F8\u540C\u7684\u957F\u5EA6</span>
    println<span class="token punctuation">(</span>z1<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// =&gt; ArrayBuffer((A,1), (B,2), (C,3))</span>
    <span class="token keyword">val</span> z2 <span class="token operator">=</span> arr1<span class="token punctuation">.</span>zipAll<span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u62C9\u94FE\u64CD\u4F5C\uFF0C\u5F53 arr1 \u957F\u5EA6\u4E0D\u591F\u65F6\u7528 * \u586B\u5145\uFF0Carr2 \u4E0D\u591F\u65F6\u7528 -1 \u586B\u5145</span>
    println<span class="token punctuation">(</span>z2<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer((A,1), (B,2), (C,3), (*,4))</span>
    <span class="token keyword">val</span> z3 <span class="token operator">=</span> arr2<span class="token punctuation">.</span>zipAll<span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>z3<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer((1,A), (2,B), (3,C), (4,-1))</span>
    <span class="token keyword">val</span> z4 <span class="token operator">=</span> arr1<span class="token punctuation">.</span>zipWithIndex <span class="token comment">// \u7528\u6570\u7EC4\u7D22\u5F15\u8FDB\u884C\u586B\u5145</span>
    println<span class="token punctuation">(</span>z4<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer((A,0), (B,1), (C,2))</span>

    <span class="token comment">// \u901A\u8FC7 unzip \u8FDB\u884C\u62C6\u5206\u6570\u7EC4\u7684\u64CD\u4F5C</span>
    <span class="token keyword">val</span> <span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span> <span class="token operator">=</span> z4<span class="token punctuation">.</span>unzip
    println<span class="token punctuation">(</span>l1<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(A, B, C)</span>
    println<span class="token punctuation">(</span>l2<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(0, 1, 2)</span>

    <span class="token keyword">val</span> <span class="token punctuation">(</span>l3<span class="token punctuation">,</span> l4<span class="token punctuation">,</span> l5<span class="token punctuation">)</span> <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>unzip3
    println<span class="token punctuation">(</span>l3<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(1, 2, 3)</span>
    println<span class="token punctuation">(</span>l4<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(one, two, three)</span>
    println<span class="token punctuation">(</span>l5<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// ArrayBuffer(1, 2, 3)</span>

    <span class="token comment">// \u6570\u7EC4\u7684\u64CD\u4F5C\u7B26 :+ +: ++</span>
    <span class="token comment">// :+ \u7528\u4E8E\u5728\u6570\u7EC4\u7684\u5C3E\u90E8\u8FFD\u52A0\u5143\u7D20; +: \u7528\u4E8E\u5728\u6570\u7EC4\u5934\u90E8\u63D2\u5165\u5143\u7D20; ++ \u7528\u4E8E\u8FDE\u63A5\u4E24\u4E2A\u96C6\u5408(\u53EF\u4EE5\u662F\u6570\u7EC4\u4E5F\u53EF\u4EE5\u662F\u5217\u8868)</span>
    <span class="token comment">// + \u5728\u540E\u8868\u793A\u6DFB\u52A0\u5728\u540E\u9762\uFF0C+ \u5728\u524D\u9762\u8868\u793A\u5728\u524D\u9762\u6DFB\u52A0</span>
    <span class="token keyword">val</span> nums1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray
    <span class="token keyword">val</span> nums2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span> to <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray

    <span class="token keyword">val</span> nums3 <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">+</span><span class="token operator">:</span> nums1 <span class="token comment">// ArrayBuffer(10, 1, 2, 3, 4)</span>
    <span class="token keyword">val</span> nums4 <span class="token operator">=</span> nums2 <span class="token operator">:</span><span class="token operator">+</span> <span class="token number">9</span> <span class="token comment">// ArrayBuffer(3, 4, 5, 6, 7, 8, 9)</span>
    <span class="token keyword">val</span> nums5 <span class="token operator">=</span> nums1 <span class="token operator">++</span> nums2 <span class="token comment">// ArrayBuffer(1, 2, 3, 4, 3, 4, 5, 6, 7, 8)</span>

    <span class="token comment">// \u6392\u5E8F\u64CD\u4F5C</span>
    <span class="token keyword">val</span> sortNum <span class="token operator">=</span> Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>sortNum<span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u5347\u5E8F\u6392\u5217</span>
    println<span class="token punctuation">(</span>sortNum<span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>reverse<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u964D\u5E8F\u6392\u5217</span>
    println<span class="token punctuation">(</span>sortNum<span class="token punctuation">.</span>sortWith<span class="token punctuation">(</span>_ <span class="token operator">&gt;</span> _<span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u964D\u5E8F\u6392\u5217(&gt; \u5927\u7684\u6392\u524D\u9762)</span>
    println<span class="token punctuation">(</span>sortNum<span class="token punctuation">.</span>sortWith<span class="token punctuation">(</span>_ <span class="token operator">&lt;</span> _<span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span> <span class="token comment">// \u5347\u5E8F\u6392\u5217(&lt; \u5C0F\u7684\u6392\u524D\u9762)</span>
    
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br></div></div><h3 id="\u7B2C5\u8282-\u591A\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7B2C5\u8282-\u591A\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u7B2C5\u8282 \u591A\u7EF4\u6570\u7EC4</h3><p>\u901A\u8FC7 Array \u7684 <code>ofDim</code> \u65B9\u6CD5\u6765\u5B9A\u4E49\u4E00\u4E2A\u591A\u7EF4\u7684\u6570\u7EC4\uFF0C\u591A\u5C11\u884C\uFF0C\u591A\u5C11\u5217\uFF0C\u90FD\u662F\u81EA\u5DF1\u8BF4\u4E86\u7B97\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A3\u884C4\u5217\u7684\u4E8C\u7EF4\u6570\u7EC4</span>
<span class="token keyword">val</span> dim <span class="token operator">=</span> Array<span class="token punctuation">.</span>ofDim<span class="token punctuation">[</span><span class="token builtin">Double</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
dim<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">12.5</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">&lt;-</span> <span class="token number">0</span> to <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token keyword">&lt;-</span> <span class="token number">0</span> to <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  print<span class="token punctuation">(</span>dim<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; \\t&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> println<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u7B2C6\u8282-\u5143\u7EC4\u53CA\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7B2C6\u8282-\u5143\u7EC4\u53CA\u64CD\u4F5C" aria-hidden="true">#</a> \u7B2C6\u8282 \u5143\u7EC4\u53CA\u64CD\u4F5C</h3><p>Tuple\uFF0C\u5143\u7EC4\u3002 Map\u662F\u952E\u503C\u5BF9\u7684\u96C6\u5408, \u5BF9\u5076\u662F\u5143\u7EC4\u7684\u6700\u7B80\u5355\u5F62\u6001;</p><p>\u5143\u7EC4\u662F\u4E0D\u540C\u7C7B\u578B\u7684\u503C\u7684\u96C6\u5408\uFF0C\u5143\u7EC4\u4E2D\u7684\u5143\u7D20\u53EF\u4EE5\u662F\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u5143\u7EC4\u5728Scala\u4E2D\u7684\u5E94\u7528\u975E\u5E38\u5E7F\u6CDB\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Tuple \u5143\u7EC4\uFF0C\u53EF\u4EE5\u5B58\u653E\u6570\u636E\u7C7B\u578B\u4E0D\u540C\u7684\u5143\u7D20\u3002
 * \u5143\u7EC4\u7684\u7D22\u5F15\u4ECE 1 \u5F00\u59CB; \u5143\u7EC4\u5728 Scala \u4E2D\u5E94\u7528\u975E\u5E38\u5E7F\u6CDB\uFF0C\u5728 Spark \u7684\u6E90\u7801\u4E2D\u4F1A\u89C1\u5230\u5F88\u591A\u5143\u7EC4\u3002
 * \u5728 Scala \u4E2D\u5DF2\u7ECF\u9884\u5B9A\u4E49\u4E8622\u4E2ATuple(1 ~ 22), Tuple22 \u4E2D\u6700\u591A\u53EA\u80FD\u670922\u4E2A\u5143\u7D20\u3002
 */</span>
<span class="token keyword">object</span> TupleDemo <span class="token punctuation">{</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5143\u7EC4</span>
    <span class="token keyword">val</span> tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> tuple2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token string">&quot;scala&quot;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">)</span>
    println<span class="token punctuation">(</span>tuple <span class="token operator">==</span> tuple2<span class="token punctuation">)</span> <span class="token comment">// \u5224\u65AD\u76F8\u7B49\u6027 // false</span>
    println<span class="token punctuation">(</span>tuple<span class="token punctuation">.</span>_3<span class="token punctuation">)</span> <span class="token comment">// \u53D6\u7B2C\u4E09\u4E2A\u5143\u7D20 // spark</span>

    <span class="token comment">// \u4ECE\u5143\u7EC4\u4E2D\u63A5\u6536\u6570\u636E</span>
    <span class="token keyword">val</span> <span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">,</span> t4<span class="token punctuation">)</span><span class="token punctuation">,</span> t5 <span class="token operator">=</span> tuple2
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">t1</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">t2</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">t3</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">t4</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">// 1 1.2 scala b</span>
    println<span class="token punctuation">(</span>t5<span class="token punctuation">)</span> <span class="token comment">// (1,1.2,scala,b)</span>
    <span class="token keyword">val</span> <span class="token punctuation">(</span>b1<span class="token punctuation">,</span> _<span class="token punctuation">,</span> b2<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span> b5 <span class="token operator">=</span> tuple2
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">b1</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">b2</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">// 1 scala</span>

    <span class="token comment">// \u904D\u5386\u5143\u7EC4</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>t <span class="token keyword">&lt;-</span> tuple<span class="token punctuation">.</span>productIterator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      println<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    tuple<span class="token punctuation">.</span>productIterator<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,148);function w(q,S){const a=o("ExternalLinkIcon");return c(),l(r,null,[k,n("p",null,[b,n("a",m,[d,p(a)])]),g,n("p",null,[f,n("a",h,[y,p(a)])]),v],64)}var A=e(i,[["render",w],["__file","index.html.vue"]]);export{A as default};
