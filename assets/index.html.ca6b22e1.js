import{_ as n,c as a}from"./app.40df414d.js";var s="/doc/assets/README-1651196603397.8b3fceab.png",e="/doc/assets/README-1651196661331.3614e727.png",p="/doc/assets/README-1651198140211.88a7991c.png",t="/doc/assets/README-1651199339223.432a9459.png",o="/doc/assets/README-1651199866783.1f7fa992.png";const c={},l=a('<h1 id="kafka-\u751F\u4EA7\u8005\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#kafka-\u751F\u4EA7\u8005\u8BE6\u89E3" aria-hidden="true">#</a> Kafka \u751F\u4EA7\u8005\u8BE6\u89E3</h1><h2 id="_1-kafka-\u6D88\u606F\u53D1\u9001" tabindex="-1"><a class="header-anchor" href="#_1-kafka-\u6D88\u606F\u53D1\u9001" aria-hidden="true">#</a> 1. Kafka \u6D88\u606F\u53D1\u9001</h2><h3 id="_1-1-\u6570\u636E\u751F\u4EA7\u6D41\u7A0B\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_1-1-\u6570\u636E\u751F\u4EA7\u6D41\u7A0B\u89E3\u6790" aria-hidden="true">#</a> 1.1 \u6570\u636E\u751F\u4EA7\u6D41\u7A0B\u89E3\u6790</h3><p><img src="'+s+`" alt="\u6D88\u606F\u751F\u4EA7\u6D41\u7A0B"></p><ol><li>Producer \u521B\u5EFA\u65F6\uFF0C\u4F1A\u521B\u5EFA\u4E00\u4E2A Sender \u7EBF\u7A0B\u5E76\u8BBE\u7F6E\u4E3A\u5B88\u62A4\u7EBF\u7A0B\u3002</li><li>\u751F\u4EA7\u6D88\u606F\u65F6\uFF0C\u5185\u90E8\u5176\u5B9E\u662F\u5F02\u6B65\u6D41\u7A0B; \u751F\u4EA7\u7684\u6D88\u606F\u5148\u7ECF\u8FC7 <em>\u62E6\u622A\u5668 -&gt; \u5E8F\u5217\u5316\u5668 -&gt; \u5206\u533A\u5668</em>\uFF0C\u7136\u540E\u5C06\u6D88\u606F\u7F13\u5B58\u5728\u7F13\u51B2\u533A(\u8BE5\u7F13\u51B2\u533A\u4E5F\u662F\u5728 Producer \u521B\u5EFA\u65F6\u521B\u5EFA)\u3002</li><li>\u6279\u6B21\u53D1\u9001\u7684\u6761\u4EF6\u4E3A: \u7F13\u51B2\u533A\u6570\u636E\u5927\u5C0F\u8FBE\u5230 <code>batch.size</code> \u6216\u8005 <code>linger.ms</code> \u8FBE\u5230\u4E0A\u9650\uFF0C\u54EA\u4E2A\u5148\u8FBE\u5230\u5C31\u7B97\u54EA\u4E2A\u3002</li><li>\u6279\u6B21\u53D1\u9001\u540E\uFF0C\u53D1\u5F80\u6307\u5B9A\u5206\u533A\uFF0C\u7136\u540E\u843D\u76D8\u5230 Broker; \u5982\u679C\u751F\u4EA7\u8005\u914D\u7F6E\u4E86 <code>retrires</code> \u53C2\u6570\u5927\u4E8E 0 \u5E76\u4E14\u5931\u8D25\u539F\u56E0\u5141\u8BB8\u91CD\u8BD5\uFF0C\u90A3\u4E48\u5BA2\u6237\u7AEF\u5185\u90E8\u4F1A\u5BF9\u8BE5\u6D88\u606F\u8FDB\u884C\u91CD\u8BD5\u3002</li><li>\u843D\u76D8\u5230 Broker \u6210\u529F\uFF0C\u8FD4\u56DE\u751F\u4EA7\u5143\u6570\u636E\u7ED9\u751F\u4EA7\u8005\u3002</li><li>\u5143\u6570\u636E\u8FD4\u56DE\u6709\u4E24\u79CD\u65B9\u5F0F: \u4E00\u79CD\u662F\u901A\u8FC7\u963B\u585E\u76F4\u63A5\u8FD4\u56DE\uFF0C\u53E6\u4E00\u79CD\u662F\u901A\u8FC7\u56DE\u8C03\u8FD4\u56DE\u3002</li></ol><h3 id="_1-2-\u5FC5\u8981\u53C2\u6570\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#_1-2-\u5FC5\u8981\u53C2\u6570\u914D\u7F6E" aria-hidden="true">#</a> 1.2 \u5FC5\u8981\u53C2\u6570\u914D\u7F6E</h3><p><strong>Broker \u914D\u7F6E</strong></p><ol><li>\u914D\u7F6E\u6761\u76EE\u7684\u4F7F\u7528\u65B9\u5F0F:</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>\u914D\u7F6E\u53C2\u6570:</li></ol><table><thead><tr><th>\u5C5E\u6027</th><th>\u8BF4\u660E</th><th>\u91CD\u8981\u6027</th></tr></thead><tbody><tr><td><code>bootstrap.servers</code></td><td>\u751F\u4EA7\u8005\u5BA2\u6237\u7AEF\u4E0E Broker \u96C6\u7FA4\u5EFA\u7ACB\u521D\u59CB\u8FDE\u63A5\u9700\u8981\u7684 Broker \u5730\u5740\u5217\u8868\uFF0C\u7531\u8BE5\u521D\u59CB\u8FDE\u63A5\u53D1\u73B0 Kafka \u96C6\u7FA4\u4E2D\u5176\u4ED6\u7684\u6240\u6709 Broker\u3002\u8BE5\u5730\u5740\u5217\u8868\u4E0D\u9700\u8981\u5199\u5168\u90E8\u7684 Kafka \u96C6\u7FA4\u4E2D Broker \u7684\u5730\u5740\uFF0C\u4F46\u4E5F\u4E0D\u8981\u5199\u4E00\u4E2A\uFF0C\u4EE5\u9632\u8BE5\u8282\u70B9\u5B95\u673A\u7684\u65F6\u5019\u4E0D\u53EF\u7528\u3002\u5F62\u5F0F\u4E3A: <code>host1:port1,host2:port2,...</code> .</td><td>high</td></tr><tr><td><code>key.serializer</code></td><td>\u5B9E\u73B0\u4E86\u63A5\u53E3 <code>org.apache.kafka.common.serialization.Serializer</code> \u7684key\u5E8F\u5217\u5316\u7C7B\u3002</td><td>high</td></tr><tr><td><code>value.serializer</code></td><td>\u5B9E\u73B0\u4E86\u63A5\u53E3 <code>org.apache.kafka.common.serialization.Serializer</code> \u7684value\u5E8F\u5217\u5316\u7C7B\u3002</td><td>high</td></tr><tr><td><code>acks</code></td><td>\u8BE5\u9009\u9879\u63A7\u5236\u7740\u5DF2\u53D1\u9001\u6D88\u606F\u7684\u6301\u4E45\u6027\u3002 <br> <code>acks=0</code>: \u751F\u4EA7\u8005\u4E0D\u7B49\u5F85 Broker \u7684\u4EFB\u4F55\u6D88\u606F\u786E\u8BA4\u3002\u53EA\u8981\u5C06\u6D88\u606F\u653E\u5230\u4E86 Socket \u7684\u7F13\u51B2\u533A\uFF0C\u5C31\u8BA4\u4E3A\u6D88\u606F\u5DF2\u53D1\u9001\u3002\u4E0D\u80FD\u4FDD\u8BC1\u670D\u52A1\u5668\u662F\u5426\u6536\u5230\u8BE5\u6D88\u606F\uFF0C<code>retries</code> \u8BBE\u7F6E\u4E5F\u4E0D\u8D77\u4F5C\u7528\uFF0C\u56E0\u4E3A\u5BA2\u6237\u7AEF\u4E0D\u5173\u5FC3\u6D88\u606F\u662F\u5426\u53D1\u9001\u5931\u8D25\u3002\u5BA2\u6237\u7AEF\u6536\u5230\u7684\u6D88\u606F\u504F\u79FB\u91CF\u6C38\u8FDC\u662F -1\u3002<br> <code>acks=1</code>: Leader \u5C06\u8BB0\u5F55\u5199\u5230\u5B83\u672C\u5730\u65E5\u5FD7\uFF0C\u5C31\u54CD\u5E94\u5BA2\u6237\u7AEF\u786E\u8BA4\u6D88\u606F\uFF0C\u800C\u4E0D\u7B49\u5F85 Follower \u526F\u672C\u7684\u786E\u8BA4\u3002\u5982\u679C Leader \u786E\u8BA4\u4E86\u6D88\u606F\u5C31\u5B95\u673A\uFF0C\u5219\u53EF\u80FD\u4F1A\u4E22\u5931\u6D88\u606F\uFF0C\u56E0\u4E3A Follower \u526F\u672C\u53EF\u80FD\u8FD8\u6CA1\u6765\u5F97\u53CA\u540C\u6B65\u8BE5\u6D88\u606F\u3002<br> <code>acks=all</code>: Leader \u7B49\u5F85\u6240\u6709\u540C\u6B65\u7684\u526F\u672C\u786E\u8BA4\u8BE5\u6D88\u606F\u3002\u4FDD\u8BC1\u4E86\u53EA\u8981\u6709\u4E00\u4E2A\u540C\u6B65\u526F\u672C\u5B58\u5728\uFF0C\u6D88\u606F\u5C31\u4E0D\u4F1A\u4E22\u5931\u3002\u8FD9\u662F\u6700\u5F3A\u7684\u53EF\u7528\u6027\u4FDD\u8BC1\u3002\u7B49\u4EF7\u4E8E <code>acks=-1</code>\u3002\u9ED8\u8BA4\u503C\u4E3A 1\uFF0C\u5B57\u7B26\u4E32\u3002\u53EF\u9009\u503C: <code>[all, -1, 0, 1]</code></td><td>high</td></tr><tr><td><code>compression.type</code></td><td>\u751F\u4EA7\u8005\u751F\u6210\u6570\u636E\u7684\u538B\u7F29\u683C\u5F0F\u3002\u9ED8\u8BA4\u662F none (\u6CA1\u6709\u538B\u7F29)\u3002\u5141\u8BB8\u7684\u503C: none, gzip, snappy \u548C lz4\u3002 \u538B\u7F29\u662F\u5BF9\u6574\u4E2A\u6D88\u606F\u6279\u6B21\u6765\u8BB2\u7684\u3002\u6D88\u606F\u6279\u7684\u6548\u7387\u4E5F\u5F71\u54CD\u538B\u7F29\u7684\u6BD4\u4F8B\u3002\u6D88\u606F\u6279\u8D8A\u5927\uFF0C\u538B\u7F29\u6548\u7387\u8D8A\u597D\u3002\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u503C\u3002\u9ED8\u8BA4\u662Fnone\u3002</td><td>high</td></tr><tr><td><code>retries</code></td><td>\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u4E3A\u4E00\u4E2A\u5927\u4E8E 1 \u7684\u503C\uFF0C\u5C06\u5728\u6D88\u606F\u53D1\u9001\u5931\u8D25\u7684\u65F6\u5019\u91CD\u65B0\u53D1\u9001\u6D88\u606F\u3002\u8BE5\u91CD\u8BD5\u4E0E\u5BA2\u6237\u7AEF\u6536\u5230\u5F02\u5E38\u91CD\u65B0\u53D1\u9001\u5E76\u65E0\u4E8C\u81F3\u3002\u5141\u8BB8\u91CD\u8BD5\u4F46\u662F\u4E0D\u8BBE\u7F6E <code>max.in.flight.requests.per.connection</code> \u4E3A1\uFF0C\u5B58\u5728\u6D88\u606F\u4E71\u5E8F\u7684\u53EF\u80FD\uFF0C\u56E0\u4E3A\u5982\u679C\u4E24\u4E2A\u6279\u6B21\u53D1\u9001\u5230\u540C\u4E00\u4E2A\u5206\u533A\uFF0C\u7B2C\u4E00\u4E2A\u5931\u8D25\u4E86\u91CD\u8BD5\uFF0C\u7B2C\u4E8C\u4E2A\u6210\u529F\u4E86\uFF0C\u5219\u7B2C\u4E00\u4E2A\u6D88\u606F\u6279\u5728\u7B2C\u4E8C\u4E2A\u6D88\u606F\u6279\u540E\u3002<code>int</code> \u7C7B\u578B\u7684\u503C\uFF0C\u9ED8\u8BA4: 0\uFF0C\u53EF\u9009\u503C: <code>[0,...,2147483647]</code></td><td>high</td></tr></tbody></table><h3 id="_1-3-\u5E8F\u5217\u5316\u5668" tabindex="-1"><a class="header-anchor" href="#_1-3-\u5E8F\u5217\u5316\u5668" aria-hidden="true">#</a> 1.3 \u5E8F\u5217\u5316\u5668</h3><p><img src="`+e+`" alt="\u5E8F\u5217\u5316\u5668"></p><p>\u7531\u4E8E Kafka \u4E2D\u7684\u6570\u636E\u90FD\u662F\u5B57\u8282\u6570\u7EC4\uFF0C\u5728\u5C06\u6D88\u606F\u53D1\u9001\u5230 Kafka \u4E4B\u524D\u9700\u8981\u5148\u5C06\u6570\u636E\u5E8F\u5217\u5316\u4E3A\u5B57\u8282\u6570\u7EC4\u3002</p><p>\u5E8F\u5217\u5316\u5668\u7684\u4F5C\u7528\u5C31\u662F\u7528\u4E8E\u5E8F\u5217\u5316\u8981\u53D1\u9001\u7684\u6D88\u606F\u7684\u3002</p><p>Kafka \u4F7F\u7528 <code>org.apache.kafka.common.serialization.Serializer</code> \u63A5\u53E3\u7528\u4E8E\u5B9A\u4E49\u5E8F\u5217\u5316\u5668\uFF0C\u5C06\u6CDB\u578B\u6307\u5B9A\u7C7B\u578B\u7684\u6570\u636E\u8F6C\u6362\u4E3A\u5B57\u8282\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A byte \u6570\u7EC4\u7684\u63A5\u53E3
 * 
 * \u8BE5\u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B\u9700\u8981\u63D0\u4F9B\u65E0\u53C2\u6784\u9020\u5668
 * 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> \u4ECE\u54EA\u4E2A\u7C7B\u578B\u8F6C\u6362
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Serializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Closeable</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * Configure this class.
     * <span class="token keyword">@param</span> <span class="token parameter">configs</span> configs in key/value pairs
     * <span class="token keyword">@param</span> <span class="token parameter">isKey</span> whether is for key or value
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> configs<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// intentionally left blank</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Convert <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">data</span></span><span class="token punctuation">}</span> into a byte array.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> topic associated with data (\u4E3B\u9898\u540D\u79F0, associated with ... \u4E0E ... \u6709\u5173\u7CFB)
     * <span class="token keyword">@param</span> <span class="token parameter">data</span> typed data
     * <span class="token keyword">@return</span> serialized bytes
     */</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Convert <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">data</span></span><span class="token punctuation">}</span> into a byte array.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> topic associated with data
     * <span class="token keyword">@param</span> <span class="token parameter">headers</span> headers associated with the record
     * <span class="token keyword">@param</span> <span class="token parameter">data</span> typed data
     * <span class="token keyword">@return</span> serialized bytes
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Headers</span> headers<span class="token punctuation">,</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">serialize</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Close this serializer.
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * This method must be idempotent as it may be called multiple times. (idempotent \u5E42\u7B49\u6027)
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// intentionally left blank</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>\u7CFB\u7EDF\u63D0\u4F9B\u4E86\u8BE5\u63A5\u53E3\u7684\u5B50\u63A5\u53E3\u4EE5\u53CA\u5B9E\u73B0\u7C7B:</p><ul><li><code>org.apache.kafka.common.serialization.ByteArraySerializer</code></li><li><code>org.apache.kafka.common.serialization.ByteBufferSerializer</code></li><li><code>org.apache.kafka.common.serialization.BytesSerializer</code></li><li><code>org.apache.kafka.common.serialization.DoubleSerializer</code></li><li><code>org.apache.kafka.common.serialization.FloatSerializer</code></li><li><code>org.apache.kafka.common.serialization.IntegerSerializer</code></li><li><code>org.apache.kafka.common.serialization.StringSerializer</code></li><li><code>org.apache.kafka.common.serialization.LongSerializer</code></li><li><code>org.apache.kafka.common.serialization.ShortSerializer</code></li></ul><p><strong>\u81EA\u5B9A\u4E49\u5E8F\u5217\u5316\u5668</strong></p><p>\u6570\u636E\u7684\u5E8F\u5217\u5316\u4E00\u822C\u751F\u4EA7\u4E2D\u4F7F\u7528 avro\u3002</p><p>\u81EA\u5B9A\u4E49\u5E8F\u5217\u5316\u5668\u9700\u8981\u5B9E\u73B0 <code>org.apache.kafka.common.serialization.Serializer&lt;T&gt;</code> \u63A5\u53E3\uFF0C\u5E76\u5B9E\u73B0\u5176\u4E2D\u7684 <code>serialize</code> \u65B9\u6CD5\u3002</p><blockquote><p>\u4EE3\u7801 \u7565...</p></blockquote><h3 id="_1-4-\u5206\u533A\u5668" tabindex="-1"><a class="header-anchor" href="#_1-4-\u5206\u533A\u5668" aria-hidden="true">#</a> 1.4 \u5206\u533A\u5668</h3><p><img src="`+p+`" alt="\u5206\u533A\u5668"></p><p>\u9ED8\u8BA4(DefaultPartitioner)\u5206\u533A\u8BA1\u7B97:</p><ol><li>\u5982\u679C record \u63D0\u4F9B\u4E86\u5206\u533A\u53F7\uFF0C\u5219\u4F7F\u7528 record \u63D0\u4F9B\u7684\u5206\u533A\u53F7</li><li>\u5982\u679C record \u6CA1\u6709\u63D0\u4F9B\u5206\u533A\u53F7\uFF0C\u5219\u4F7F\u7528 key \u7684\u5E8F\u5217\u5316\u540E\u7684\u503C\u7684 Hash \u503C\u5BF9\u5206\u533A\u6570\u91CF\u53D6\u6A21</li><li>\u5982\u679C record \u6CA1\u6709\u63D0\u4F9B\u5206\u533A\u53F7\uFF0C\u4E5F\u6CA1\u6709\u63D0\u4F9B key\uFF0C\u5219\u4F7F\u7528\u8F6E\u8BE2\u7684\u65B9\u5F0F\u5206\u914D\u5206\u533A\u53F7\u3002</li></ol><blockquote><p>\u6E90\u7801\u5206\u6790</p></blockquote><p>\u5982\u679C\u8981\u81EA\u5B9A\u4E49\u5206\u533A\u5668\uFF0C\u5219\u9700\u8981:</p><ol><li>\u9996\u5148\u5F00\u53D1 Partitioner \u63A5\u53E3\u7684\u5B9E\u73B0\u7C7B</li><li>\u5728 Kafka Producer \u4E2D\u8FDB\u884C\u8BBE\u7F6E: <code>configs.put(&quot;partitioner.class&quot;, &quot;xxx.xx.Xxx.class&quot;)</code></li></ol><p>\u4F4D\u4E8E <code>org.apache.kafka.clients.producer</code> \u5305\u4E2D\u7684\u5206\u533A\u5668\u63A5\u53E3:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Partitioner Interface
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Partitioner</span> <span class="token keyword">extends</span> <span class="token class-name">Configurable</span><span class="token punctuation">,</span> <span class="token class-name">Closeable</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * Compute the partition for the given record.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> The topic name
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> The key to partition on (or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">keyBytes</span> The serialized key to partition on( or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> The value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">valueBytes</span> The serialized value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">cluster</span> The current cluster metadata
     */</span>
    <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueBytes<span class="token punctuation">,</span> <span class="token class-name">Cluster</span> cluster<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * This is called when partitioner is closed.
     */</span>
    <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Notifies the partitioner a new batch is about to be created. When using the sticky(\u7C98) partitioner,
     * this method can change the chosen sticky partition for the new batch. 
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> The topic name
     * <span class="token keyword">@param</span> <span class="token parameter">cluster</span> The current cluster metadata
     * <span class="token keyword">@param</span> <span class="token parameter">prevPartition</span> The partition previously(\u9884\u5148\u7684) selected for the record that triggered a new batch
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">onNewBatch</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Cluster</span> cluster<span class="token punctuation">,</span> <span class="token keyword">int</span> prevPartition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u5305 <code>org.apache.kafka.clients.producer.internals</code> \u4E2D\u5206\u533A\u5668\u7684\u9ED8\u8BA4\u5B9E\u73B0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The default partitioning strategy:
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>If a partition is specified(\u6307\u5B9A\u7684) in the record, use it
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>If no partition is specified but a key is present choose a partition based on a hash of the key
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>If no partition or key is present choose the sticky partition that changes when the batch is full. (\u6EE1\u4E86\u5C31\u9009\u76F8\u90BB\u7684\u5206\u533A =&gt; \u8F6E\u8BE2)
 * 
 * See KIP-480 for details about sticky partitioning.
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultPartitioner</span> <span class="token keyword">implements</span> <span class="token class-name">Partitioner</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StickyPartitionCache</span> stickyPartitionCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StickyPartitionCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> configs<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Compute the partition for the given record.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> The topic name
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> The key to partition on (or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">keyBytes</span> serialized key to partition on (or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> The value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">valueBytes</span> serialized value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">cluster</span> The current cluster metadata
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueBytes<span class="token punctuation">,</span> <span class="token class-name">Cluster</span> cluster<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">partition</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> key<span class="token punctuation">,</span> keyBytes<span class="token punctuation">,</span> value<span class="token punctuation">,</span> valueBytes<span class="token punctuation">,</span> cluster<span class="token punctuation">,</span> cluster<span class="token punctuation">.</span><span class="token function">partitionsForTopic</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Compute the partition for the given record.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">topic</span> The topic name
     * <span class="token keyword">@param</span> <span class="token parameter">numPartitions</span> The number of partitions of the given <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">topic</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> The key to partition on (or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">keyBytes</span> serialized key to partition on (or null if no key)
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> The value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">valueBytes</span> serialized value to partition on or null
     * <span class="token keyword">@param</span> <span class="token parameter">cluster</span> The current cluster metadata
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> valueBytes<span class="token punctuation">,</span> <span class="token class-name">Cluster</span> cluster<span class="token punctuation">,</span>
                         <span class="token keyword">int</span> numPartitions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keyBytes <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> stickyPartitionCache<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> cluster<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// hash the keyBytes to choose a partition</span>
        <span class="token keyword">return</span> <span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">toPositive</span><span class="token punctuation">(</span><span class="token class-name">Utils</span><span class="token punctuation">.</span><span class="token function">murmur2</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> numPartitions<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * If a batch completed for the current sticky partition, change the sticky partition. 
     * Alternately, if no sticky partition has been determined, set one.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNewBatch</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">Cluster</span> cluster<span class="token punctuation">,</span> <span class="token keyword">int</span> prevPartition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stickyPartitionCache<span class="token punctuation">.</span><span class="token function">nextPartition</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span> cluster<span class="token punctuation">,</span> prevPartition<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>\u53EF\u4EE5\u5B9E\u73B0 <code>Partitioner</code> \u63A5\u53E3\u81EA\u5B9A\u4E49\u5206\u533A\u5668\uFF0C\u7136\u540E\u5728\u751F\u4EA7\u8005\u4E2D\u914D\u7F6E\u3002</p><blockquote><p>\u4EE3\u7801 \u7565...</p></blockquote><h3 id="_1-5-\u62E6\u622A\u5668" tabindex="-1"><a class="header-anchor" href="#_1-5-\u62E6\u622A\u5668" aria-hidden="true">#</a> 1.5 \u62E6\u622A\u5668</h3><p><img src="`+t+'" alt="\u62E6\u622A\u5668"></p><p>Producer \u62E6\u622A\u5668(<code>interceptor</code>)\u548C Consumer \u7AEF Interceptor \u662F\u5728 Kafka 0.10 \u7248\u672C\u88AB\u5F15\u5165\u7684\uFF0C\u4E3B\u8981\u7528\u4E8E\u5B9E\u73B0 Client \u7AEF\u7684\u5B9A\u5236\u5316\u63A7\u5236\u903B\u8F91\u3002</p><p>\u5BF9\u4E8E Producer \u800C\u8A00\uFF0CInterceptor \u4F7F\u5F97\u7528\u6237\u5728\u6D88\u606F\u53D1\u9001\u524D\u4EE5\u53CA Producer \u56DE\u8C03\u903B\u8F91\u524D\u6709\u673A\u4F1A\u5BF9\u6D88\u606F\u505A\u4E00\u4E9B\u5B9A\u5236\u5316\u9700\u6C42\uFF0C\u6BD4\u5982\u4FEE\u6539\u6D88\u606F\u7B49\u3002 \u540C\u65F6\uFF0CProducer \u5141\u8BB8\u7528\u6237\u6307\u5B9A\u591A\u4E2A Interceptor \u6309\u5E8F\u4F5C\u7528\u4E8E\u540C\u4E00\u6761\u6D88\u606F\u4ECE\u800C\u5F62\u6210\u4E00\u4E2A\u62E6\u622A\u94FE(interceptor chain)\u3002 Interceptor \u5B9E\u73B0\u7684\u63A5\u53E3\u662F <code>org.apache.kafka.clients.producer.ProducerInterceptor</code>\uFF0C\u5176\u5B9A\u4E49\u7684\u65B9\u6CD5\u5305\u62EC:</p><ul><li><code>onSend(ProducerRecord)</code>: \u8BE5\u65B9\u6CD5\u5C01\u88C5\u8FDB <code>KafkaProducer.send</code> \u65B9\u6CD5\u4E2D\uFF0C\u5373\u8FD0\u884C\u5728\u7528\u6237\u4E3B\u7EBF\u7A0B\u4E2D\u3002Producer \u786E\u4FDD\u5728\u6D88\u606F\u88AB\u5E8F\u5217\u5316\u4EE5\u8BA1\u7B97\u5206\u533A\u524D\u8C03\u7528\u8BE5\u65B9\u6CD5\u3002\u7528\u6237\u53EF\u4EE5\u5728\u8BE5\u65B9\u6CD5\u4E2D\u5BF9\u6D88\u606F\u505A\u4EFB\u4F55\u64CD\u4F5C\uFF0C\u4F46\u6700\u597D\u4FDD\u8BC1\u4E0D\u8981\u4FEE\u6539\u6D88\u606F\u6240\u5C5E\u7684 Topic \u548C\u5206\u533A\uFF0C\u5426\u5219\u4F1A\u5F71\u54CD\u76EE\u6807\u5206\u533A\u7684\u8BA1\u7B97\u3002</li><li><code>onAcknowledgement(RecordMetadata, Exception)</code>: \u8BE5\u65B9\u6CD5\u4F1A\u5728\u6D88\u606F\u88AB\u5E94\u7B54\u4E4B\u524D\u6216\u6D88\u606F\u53D1\u9001\u5931\u8D25\u65F6\u8C03\u7528\uFF0C\u5E76\u4E14\u901A\u5E38\u90FD\u662F\u5728 Producer \u56DE\u8C03\u903B\u8F91\u89E6\u53D1\u4E4B\u524D\u3002onAcknowledgement \u8FD0\u884C\u5728 Producer \u7684 IO \u7EBF\u7A0B\u4E2D\uFF0C\u56E0\u6B64\u4E0D\u8981\u5728\u8BE5\u65B9\u6CD5\u4E2D\u653E\u5165\u5F88\u91CD\u7684\u903B\u8F91\uFF0C\u5426\u5219\u4F1A\u62D6\u6162 Producer \u7684\u6D88\u606F\u53D1\u9001\u6548\u7387\u3002</li><li><code>close</code>: \u5173\u95ED Interceptor\uFF0C\u4E3B\u8981\u7528\u4E8E\u6267\u884C\u4E00\u4E9B\u8D44\u6E90\u6E05\u7406\u5DE5\u4F5C\u3002</li></ul><p>\u5982\u524D\u6240\u8FF0\uFF0CInterceptor \u53EF\u80FD\u88AB\u8FD0\u884C\u5728\u591A\u4E2A\u7EBF\u7A0B\u4E2D\uFF0C\u56E0\u6B64\u5728\u5177\u4F53\u5B9E\u73B0\u65F6\u7528\u6237\u9700\u8981\u81EA\u884C\u786E\u4FDD\u7EBF\u7A0B\u5B89\u5168\u3002\u53E6\u5916\u5018\u82E5\u6307\u5B9A\u4E86\u591A\u4E2A Interceptor\uFF0C\u5219 Producer \u5C06\u6309\u7167\u6307\u5B9A\u987A\u5E8F\u8C03\u7528\u5B83\u4EEC\uFF0C \u5E76\u4EC5\u4EC5\u662F\u6355\u83B7\u6BCF\u4E2A Interceptor \u53EF\u80FD\u629B\u51FA\u7684\u5F02\u5E38\u8BB0\u5F55\u5230\u9519\u8BEF\u65E5\u5FD7\u4E2D\u800C\u975E\u5728\u5411\u4E0A\u4F20\u9012\u3002\u8FD9\u5728\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u8981\u7279\u522B\u7559\u610F\u3002</p><p><strong>\u81EA\u5B9A\u4E49\u62E6\u622A\u5668</strong></p><ol><li>\u5B9E\u73B0 <code>ProducerInterceptor</code> \u63A5\u53E3</li><li>\u5728 KafkaProducer \u7684\u8BBE\u7F6E\u4E2D\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7684\u62E6\u622A\u5668</li></ol><blockquote><p>\u4EE3\u7801 \u7565...</p></blockquote><h2 id="_2-kafka-\u751F\u4EA7\u8005\u539F\u7406\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#_2-kafka-\u751F\u4EA7\u8005\u539F\u7406\u5256\u6790" aria-hidden="true">#</a> 2. Kafka \u751F\u4EA7\u8005\u539F\u7406\u5256\u6790</h2><p><img src="'+o+`" alt="\u8FD0\u884C\u539F\u7406"></p><p>\u7531\u4E0A\u56FE\u53EF\u4EE5\u770B\u51FA KafkaProducer \u6709\u4E24\u4E2A\u57FA\u672C\u7EBF\u7A0B:</p><ul><li>\u4E3B\u7EBF\u7A0B</li></ul><p>\u8D1F\u8D23\u6D88\u606F\u521B\u5EFA\uFF0C\u62E6\u622A\u5668\uFF0C\u5E8F\u5217\u5316\u5668\uFF0C\u5206\u533A\u5668\u7B49\u64CD\u4F5C\uFF0C\u5E76\u5C06\u6D88\u606F\u8FFD\u52A0\u5230\u6D88\u606F\u6536\u96C6\u5668 RecodeAccumulator \u4E2D;</p><p>\u6D88\u606F\u6536\u96C6\u5668 RecodeAccumulator \u4E3A\u6BCF\u4E2A\u5206\u533A\u90FD\u7EF4\u62A4\u4E86\u4E00\u4E2A <code>Deque&lt;ProducerBatch&gt;</code> \u7C7B\u578B\u7684\u53CC\u7AEF\u961F\u5217\u3002</p><p>ProducerBatch \u53EF\u4EE5\u7406\u89E3\u4E3A\u662F ProducerRecord \u7684\u96C6\u5408\uFF0C\u6279\u91CF\u53D1\u9001\u6709\u5229\u4E8E\u63D0\u5347\u541E\u5410\u91CF\uFF0C\u964D\u4F4E\u7F51\u7EDC\u5F71\u54CD; \u7531\u4E8E\u751F\u4EA7\u8005\u5BA2\u6237\u7AEF\u4F7F\u7528 <code>java.io.ByteBuffer</code> \u5728\u53D1\u9001\u6D88\u606F\u4E4B\u524D\u8FDB\u884C\u6D88\u606F\u4FDD\u5B58\uFF0C\u5E76\u7EF4\u62A4\u4E86\u4E00\u4E2A BufferPool \u5B9E\u73B0 ByteBuffer \u7684\u590D\u7528; \u8BE5\u7F13\u5B58\u6C60\u53EA\u9488\u5BF9\u7279\u5B9A\u5927\u5C0F(<code>batch.size</code> \u6307\u5B9A)\u7684 ByteBuffer \u8FDB\u884C\u7BA1\u7406\uFF0C\u5BF9\u4E8E\u6D88\u606F\u8FC7\u5927\u7684\u7F13\u5B58\uFF0C\u4E0D\u80FD\u505A\u5230\u91CD\u590D\u5229\u7528\u3002</p><p>\u6BCF\u6B21\u8FFD\u52A0\u4E00\u6761 ProducerRecord \u6D88\u606F\uFF0C\u4F1A\u5BFB\u627E/\u65B0\u5EFA\u5BF9\u5E94\u7684\u53CC\u7AEF\u961F\u5217\uFF0C\u4ECE\u5176\u5C3E\u90E8\u83B7\u53D6\u4E00\u4E2A ProducerBatch\uFF0C\u5224\u65AD\u5F53\u524D\u6D88\u606F\u7684\u5927\u5C0F\u662F\u5426\u53EF\u4EE5\u5199\u5165\u8BE5\u6279\u6B21\u4E2D\u3002 \u82E5\u53EF\u4EE5\u5199\u5165\u5219\u5199\u5165;\u82E5\u4E0D\u53EF\u4EE5\u5199\u5165\uFF0C\u5219\u65B0\u5EFA\u4E00\u4E2A ProducerBatch\uFF0C\u5224\u65AD\u8BE5\u6D88\u606F\u5927\u5C0F\u662F\u5426\u8D85\u8FC7\u5BA2\u6237\u7AEF\u53C2\u6570\u914D\u7F6E <code>batch.size</code> \u7684\u503C\uFF0C\u4E0D\u8D85\u8FC7\uFF0C\u5219\u4EE5 <code>batch.size</code> \u5EFA\u7ACB\u65B0\u7684 ProducerBatch\uFF0C \u8FD9\u6837\u65B9\u4FBF\u8FDB\u884C\u7F13\u5B58\u91CD\u590D\u5229\u7528; \u82E5\u8D85\u8FC7\uFF0C\u5219\u4EE5\u8BA1\u7B97\u7684\u6D88\u606F\u5927\u5C0F\u5EFA\u7ACB\u5BF9\u5E94\u7684 ProducerBatch \uFF0C\u7F3A\u70B9\u5C31\u662F\u8BE5\u5185\u5B58\u4E0D\u80FD\u88AB\u590D\u7528\u4E86\u3002</p><ul><li>Sender\u7EBF\u7A0B</li></ul><p>\u8BE5\u7EBF\u7A0B\u4ECE\u6D88\u606F\u6536\u96C6\u5668\u83B7\u53D6\u7F13\u5B58\u7684\u6D88\u606F\uFF0C\u5C06\u5176\u5904\u7406\u4E3A <code>&lt;Node, List&lt;ProducerBatch&gt;</code> \u7684\u5F62\u5F0F\u3002<code>Node</code> \u8868\u793A\u96C6\u7FA4\u7684 Broker \u8282\u70B9\u3002</p><p>\u8FDB\u4E00\u6B65\u5C06 <code>&lt;Node, List&lt;ProducerBatch&gt;</code> \u8F6C\u5316\u4E3A <code>&lt;Node, Request&gt;</code> \u5F62\u5F0F\uFF0C\u6B64\u65F6\u624D\u53EF\u4EE5\u5411\u670D\u52A1\u7AEF\u53D1\u9001\u6570\u636E\u3002</p><p>\u5728\u53D1\u9001\u4E4B\u524D\uFF0CSender \u7EBF\u7A0B\u5C06\u6D88\u606F\u4EE5 <code>Map&lt;NodeId, Deque&lt;Request&gt;&gt;</code> \u7684\u5F62\u5F0F\u4FDD\u5B58\u5230 InFlightRequests \u4E2D\u8FDB\u884C\u7F13\u5B58\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5176\u83B7\u53D6 leastLoadedNode, \u5373\u5F53\u524D Node \u4E2D\u8D1F\u8F7D\u538B\u529B\u6700\u5C0F\u7684\u4E00\u4E2A\uFF0C\u4EE5\u5B9E\u73B0\u6D88\u606F\u7684\u5C3D\u5FEB\u53D1\u51FA\u3002</p><h2 id="_3-kafka-\u751F\u4EA7\u8005\u53C2\u6570\u914D\u7F6E\u8865\u5145" tabindex="-1"><a class="header-anchor" href="#_3-kafka-\u751F\u4EA7\u8005\u53C2\u6570\u914D\u7F6E\u8865\u5145" aria-hidden="true">#</a> 3. Kafka \u751F\u4EA7\u8005\u53C2\u6570\u914D\u7F6E\u8865\u5145</h2><ol><li>\u53C2\u6570\u8BBE\u7F6E\u65B9\u5F0F</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>\u8865\u5145\u53C2\u6570</li></ol><blockquote><p>\u8868\u683C</p></blockquote>`,62);function r(i,u){return l}var d=n(c,[["render",r],["__file","index.html.vue"]]);export{d as default};
