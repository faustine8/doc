import{_ as e,r as o,o as c,a as l,b as n,d as a,F as u,c as t,e as p}from"./app.40df414d.js";var i="/doc/assets/README-1650028663738.8ac8714f.png";const k={},r=t('<h1 id="kafka-\u5F00\u53D1\u5B9E\u6218" tabindex="-1"><a class="header-anchor" href="#kafka-\u5F00\u53D1\u5B9E\u6218" aria-hidden="true">#</a> Kafka \u5F00\u53D1\u5B9E\u6218</h1><h2 id="_1-\u6D88\u606F\u7684\u53D1\u9001\u4E0E\u63A5\u6536" tabindex="-1"><a class="header-anchor" href="#_1-\u6D88\u606F\u7684\u53D1\u9001\u4E0E\u63A5\u6536" aria-hidden="true">#</a> 1. \u6D88\u606F\u7684\u53D1\u9001\u4E0E\u63A5\u6536</h2><h3 id="_1-1-\u6D88\u606F\u53D1\u9001" tabindex="-1"><a class="header-anchor" href="#_1-1-\u6D88\u606F\u53D1\u9001" aria-hidden="true">#</a> 1.1 \u6D88\u606F\u53D1\u9001</h3><p><img src="'+i+'" alt="\u6D88\u606F\u53D1\u9001\u6D41\u7A0B\u793A\u610F\u56FE"></p><p>\u751F\u4EA7\u8005\u4E3B\u8981\u7684\u5BF9\u8C61\u6709: <code>KafkaProducer</code>\uFF0C<code>ProducerRecord</code>\u3002</p><p>\u5176\u4E2D <code>KafkaProducer</code> \u662F\u7528\u4E8E\u53D1\u9001\u6D88\u606F\u7684\u7C7B\uFF0C<code>ProducerRecord</code> \u7C7B\u7528\u4E8E\u5C01\u88C5 Kafka \u7684\u6D88\u606F\u3002</p><p><code>KafkaProducer</code> \u7684\u521B\u5EFA\u9700\u8981\u6307\u5B9A\u7684\u53C2\u6570\u548C\u542B\u4E49</p>',7),m=n("code",null,"bootstrap.servers",-1),b=p(),d=n("p",null,"\u914D\u7F6E\u751F\u4EA7\u8005\u5982\u4F55\u4E0E Broker \u5EFA\u7ACB\u8FDE\u63A5\u3002\u8BE5\u53C2\u6570\u8BBE\u7F6E\u7684\u662F\u521D\u59CB\u5316\u53C2\u6570\u3002\u5982\u679C\u751F\u4EA7\u8005\u9700\u8981\u8FDE\u63A5\u7684\u662F Kafka \u96C6\u7FA4\uFF0C\u5219\u8FD9\u91CC\u914D\u7F6E\u96C6\u7FA4\u4E2D\u51E0\u4E2A Broker \u7684\u5730\u5740\uFF0C\u800C\u4E0D\u662F\u5168\u90E8\u3002 \u5F53\u751F\u4EA7\u8005\u8FDE\u63A5\u4E0A\u6B64\u5904\u6307\u5B9A\u7684 Broker \u4E4B\u540E\uFF0C\u5728\u901A\u8FC7\u8BE5\u8FDE\u63A5\u53D1\u73B0\u96C6\u7FA4\u4E2D\u7684\u5176\u4ED6\u8282\u70B9\u3002",-1),g=n("code",null,"key.serializer",-1),f=p(),y=n("p",null,"\u8981\u53D1\u9001\u4FE1\u606F\u7684 key \u6570\u636E\u7684\u5E8F\u5217\u5316\u7C7B\u3002\u8BBE\u7F6E\u7684\u65F6\u5019\u53EF\u4EE5\u5199\u7C7B\u540D\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u8BE5\u7C7B\u7684 Class \u5BF9\u8C61\u3002",-1),v=n("code",null,"value.serializer",-1),q=p(),w=t(`<p>\u8981\u53D1\u9001\u6D88\u606F\u7684 value \u6570\u636E\u7684\u5E8F\u5217\u5316\u7C7B\u3002\u8BBE\u7F6E\u7684\u65F6\u5019\u53EF\u4EE5\u5199\u7C7B\u540D\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u8BE5\u7C7B\u7684 Class \u5BF9\u8C61\u3002</p><ul><li><code>acks</code></li></ul><p>\u9ED8\u8BA4\u503C: <code>all</code></p><p><code>acks=0</code>: \u751F\u4EA7\u8005\u4E0D\u7B49\u5F85 Broker \u5BF9\u6D88\u606F\u7684\u786E\u8BA4\uFF0C\u53EA\u8981\u5C06\u6D88\u606F\u653E\u5230\u7F13\u51B2\u533A\uFF0C\u5C31\u8BA4\u4E3A\u6D88\u606F\u5DF2\u7ECF\u53D1\u9001\u5B8C\u6210\u3002\u8BE5\u60C5\u5F62\u4E0D\u80FD\u4FDD\u8BC1 Broker \u662F\u5426\u771F\u7684\u6536\u5230\u4E86\u6D88\u606F\uFF0C<code>retries</code> \u914D\u7F6E\u4E5F\u4E0D\u4F1A\u751F\u6548\u3002\u53D1\u9001\u7684\u6D88\u606F\u7684\u8FD4\u56DE\u7684\u6D88\u606F\u504F\u79FB\u91CF\u6C38\u8FDC\u662F <code>-1</code>\u3002</p><p><code>acks=1</code>: \u8868\u793A\u6D88\u606F\u53EA\u9700\u8981\u5199\u5230\u4E3B\u5206\u533A\u5373\u53EF\uFF0C\u7136\u540E\u5C31\u54CD\u5E94\u5BA2\u6237\u7AEF\uFF0C\u800C\u4E0D\u7B49\u5F85\u526F\u672C\u5206\u533A\u7684\u786E\u8BA4\u3002\u5728\u8BE5\u60C5\u5F62\u4E0B\uFF0C\u5982\u679C\u4E3B\u5206\u533A\u6536\u5230\u6D88\u606F\u786E\u8BA4\u4E4B\u540E\u5C31\u5B95\u673A\u4E86\uFF0C\u800C\u526F\u672C\u5206\u533A\u8FD8\u6CA1\u6765\u5F97\u53CA\u540C\u6B65\u8BE5\u6D88\u606F\uFF0C\u5219\u8BE5\u6D88\u606F\u4E22\u5931\u3002</p><p><code>acks=all</code>: \u9996\u9886\u5206\u533A\u4F1A\u7B49\u5F85\u6240\u6709\u7684 ISR \u526F\u672C\u5206\u533A\u786E\u8BA4\u8BB0\u5F55\u3002\u8BE5\u5904\u7406\u4FDD\u8BC1\u4E86\u53EA\u8981\u6709\u4E00\u4E2A ISR \u526F\u672C\u5206\u533A\u5B58\u6D3B\uFF0C\u6D88\u606F\u5C31\u4E0D\u4F1A\u4E22\u5931\u3002<em>\u8FD9\u662F Kafka \u6700\u5F3A\u7684\u53EF\u9760\u6027\u4FDD\u8BC1\uFF0C\u7B49\u6548\u4E8E <code>acks=-1</code></em></p><ul><li><code>retries</code></li></ul><p><code>retries</code> \u91CD\u8BD5\u6B21\u6570</p><p>\u5F53\u6D88\u606F\u53D1\u9001\u51FA\u73B0\u9519\u8BEF\u7684\u65F6\u5019\uFF0C\u7CFB\u7EDF\u4F1A\u91CD\u53D1\u6D88\u606F\u3002</p><p>\u8DDF\u5BA2\u6237\u7AEF\u6536\u5230\u9519\u8BEF\u65F6\u91CD\u53D1\u4E00\u6837\u3002\u5982\u679C\u8BBE\u7F6E\u4E86\u91CD\u8BD5\uFF0C\u8FD8\u60F3\u4FDD\u8BC1\u6D88\u606F\u7684\u6709\u5E8F\u6027\uFF0C\u9700\u8981\u8BBE\u7F6E <code>MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION = 1</code>(\u7B49\u5F85\u786E\u8BA4\u7684\u8BF7\u6C42\u6570)\u3002 \u5426\u5219\u5728\u91CD\u8BD5\u6B64\u5931\u8D25\u6D88\u606F\u7684\u65F6\u5019\uFF0C\u5176\u4ED6\u7684\u6D88\u606F\u53EF\u80FD\u53D1\u9001\u6210\u529F\u4E86\u3002</p><blockquote><p>\u5176\u4ED6\u53C2\u6570\u53EF\u4EE5\u4ECE <code>org.apache.kafka.clients.producer.ProducerConfig</code> \u4E2D\u627E\u5230\u3002\u6211\u4EEC\u540E\u9762\u7684\u5185\u5BB9\u4F1A\u4ECB\u7ECD\u5230\u3002</p></blockquote><p>\u6D88\u8D39\u8005\u751F\u4EA7\u6D88\u606F\u540E\uFF0C\u9700\u8981 Broker \u7AEF\u7684\u786E\u8BA4\uFF0C\u53EF\u4EE5\u540C\u6B65\u786E\u8BA4\uFF0C\u4E5F\u53EF\u4EE5\u5F02\u6B65\u786E\u8BA4\u3002</p><p>\u540C\u6B65\u786E\u8BA4\u6548\u7387\u4F4E\uFF0C\u5F02\u6B65\u786E\u8BA4\u6548\u7387\u9AD8\uFF0C\u4F46\u662F\u9700\u8981\u8BBE\u7F6E\u56DE\u8C03\u5BF9\u8C61\u3002</p><hr><p><strong>\u6D4B\u8BD5\u6848\u4F8B</strong></p><p>\u751F\u4EA7\u8005</p><blockquote><p>\u540C\u6B65\u7B49\u5F85\u6D88\u606F\u786E\u8BA4</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyProducer01</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>

        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> configs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6307\u5B9A\u521D\u59CB\u8FDE\u63A5\u7528\u5230\u7684 Broker \u5730\u5740</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;bootstrap.servers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost:9092&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6307\u5B9A key \u7684\u5E8F\u5217\u5316\u7C7B</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key.serializer&quot;</span><span class="token punctuation">,</span> <span class="token class-name">IntegerSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6307\u5B9A value \u7684\u5E8F\u5217\u5316\u7C7B</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;value.serializer&quot;</span><span class="token punctuation">,</span> <span class="token class-name">StringSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// configs.put(&quot;acks&quot;, &quot;all&quot;);</span>
        <span class="token comment">// configs.put(&quot;reties&quot;, &quot;3&quot;);</span>

        <span class="token class-name">KafkaProducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaProducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>configs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7528\u6237\u81EA\u5B9A\u4E49\u7684\u6D88\u606F\u5934\u5B57\u6BB5</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RecordHeader</span><span class="token punctuation">(</span><span class="token string">&quot;biz.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;producer.demo&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ProducerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProducerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
                <span class="token string">&quot;topic_1&quot;</span><span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token string">&quot;hello zmn 0&quot;</span><span class="token punctuation">,</span>
                headers
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6D88\u606F\u540C\u6B65\u786E\u8BA4</span>
        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RecordMetadata</span><span class="token punctuation">&gt;</span></span> send <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RecordMetadata</span> recordMetadata <span class="token operator">=</span> send<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u4E3B\u9898\uFF1A&quot;</span> <span class="token operator">+</span> recordMetadata<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u7684\u5206\u533A\uFF1A&quot;</span> <span class="token operator">+</span> recordMetadata<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u504F\u79FB\u91CF\uFF1A&quot;</span> <span class="token operator">+</span> recordMetadata<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5173\u95ED\u751F\u4EA7\u8005</span>
        producer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u751F\u4EA7\u80052</p><blockquote><p>\u6D88\u606F\u5F02\u6B65\u786E\u8BA4</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyProducer02</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> configs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;bootstrap.servers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost:9092&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key.serializer&quot;</span><span class="token punctuation">,</span> <span class="token class-name">IntegerSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;value.serializer&quot;</span><span class="token punctuation">,</span> <span class="token class-name">StringSerializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">KafkaProducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaProducer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>configs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RecordHeader</span><span class="token punctuation">(</span><span class="token string">&quot;biz.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;producer.demo&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ProducerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProducerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;topic_1&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;hello zmn 0&quot;</span><span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6D88\u606F\u5F02\u6B65\u786E\u8BA4</span>
        producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> <span class="token punctuation">(</span>metadata<span class="token punctuation">,</span> exception<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>exception<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u4E3B\u9898\uFF1A&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u7684\u5206\u533A\uFF1A&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u7684\u504F\u79FB\u91CF\uFF1A&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u6D88\u606F\uFF1A&quot;</span> <span class="token operator">+</span> exception<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5173\u95ED\u751F\u4EA7\u8005</span>
        producer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="_1-2-\u6D88\u606F\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#_1-2-\u6D88\u606F\u6D88\u8D39" aria-hidden="true">#</a> 1.2 \u6D88\u606F\u6D88\u8D39</h3><p>Kafka \u4E0D\u652F\u6301\u6D88\u606F\u7684\u63A8\u9001\uFF0C\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0\u3002</p><p>Kafka \u91C7\u7528\u7684\u662F\u6D88\u606F\u7684\u62C9\u53D6(<code>poll</code>\u65B9\u6CD5)</p><blockquote><p><code>poll()</code> \u65B9\u6CD5\uFF0C\u4E0D\u662F <code>pull()</code>\u3002</p></blockquote><p>\u6D88\u8D39\u8005\u4E3B\u8981\u7684\u5BF9\u8C61\u6709\uFF1A<code>KafkaConsumer</code> \u7528\u4E8E\u6D88\u8D39\u6D88\u606F\u7684\u7C7B\u3002</p><p><code>KafKaConsumer</code> \u7684\u521B\u5EFA\u9700\u8981\u6307\u5B9A\u7684\u53C2\u6570\u548C\u542B\u4E49\uFF1A</p>`,27),h=n("code",null,"bootstrap.servers",-1),_=p(),S=n("p",null,"\u4E0E Kafka \u5EFA\u7ACB\u521D\u59CB\u8FDE\u63A5\u7684 Broker \u5730\u5740\u5217\u8868\u3002",-1),C=n("code",null,"key.deserializer",-1),I=p(),R=n("p",null,"Key \u7684\u53CD\u5E8F\u5217\u5316\u5668\u3002",-1),K=n("code",null,"value.deserializer",-1),x=p(),P=n("p",null,"Value \u7684\u53CD\u5E8F\u5217\u5316\u5668\u3002",-1),T=n("code",null,"group.id",-1),M=p(),z=t(`<p>\u6307\u5B9A\u6D88\u8D39\u7EC4 id, \u7528\u4E8E\u6807\u5FD7\u8BE5\u6D88\u8D39\u8005\u6240\u5C5E\u7684\u6D88\u8D39\u7EC4\u3002</p><ul><li><code>auto.offset.reset</code></li></ul><p>\u5F53 Kafka \u4E2D\u6CA1\u6709\u521D\u59CB\u504F\u79FB\u91CF\u6216\u5F53\u524D\u504F\u79FB\u91CF\u5728\u670D\u52A1\u5668\u4E2D\u4E0D\u5B58\u5728(\u5982\u6570\u636E\u88AB\u5220\u9664\u4E86)\uFF0C\u8BE5\u5982\u4F55\u5904\u7406\uFF1F</p><p><code>earliest</code>: \u81EA\u52A8\u91CD\u542F\u504F\u79FB\u91CF\u5230\u6700\u65E9\u7684\u504F\u79FB\u91CF</p><p><code>latest</code>: \u81EA\u52A8\u91CD\u7F6E\u504F\u79FB\u91CF\u4E3A\u6700\u65B0\u7684\u504F\u79FB\u91CF</p><p><code>none</code>: \u5982\u679C\u6D88\u8D39\u7EC4\u539F\u6765\u7684(previous)\u504F\u79FB\u91CF\u4E0D\u5B58\u5728\uFF0C\u5219\u5411\u6D88\u8D39\u8005\u629B\u5F02\u5E38</p><p><code>anything</code>: \u5411\u6D88\u8D39\u8005\u629B\u5F02\u5E38</p><hr><p><code>ConsumerConfig</code> \u7C7B\u4E2D\u5305\u542B\u4E86\u6240\u6709\u7684\u53EF\u4EE5\u7ED9 <code>KafkaConsumer</code> \u914D\u7F6E\u7684\u53C2\u6570\u3002</p><p><strong>\u6D4B\u8BD5\u6848\u4F8B</strong></p><p>\u6D88\u8D39\u8005</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConsumer01</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> configs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F7F\u7528\u5E38\u91CF\u4EE3\u66FF\u624B\u5199\u5B57\u7B26\u4E32</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConsumerConfig</span><span class="token punctuation">.</span>BOOTSTRAP_SERVERS_CONFIG<span class="token punctuation">,</span> <span class="token string">&quot;localhost:9092&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConsumerConfig</span><span class="token punctuation">.</span>KEY_DESERIALIZER_CLASS_CONFIG<span class="token punctuation">,</span> <span class="token class-name">IntegerDeserializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConsumerConfig</span><span class="token punctuation">.</span>VALUE_DESERIALIZER_CLASS_CONFIG<span class="token punctuation">,</span> <span class="token class-name">StringDeserializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConsumerConfig</span><span class="token punctuation">.</span>GROUP_ID_CONFIG<span class="token punctuation">,</span> <span class="token string">&quot;consumer_demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6D88\u8D39\u7EC4 ID ()</span>
        configs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ConsumerConfig</span><span class="token punctuation">.</span>AUTO_OFFSET_RESET_CONFIG<span class="token punctuation">,</span> <span class="token string">&quot;earliest&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u627E\u4E0D\u5230\u5F53\u524D\u6D88\u8D39\u8005\u989D\u6709\u6548\u504F\u79FB\u91CF\uFF0C\u5219\u81EA\u52A8\u91CD\u7F6E\u5230\u6700\u5F00\u59CB</span>

        <span class="token class-name">KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>configs<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5148\u8BA2\u9605\u518D\u6D88\u8D39</span>
        <span class="token comment">// \u8BA2\u9605\u6B63\u5219</span>
        <span class="token comment">// Pattern pattern = Pattern.compile(&quot;topic_[0-9]&quot;);</span>
        <span class="token comment">// consumer.subscribe(pattern);</span>
        <span class="token comment">// \u8BA2\u9605\u6307\u5B9A\u4E3B\u9898\u5217\u8868</span>
        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;topic_1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4ECE\u670D\u52A1\u7AEF\u62C9\u53D6\u6D88\u606F</span>
        <span class="token comment">// \u5982\u679C\u6CA1\u6709\u53EF\u4EE5\u6D88\u8D39\u7684\u6D88\u606F\uFF0C\u5219\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u653E\u5230 while \u5FAA\u73AF\u4E2D\uFF0C\u6BCF\u8FC7 3 \u79D2\u91CD\u65B0\u62C9\u53D6\u4E00\u6B21</span>
        <span class="token comment">// \u5982\u679C\u8FD8\u6CA1\u6709\u62C9\u53D6\u5230\uFF0C\u8FC7 3 \u79D2\u518D\u6B21\u62C9\u53D6\uFF0C\u9632\u6B62 while \u5FAA\u73AF\u592A\u5BC6\u96C6\u7684 poll \u8C03\u7528</span>
        <span class="token class-name">ConsumerRecords</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumerRecords <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">3_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6279\u91CF\u4ECE\u4E3B\u9898\u7684\u5206\u533A\u62C9\u53D6\u6D88\u606F</span>

        <span class="token comment">// \u83B7\u53D6\u6307\u5B9A\u4E3B\u9898\u7684\u6D88\u606F</span>
        <span class="token comment">// Iterable&lt;ConsumerRecord&lt;Integer, String&gt;&gt; records = consumerRecords.records(&quot;topic_1&quot;);</span>

        <span class="token comment">// \u904D\u5386\u672C\u6B21\u4ECE\u4E3B\u9898\u7684\u5206\u533A\u62C9\u53D6\u7684\u6279\u91CF\u6D88\u606F</span>
        consumerRecords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>record <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span>
                record<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        consumer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><blockquote><p>\u53EF\u4EE5\u5C06\u6D88\u606F\u6D88\u8D39\u90E8\u5206\u7684\u4EE3\u7801\u653E\u8FDB <code>while(true)</code> \u7684\u5FAA\u73AF\u5F53\u4E2D\u3002</p></blockquote><h2 id="_2-springboot-kafka" tabindex="-1"><a class="header-anchor" href="#_2-springboot-kafka" aria-hidden="true">#</a> 2. SpringBoot Kafka</h2><ol><li><code>pom.xml</code> \u6587\u4EF6\uFF0C\u5F15\u5165\u7684\u6838\u5FC3\u4F9D\u8D56</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="2"><li>application.properties</li></ol><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">kafka-02-springboot</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">18080</span>

<span class="token comment"># Kafka \u914D\u7F6E</span>
<span class="token key attr-name">spring.kafka.bootstrap-servers</span><span class="token punctuation">=</span><span class="token value attr-value">localhost:9092</span>

<span class="token comment"># producer \u914D\u7F6E</span>
<span class="token key attr-name">spring.kafka.producer.key-serializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.IntegerSerializer</span>
<span class="token key attr-name">spring.kafka.producer.value-serializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringSerializer</span>
<span class="token comment"># \u751F\u4EA7\u8005\u6BCF\u4E2A\u6279\u6B21\u6700\u591A\u653E\u591A\u5C11\u8BB0\u5F55</span>
<span class="token key attr-name">spring.kafka.producer.batch-size</span><span class="token punctuation">=</span><span class="token value attr-value">16384</span>
<span class="token comment"># \u751F\u4EA7\u8005\u7AEF\u603B\u7684\u53EF\u7528\u53D1\u9001\u7F13\u51B2\u533A\u5927\u5C0F (\u6B64\u5904\u8BBE\u7F6E\u4E3A 32 M)</span>
<span class="token key attr-name">spring.kafka.producer.buffer-memory</span><span class="token punctuation">=</span><span class="token value attr-value">33554432</span>

<span class="token comment"># consumer \u914D\u7F6E</span>
<span class="token key attr-name">spring.kafka.consumer.key-deserializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.IntegerDeserializer</span>
<span class="token key attr-name">spring.kafka.consumer.value-deserializer</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.kafka.common.serialization.StringDeserializer</span>
<span class="token key attr-name">spring.kafka.consumer.group-id</span><span class="token punctuation">=</span><span class="token value attr-value">springboot-consumer-02</span>
<span class="token comment"># \u5982\u679C\u5728 kafka \u4E2D\u627E\u4E0D\u5230\u5F53\u524D\u6D88\u8D39\u8005\u7684\u504F\u79FB\u91CF\uFF0C\u5219\u76F4\u63A5\u5C06\u504F\u79FB\u91CF\u91CD\u7F6E\u4E3A\u6700\u65E9\u7684</span>
<span class="token key attr-name">spring.kafka.consumer.auto-offset-reset</span><span class="token punctuation">=</span><span class="token value attr-value">earliest</span>
<span class="token comment"># \u6D88\u8D39\u8005\u7684\u504F\u79FB\u91CF\u662F\u81EA\u52A8\u63D0\u4EA4\u8FD8\u662F\u624B\u52A8\u63D0\u4EA4.(\u6B64\u5904\u4F7F\u7528\u81EA\u52A8\u63D0\u4EA4)</span>
<span class="token key attr-name">spring.kafka.consumer.enable-auto-commit</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token comment"># \u6D88\u8D39\u8005\u504F\u79FB\u91CF\u81EA\u52A8\u63D0\u4EA4\u95F4\u9694\u65F6\u95F4</span>
<span class="token key attr-name">spring.kafka.consumer.auto-commit-interval</span><span class="token punctuation">=</span><span class="token value attr-value">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,18),j={start:"3"},A=p("KafkaConfig.java "),E=t(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">NewTopic</span> <span class="token function">topic1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">NewTopic</span><span class="token punctuation">(</span><span class="token string">&quot;ntpc-01&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">NewTopic</span> <span class="token function">topic2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">NewTopic</span><span class="token punctuation">(</span><span class="token string">&quot;ntpc-02&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u81EA\u5B9A\u4E49 KafkaAdmin
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">KafkaAdmin</span> <span class="token function">kafkaAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">CommonClientConfigs</span><span class="token punctuation">.</span>BOOTSTRAP_SERVERS_CONFIG<span class="token punctuation">,</span> <span class="token string">&quot;localhost:9092&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KafkaAdmin</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u81EA\u5B9A\u4E49 KafkaTemplate
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">kafkaTemplate</span><span class="token punctuation">(</span><span class="token class-name">ProducerFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> producerFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8986\u76D6 ProducerFactory \u539F\u6709\u8BBE\u7F6E</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> configOverrides <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configOverrides<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ProducerConfig</span><span class="token punctuation">.</span>BATCH_SIZE_CONFIG<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>producerFactory<span class="token punctuation">,</span> configOverrides<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><ol start="4"><li>KafkaSyncProducerController.java</li></ol><blockquote><p>\u540C\u6B65\u53D1\u9001\u6D88\u606F</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncProducerController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> kafkaTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;send/sync/{message}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">ListenableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SendResult</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">TopicConstant</span><span class="token punctuation">.</span>KAFKA_TOPIC_SPRING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u540C\u6B65\u53D1\u9001\u6D88\u606F</span>
            <span class="token class-name">SendResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> sendResult <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RecordMetadata</span> metadata <span class="token operator">=</span> sendResult<span class="token punctuation">.</span><span class="token function">getRecordMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>metadata<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> <span class="token operator">|</span> <span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="5"><li>KafkaAsyncProducerController</li></ol><blockquote><p>\u5F02\u6B65\u53D1\u9001\u6D88\u606F</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncProducerController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> kafkaTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;send/async/{message}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListenableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SendResult</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">TopicConstant</span><span class="token punctuation">.</span>KAFKA_TOPIC_SPRING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u56DE\u8C03\u51FD\u6570\uFF0C\u5F02\u6B65\u7B49\u5F85 Broker \u7AEF\u8FD4\u56DE\u7ED3\u679C</span>
        future<span class="token punctuation">.</span><span class="token function">addCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ListenableFutureCallback</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SendResult</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFailure</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u9001\u6D88\u606F\u5931\u8D25\uFF1A&quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">SendResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">RecordMetadata</span> metadata <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getRecordMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u606F\u53D1\u9001\u6210\u529F\uFF01&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> metadata<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol start="6"><li>MyConsumer.java</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConsumer</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@KafkaListener</span><span class="token punctuation">(</span>topics <span class="token operator">=</span> <span class="token class-name">TopicConstant</span><span class="token punctuation">.</span>KAFKA_TOPIC_SPRING<span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">ConsumerRecord</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> record<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D88\u8D39\u8005\u6536\u5230\u7684\u6D88\u606F\uFF1A&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">partition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span>
                record<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> record<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,9);function O(F,B){const s=o("Badge");return c(),l(u,null,[r,n("ul",null,[n("li",null,[m,b,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),d,n("ul",null,[n("li",null,[g,f,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),y,n("ul",null,[n("li",null,[v,q,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),w,n("ul",null,[n("li",null,[h,_,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),S,n("ul",null,[n("li",null,[C,I,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),R,n("ul",null,[n("li",null,[K,x,a(s,{type:"warning",text:"\u5FC5\u987B",vertical:"top"})])]),P,n("ul",null,[n("li",null,[T,M,a(s,{type:"tip",text:"\u5E38\u7528",vertical:"top"})])]),z,n("ol",j,[n("li",null,[A,a(s,{type:"tips",text:"\u53EF\u9009",vertical:"top"})])]),E],64)}var H=e(k,[["render",O],["__file","index.html.vue"]]);export{H as default};
