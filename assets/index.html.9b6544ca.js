import{_ as p,r as t,o as e,a as o,b as n,d as c,F as l,e as s,c as u}from"./app.40df414d.js";var r="/doc/assets/README-1648709608586.e2319e54.png",i="/doc/assets/README-1648709704859.d6f98d36.png",k="/doc/assets/README-1648709732726.9ab4f29b.png",d="/doc/assets/README-1648709836341.46e7b44e.png",b="/doc/assets/README-1648710036263.bb927647.png",m="/doc/assets/README-1648775963878.cd598c5d.png",h="/doc/assets/README-1648710273076.c4e85c57.png",g="/doc/assets/README-1648710673741.1b16060c.png",D="/doc/assets/README-1648710695895.7a59a541.png",f="/doc/assets/README-1648780857573.896498bc.png",v="/doc/assets/README-1648711921567.a1320010.png",y="/doc/assets/README-1648712103089.e594e11e.png",S="/doc/assets/README-1648712191324.51a4f4e2.png",w="/doc/assets/README-1648712542133.2189892e.png",R="/doc/assets/README-1648712672009.37f698fd.png",x="/doc/assets/README-1648712712716.555b4e45.png",_="/doc/assets/README-1648793963757.a2405005.png",q="/doc/assets/README-1648794860042.f08960a1.png",M="/doc/assets/README-1648713236052.0b678477.png",E="/doc/assets/README-1648713313870.f0398dbc.png",A="/doc/assets/README-1648713511741.f30bb9ab.png",B="/doc/assets/README-1648713688586.4e6a5bf2.png",C="/doc/assets/README-1648713708710.0ca9de5b.png",N="/doc/assets/README-1648713731355.365f1f9a.png";const P={},I=n("h1",{id:"spark-core",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spark-core","aria-hidden":"true"},"#"),s(" Spark Core")],-1),T=n("h2",{id:"\u7B2C4\u8282-rdd\u7F16\u7A0B\u9AD8\u9636",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C4\u8282-rdd\u7F16\u7A0B\u9AD8\u9636","aria-hidden":"true"},"#"),s(" \u7B2C4\u8282 RDD\u7F16\u7A0B\u9AD8\u9636")],-1),H={href:"https://blog.csdn.net/chengh1993/article/details/114239397",target:"_blank",rel:"noopener noreferrer"},L=s("https://blog.csdn.net/chengh1993/article/details/114239397"),K=u(`<h3 id="_4-1-\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#_4-1-\u5E8F\u5217\u5316" aria-hidden="true">#</a> 4.1 \u5E8F\u5217\u5316</h3><p>\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D\u4F1A\u81EA\u5B9A\u4E49\u4E00\u4E9B\u5BF9RDD\u7684\u64CD\u4F5C\uFF0C\u6B64\u65F6\u9700\u8981\u6CE8\u610F\u7684\u662F:</p><p>\u521D\u59CB\u5316\u5DE5\u4F5C\u662F\u5728Driver\u7AEF\u8FDB\u884C\u7684\uFF0C\u5B9E\u9645\u8FD0\u884C\u7A0B\u5E8F\u662F\u5728Executor\u7AEF\u8FDB\u884C\u7684\uFF0C\u8FD9\u5C31\u6D89\u53CA\u5230\u4E86\u8FDB\u7A0B\u901A\u4FE1\uFF0C\u662F\u9700\u8981\u5E8F\u5217\u5316\u7684\u3002</p><blockquote><p>\u53EF\u4EE5\u7B80\u5355\u7684\u8BA4\u4E3A <code>SparkContext</code> \u4EE3\u8868Driver\u3002</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">class</span> MyClass1<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">val</span> num<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> x
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token keyword">class</span> MyClass2<span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> MyClass3<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">extends</span> Serializable <span class="token punctuation">{</span>
  <span class="token keyword">val</span> num<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> x
<span class="token punctuation">}</span>

<span class="token keyword">object</span> SerializableDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getCanonicalName<span class="token punctuation">.</span>init<span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> o1 <span class="token operator">=</span> <span class="token keyword">new</span> MyClass1<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token comment">// println(s&quot;o1.num = \${o1.num}&quot;)</span>

    <span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token comment">// \u65B9\u6CD5</span>
    <span class="token keyword">def</span> add1<span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">100</span>
    <span class="token comment">// \u51FD\u6570</span>
    <span class="token keyword">val</span> add2 <span class="token operator">=</span> add1 _

    <span class="token comment">// \u51FD\u6570\u3001\u65B9\u6CD5\u90FD\u5177\u5907\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u7684\u80FD\u529B</span>
    <span class="token comment">// rdd1.map(add1(_)).foreach(println)</span>
    <span class="token comment">// println(&quot;-----------------------&quot;)</span>
    <span class="token comment">// rdd1.map(add2(_)).foreach(println)</span>

    <span class="token keyword">val</span> object1 <span class="token operator">=</span> <span class="token keyword">new</span> MyClass1<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E0B\u9762\u7684\u4E0D\u80FD\u5E8F\u5217\u5316, \u56E0\u4E3Aobject1\u662F\u81EA\u5B9A\u4E49class</span>
    <span class="token comment">// rdd1.map(x =&gt; object1.num + x).foreach(println) // Task not serializable</span>

    <span class="token comment">// \u89E3\u51B3\u65B9\u6848\u4E00\uFF1A\u4F7F\u7528case class, scala \u63D0\u4F9B\u4E86\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u65B9\u6CD5</span>
    <span class="token keyword">val</span> object2 <span class="token operator">=</span> MyClass2<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    rdd1<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> object2<span class="token punctuation">.</span>num <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u89E3\u51B3\u65B9\u6848\u4E8C\uFF1AMyClass3 \u5B9E\u73B0 Serializable \u63A5\u53E3</span>
    <span class="token keyword">val</span> object3 <span class="token operator">=</span> <span class="token keyword">new</span> MyClass3<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    rdd1<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> object3<span class="token punctuation">.</span>num <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>
    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u89E3\u51B3\u65B9\u6848\u4E09: \u5EF6\u8FDF\u521B\u5EFA</span>
    <span class="token keyword">lazy</span> <span class="token keyword">val</span> object4 <span class="token operator">=</span> <span class="token keyword">new</span> MyClass1<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    rdd1<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> object4<span class="token punctuation">.</span>num <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>\u5907\u6CE8:</p><ul><li>\u5982\u679C\u5728\u65B9\u6CD5\u3001\u51FD\u6570\u7684\u5B9A\u4E49\u4E2D\u5F15\u7528\u4E86\u4E0D\u53EF\u5E8F\u5217\u5316\u7684\u5BF9\u8C61\uFF0C\u4E5F\u4F1A\u5BFC\u81F4\u4EFB\u52A1\u4E0D\u80FD\u5E8F\u5217\u5316</li><li>\u5EF6\u8FDF\u521B\u5EFA\u7684\u89E3\u51B3\u65B9\u6848\u8F83\u4E3A\u7B80\u5355\uFF0C\u9002\u7528\u6027\u5E7F</li></ul><h3 id="_4-2-rdd\u4F9D\u8D56\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#_4-2-rdd\u4F9D\u8D56\u5173\u7CFB" aria-hidden="true">#</a> 4.2 RDD\u4F9D\u8D56\u5173\u7CFB</h3><p>RDD\u53EA\u652F\u6301\u7C97\u7C92\u5EA6\u8F6C\u6362\uFF0C\u5373\u5728\u5927\u91CF\u8BB0\u5F55\u4E0A\u6267\u884C\u7684\u5355\u4E2A\u64CD\u4F5C\u3002\u5C06\u521B\u5EFARDD\u7684\u4E00\u7CFB\u5217Lineage(\u8840\u7EDF)\u8BB0\u5F55\u4E0B\u6765\uFF0C \u4EE5\u4FBF\u6062\u590D\u4E22\u5931\u7684\u5206\u533A\u3002</p><p>RDD\u7684Lineage\u4F1A\u8BB0\u5F55RDD\u7684\u5143\u6570\u636E\u4FE1\u606F\u548C\u8F6C\u6362\u884C\u4E3A\uFF0C\u5F53\u8BE5RDD\u7684\u90E8\u5206\u5206\u533A\u6570\u636E\u4E22\u5931\u65F6\uFF0C \u53EF\u6839\u636E\u8FD9\u4E9B\u4FE1\u606F\u6765\u91CD\u65B0\u8FD0\u7B97\u548C\u6062\u590D\u4E22\u5931\u7684\u6570\u636E\u5206\u533A\u3002</p><p><img src="`+r+'" alt="RDD\u4F9D\u8D56"></p><p>RDD\u548C\u5B83\u4F9D\u8D56\u7684\u7236RDD(s)\u7684\u5173\u7CFB\u6709\u4E24\u79CD\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u5373\u7A84\u4F9D\u8D56(narrow dependency)\u548C\u5BBD\u4F9D\u8D56(wide dependency)\u3002</p><p>\u4F9D\u8D56\u67092\u4E2A\u4F5C\u7528: \u4E00\u662F\u7528\u6765\u89E3\u51B3\u6570\u636E\u5BB9\u9519;\u4E8C\u662F\u7528\u6765\u5212\u5206stage\u3002</p><ul><li>\u7A84\u4F9D\u8D56: 1:1 \u6216 n:1</li><li>\u5BBD\u4F9D\u8D56: n:m; <em>\u610F\u5473\u7740\u6709shuffle</em></li></ul><blockquote><p>\u8981\u80FD\u591F\u51C6\u786E\u3001\u8FC5\u901F\u7684\u533A\u5206\u54EA\u4E9B\u7B97\u5B50\u662F\u5BBD\u4F9D\u8D56; (\u8BB0\u4F4F\u5BBD\u4F9D\u8D56\uFF0C\u5176\u4ED6\u90FD\u662F\u7A84\u4F9D\u8D56)</p></blockquote><blockquote><p>\u901F\u8BB0\u5FC3\u5F97\uFF1A\u5BBD\u4F9D\u8D56\u7684\u7B97\u5B50\u90FD\u5F88\u6709\u7279\u70B9\uFF0C\u4E3B\u8981\u6709\u4E24\u7C7B\uFF1A<code>join</code> \u7CFB\u5217, \u548C <code>xxByKey</code> \u7CFB\u5217</p></blockquote><p><img src="'+i+'" alt="\u7A84\u4F9D\u8D56\u548C\u5BBD\u4F9D\u8D56"></p><p><img src="'+k+'" alt="\u4F9D\u8D56\u5173\u7CFB"></p><blockquote><p>\u5BBD\u4F9D\u8D56\u53EA\u6709 <code>ShuffleDependency</code> \u4E00\u79CD\u5B9E\u73B0\uFF0C\u800C\u7A84\u4F9D\u8D56\u6709\u591A\u79CD\u5B9E\u73B0\u3002</p></blockquote><hr><p>DAG(Directed Acyclic Graph) \u6709\u5411\u65E0\u73AF\u56FE\u3002</p><p>\u539F\u59CB\u7684RDD\u901A\u8FC7\u4E00\u7CFB\u5217\u7684\u8F6C\u6362\u5C31\u5C31\u5F62\u6210\u4E86DAG\uFF0C\u6839\u636ERDD\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u7684\u4E0D\u540C\uFF0C\u5C06DAG\u5212\u5206\u6210\u4E0D\u540C\u7684Stage:</p><ul><li>\u5BF9\u4E8E\u7A84\u4F9D\u8D56\uFF0Cpartition \u7684\u8F6C\u6362\u5904\u7406\u5728Stage\u4E2D\u5B8C\u6210\u8BA1\u7B97</li><li>\u5BF9\u4E8E\u5BBD\u4F9D\u8D56\uFF0C\u7531\u4E8E\u6709Shuffle\u7684\u5B58\u5728\uFF0C\u53EA\u80FD\u5728 parent RDD\u5904\u7406\u5B8C\u6210\u540E\uFF0C\u624D\u80FD\u5F00\u59CB\u63A5\u4E0B\u6765\u7684\u8BA1\u7B97</li><li>\u5BBD\u4F9D\u8D56\u662F\u5212\u5206Stage\u7684\u4F9D\u636E</li></ul><p><img src="'+d+`" alt="DAG\u793A\u610F\u56FE"></p><p>RDD\u4EFB\u52A1\u5207\u5206\u4E2D\u95F4\u5206\u4E3A: Driver program\u3001Job\u3001Stage(TaskSet)\u548CTask</p><ul><li>Driver program: \u521D\u59CB\u5316\u4E00\u4E2ASparkContext\u5373\u751F\u6210\u4E00\u4E2ASpark\u5E94\u7528</li><li>Job: \u4E00\u4E2AAction\u7B97\u5B50\u5C31\u4F1A\u751F\u6210\u4E00\u4E2AJob</li><li>Stage: \u6839\u636ERDD\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u7684\u4E0D\u540C\u5C06Job\u5212\u5206\u6210\u4E0D\u540C\u7684Stage\uFF0C\u9047\u5230\u4E00\u4E2A\u5BBD\u4F9D\u8D56\u5219\u5212\u5206\u4E00\u4E2AStage</li><li>Task: Stage\u662F\u4E00\u4E2ATaskSet\uFF0C\u5C06Stage\u5212\u5206\u7684\u7ED3\u679C\u53D1\u9001\u5230\u4E0D\u540C\u7684 Executor \u6267\u884C\u5373\u4E3A\u4E00\u4E2ATask</li></ul><p>Task\u662FSpark\u4E2D\u4EFB\u52A1\u8C03\u5EA6\u7684\u6700\u5C0F\u5355\u4F4D; \u6BCF\u4E2AStage\u5305\u542B\u8BB8\u591ATask\uFF0C\u8FD9\u4E9BTask\u6267\u884C\u7684\u8BA1\u7B97\u903B\u8F91\u76F8\u540C\u7684\uFF0C \u8BA1\u7B97\u7684\u6570\u636E\u4E0D\u540C\u3002</p><blockquote><p>\u6CE8\u610F: <code>Driver program</code> -&gt; <code>Job</code> -&gt; <code>Stage</code> -&gt; <code>Task</code> \u6BCF\u4E00\u5C42\u90FD\u662F1\u5BF9n\u7684\u5173\u7CFB\u3002</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u7A84\u4F9D\u8D56</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">11</span> to <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span>
rdd3<span class="token punctuation">.</span>dependencies<span class="token punctuation">.</span>size
<span class="token comment">// res0: Int = 2</span>
 
rdd3<span class="token punctuation">.</span>dependencies
<span class="token comment">// res1: Seq[org.apache.spark.Dependency[_]] = ArrayBuffer(org.apache.spark.RangeDependency@52a3a9ef, org.apache.spark.RangeDependency@25d77b18)</span>
<span class="token comment">// \u4E24\u4E2A\u7A84\u4F9D\u8D56</span>
 
<span class="token comment">// \u6253\u5370rdd1\u7684\u6570\u636E</span>
rdd3<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
<span class="token comment">// res2: Array[_] = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)                           </span>
 
<span class="token comment">// \u6253\u5370rdd2\u7684\u6570\u636E</span>
rdd3<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
<span class="token comment">//res3: Array[_] = Array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20)</span>
 
<span class="token comment">// \u5BBD\u4F9D\u8D56</span>
<span class="token keyword">val</span> random <span class="token operator">=</span> <span class="token keyword">new</span> scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random
<span class="token keyword">val</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>idx <span class="token keyword">=&gt;</span> random<span class="token punctuation">.</span>nextInt<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
<span class="token comment">// rdd2: org.apache.spark.rdd.RDD[(Int, Int)] = ShuffledRDD[5] at reduceByKey at &lt;console&gt;:25</span>
 
<span class="token comment">// \u89C2\u5BDF\u4F9D\u8D56</span>
rdd2<span class="token punctuation">.</span>dependencies
<span class="token comment">//res4: Seq[org.apache.spark.Dependency[_]] = List(org.apache.spark.ShuffleDependency@4c14904e)</span>
 
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
<span class="token comment">// res5: Array[_] = Array((76,1), (54,1), (92,1), (...</span>
 
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
<span class="token comment">// res6: Array[_] = Array(76, 54, 92, 55, 8, 74, 86, ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h4 id="\u518D\u8C08wordcount" tabindex="-1"><a class="header-anchor" href="#\u518D\u8C08wordcount" aria-hidden="true">#</a> \u518D\u8C08WordCount</h4><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;/wcinput/wc.txt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// rdd1: org.apache.spark.rdd.RDD[String] = /wcinput/wc.txt MapPartitionsRDD[1] at textFile at &lt;console&gt;:24</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>_<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// rdd2: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[2] at flatMap at &lt;console&gt;:25</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// rdd3: org.apache.spark.rdd.RDD[(String, Int)] = MapPartitionsRDD[3] at map at &lt;console&gt;:25</span>
<span class="token keyword">val</span> rdd4 <span class="token operator">=</span> rdd3<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
<span class="token comment">// rdd4: org.apache.spark.rdd.RDD[(String, Int)] = ShuffledRDD[4] at reduceByKey at &lt;console&gt;:25</span>
<span class="token keyword">val</span> rdd5 <span class="token operator">=</span> rdd4<span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// rdd5: org.apache.spark.rdd.RDD[(String, Int)] = ShuffledRDD[7] at sortByKey at &lt;console&gt;:25</span>
rdd5<span class="token punctuation">.</span>count
<span class="token comment">// res0: Long = 6</span>


<span class="token comment">// \u67E5\u770BRDD\u7684\u8840\u7F18\u5173\u7CFB</span>
rdd1<span class="token punctuation">.</span>toDebugString
<span class="token comment">// res1: String =</span>
<span class="token comment">// (2) /wcinput/wc.txt MapPartitionsRDD[1] at textFile at &lt;console&gt;:24 []</span>
<span class="token comment">//  |  /wcinput/wc.txt HadoopRDD[0] at textFile at &lt;console&gt;:24 []</span>
 
rdd5<span class="token punctuation">.</span>toDebugString
<span class="token comment">// res2: String =</span>
<span class="token comment">// (2) ShuffledRDD[7] at sortByKey at &lt;console&gt;:25 []</span>
<span class="token comment">// +-(2) ShuffledRDD[4] at reduceByKey at &lt;console&gt;:25 []</span>
<span class="token comment">//    +-(2) MapPartitionsRDD[3] at map at &lt;console&gt;:25 []</span>
<span class="token comment">//       |  MapPartitionsRDD[2] at flatMap at &lt;console&gt;:25 []</span>
<span class="token comment">//       |  /wcinput/wc.txt MapPartitionsRDD[1] at textFile at &lt;console&gt;:24 []</span>
<span class="token comment">//       |  /wcinput/wc.txt HadoopRDD[0] at textFile at &lt;console&gt;:24 []</span>


<span class="token comment">// \u67E5\u770B\u4F9D\u8D56</span>
rdd1<span class="token punctuation">.</span>dependencies
<span class="token comment">// res3: Seq[org.apache.spark.Dependency[_]] = List(org.apache.spark.OneToOneDependency@55ec9270)</span>
rdd1<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd
<span class="token comment">// res4: org.apache.spark.rdd.RDD[_] = /wcinput/wc.txt HadoopRDD[0] at textFile at &lt;console&gt;:24</span>
 
rdd5<span class="token punctuation">.</span>dependencies
<span class="token comment">// res5: Seq[org.apache.spark.Dependency[_]] = List(org.apache.spark.ShuffleDependency@6c9de8a9)</span>
rdd5<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd
<span class="token comment">// res6: org.apache.spark.rdd.RDD[_] = ShuffledRDD[4] at reduceByKey at &lt;console&gt;:25</span>
 
<span class="token comment">// \u67E5\u770B\u6700\u4F73\u8BA1\u7B97\u7684\u4F18\u5148\u4F4D\u7F6E</span>
<span class="token keyword">val</span> hadoopRDD <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd
<span class="token comment">// hadoopRDD: org.apache.spark.rdd.RDD[_] = /wcinput/wc.txt HadoopRDD[0] at textFile at &lt;console&gt;:24</span>
hadoopRDD<span class="token punctuation">.</span>preferredLocations<span class="token punctuation">(</span>hadoopRDD<span class="token punctuation">.</span>partitions<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// res7: Seq[String] = ArraySeq(linux123, linux121, linux122)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u4F7F\u7528 hdfs \u547D\u4EE4\u68C0\u67E5\u6587\u4EF6\u60C5\u51B5</span>
hdfs <span class="token function">fsck</span> /wcinput/wc.txt -files -blocks -locations
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u95EE\u9898\uFF1A\u4E0A\u9762\u7684 <code>WordCount</code> \u4E2D\u4E00\u5171\u51E0\u4E2A <code>job</code>\uFF0C\u51E0\u4E2A <code>Stage</code>\uFF0C\u51E0\u4E2A <code>Task</code>\uFF1F</p><p><img src="`+b+'" alt="WordCount\u6267\u884C\u6D41\u7A0B"></p><p>\u672C\u4F8B\u4E2D\u6574\u4E2A\u8FC7\u7A0B\u5206\u4E3A1\u4E2Ajob\uFF0C3\u4E2AStage\uFF1B6\u4E2ATask\u3002</p><p><img src="'+m+'" alt="WorkCount\u6267\u884C\u8BE6\u60C5"></p><blockquote><p>\u4E3A\u4EC0\u4E48\u8FD9\u91CC\u663E\u793A\u67092\u4E2Ajob? \u53C2\u89C1RDD\u5206\u533A\u5668\u3002</p></blockquote><h3 id="_4-3-rdd\u6301\u4E45\u5316-\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#_4-3-rdd\u6301\u4E45\u5316-\u7F13\u5B58" aria-hidden="true">#</a> 4.3 RDD\u6301\u4E45\u5316/\u7F13\u5B58</h3><p><em>\u6D89\u53CA\u5230\u7684\u7B97\u5B50: <code>persist</code>\u3001<code>cache</code>\u3001<code>unpersist</code>; \u90FD\u662F Transformation</em></p><p>\u7F13\u5B58\u662F\u5C06\u8BA1\u7B97\u7ED3\u679C\u5199\u5165\u4E0D\u540C\u7684\u4ECB\u8D28\uFF0C\u7528\u6237\u5B9A\u4E49\u53EF\u5B9A\u4E49\u5B58\u50A8\u7EA7\u522B(\u5B58\u50A8\u7EA7\u522B\u5B9A\u4E49\u4E86\u7F13\u5B58\u5B58\u50A8\u7684\u4ECB\u8D28\uFF0C \u76EE\u524D\u652F\u6301\u5185\u5B58\u3001\u5806\u5916\u5185\u5B58\u3001\u78C1\u76D8);</p><p>\u901A\u8FC7\u7F13\u5B58\uFF0CSpark\u907F\u514D\u4E86RDD\u4E0A\u7684\u91CD\u590D\u8BA1\u7B97\uFF0C\u80FD\u591F\u6781\u5927\u5730\u63D0\u5347\u8BA1\u7B97\u901F\u5EA6;</p><p>RDD\u6301\u4E45\u5316\u6216\u7F13\u5B58\uFF0C\u662FSpark\u6700\u91CD\u8981\u7684\u7279\u5F81\u4E4B\u4E00\u3002\u53EF\u4EE5\u8BF4\uFF0C\u7F13\u5B58\u662FSpark\u6784\u5EFA\u8FED\u4EE3\u5F0F\u7B97\u6CD5\u548C\u5FEB\u901F\u4EA4\u4E92\u5F0F\u67E5\u8BE2\u7684\u5173\u952E\u56E0\u7D20;</p><p>Spark\u901F\u5EA6\u975E\u5E38\u5FEB\u7684\u539F\u56E0\u4E4B\u4E00\uFF0C\u5C31\u662F\u5728\u5185\u5B58\u4E2D\u6301\u4E45\u5316(\u6216\u7F13\u5B58)\u4E00\u4E2A\u6570\u636E\u96C6\u3002\u5F53\u6301\u4E45\u5316\u4E00\u4E2ARDD\u540E\uFF0C \u6BCF\u4E00\u4E2A\u8282\u70B9\u90FD\u5C06\u628A\u8BA1\u7B97\u7684\u5206\u7247\u7ED3\u679C\u4FDD\u5B58\u5728\u5185\u5B58\u4E2D\uFF0C\u5E76\u5728\u5BF9\u6B64\u6570\u636E\u96C6(\u6216\u8005\u884D\u751F\u51FA\u7684\u6570\u636E\u96C6)\u8FDB\u884C\u7684\u5176\u4ED6\u52A8\u4F5C(Action)\u4E2D\u91CD\u7528\u3002 \u8FD9\u4F7F\u5F97\u540E\u7EED\u7684\u52A8\u4F5C\u53D8\u5F97\u66F4\u52A0\u8FC5\u901F;</p><p>\u4F7F\u7528 <code>persist()</code> \u65B9\u6CD5\u5BF9\u4E00\u4E2ARDD\u6807\u8BB0\u4E3A\u6301\u4E45\u5316\u3002\u4E4B\u6240\u4EE5\u8BF4\u201C\u6807\u8BB0\u4E3A\u6301\u4E45\u5316\u201D\uFF0C\u662F\u56E0\u4E3A\u51FA\u73B0 <code>persist()</code> \u8BED\u53E5\u7684\u5730\u65B9\uFF0C \u5E76\u4E0D\u4F1A\u9A6C\u4E0A\u8BA1\u7B97\u751F\u6210RDD\u5E76\u628A\u5B83\u6301\u4E45\u5316\uFF0C\u800C\u662F\u8981\u7B49\u5230\u9047\u5230\u7B2C\u4E00\u4E2A\u884C\u52A8\u64CD\u4F5C\u89E6\u53D1\u771F\u6B63\u8BA1\u7B97\u4EE5\u540E\uFF0C\u624D\u4F1A\u628A\u8BA1\u7B97\u7ED3\u679C\u8FDB\u884C\u6301\u4E45\u5316;</p><p><img src="'+h+`" alt="RDD\u6301\u4E45\u5316"></p><p>\u901A\u8FC7 <code>persist()</code> \u6216 <code>cache()</code> \u65B9\u6CD5\u53EF\u4EE5\u6807\u8BB0\u4E00\u4E2A\u8981\u88AB\u6301\u4E45\u5316\u7684RDD\uFF0C\u6301\u4E45\u5316\u88AB\u89E6\u53D1\uFF0C RDD \u5C06\u4F1A\u88AB\u4FDD\u7559\u5728\u8BA1\u7B97\u8282\u70B9\u7684\u5185\u5B58\u4E2D\u5E76\u91CD\u7528;</p><p>\u4EC0\u4E48\u65F6\u5019\u7F13\u5B58\u6570\u636E\uFF0C\u9700\u8981\u5BF9\u7A7A\u95F4\u548C\u901F\u5EA6\u8FDB\u884C\u6743\u8861\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u591A\u4E2A\u52A8\u4F5C\u9700\u8981\u7528\u5230\u67D0\u4E2A RDD\uFF0C \u800C\u5B83\u7684\u8BA1\u7B97\u4EE3\u4EF7\u53C8\u5F88\u9AD8\uFF0C\u90A3\u4E48\u5C31\u5E94\u8BE5\u628A\u8FD9\u4E2A RDD \u7F13\u5B58\u8D77\u6765;</p><p><em>\u7F13\u5B58\u6709\u53EF\u80FD\u4E22\u5931\uFF0C\u6216\u8005\u5B58\u50A8\u4E8E\u5185\u5B58\u7684\u6570\u636E\u7531\u4E8E\u5185\u5B58\u4E0D\u8DB3\u800C\u88AB\u5220\u9664\u3002</em> RDD\u7684\u7F13\u5B58\u7684\u5BB9\u9519\u673A\u5236\u4FDD\u8BC1\u4E86 \u5373\u4F7F\u7F13\u5B58\u4E22\u5931\u4E5F\u80FD\u4FDD\u8BC1\u8BA1\u7B97\u7684\u6B63\u786E\u6267\u884C\u3002\u901A\u8FC7\u57FA\u4E8ERDD\u7684\u4E00\u7CFB\u5217\u7684\u8F6C\u6362\uFF0C\u4E22\u5931\u7684\u6570\u636E\u4F1A\u88AB\u91CD\u7B97\u3002 RDD\u7684\u5404\u4E2APartition\u662F\u76F8\u5BF9\u72EC\u7ACB\u7684\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8BA1\u7B97\u4E22\u5931\u7684\u90E8\u5206\u5373\u53EF\uFF0C\u5E76\u4E0D\u9700\u8981\u91CD\u7B97\u5168\u90E8Partition\u3002</p><hr><p><code>persist()</code> \u7684\u53C2\u6570\u53EF\u4EE5\u6307\u5B9A\u6301\u4E45\u5316\u7EA7\u522B\u53C2\u6570;</p><p>\u4F7F\u7528 <code>cache()</code> \u65B9\u6CD5\u65F6\uFF0C\u4F1A\u8C03\u7528 <code>persist(MEMORY_ONLY)</code>\uFF0C\u5373:</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code>cache<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> persist<span class="token punctuation">(</span>StorageLevel<span class="token punctuation">.</span>Memeory_ONLY<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>\u4E5F\u5C31\u662F\u8BF4 <code>cache()</code> \u4E0D\u8FC7\u662F <code>persist()</code> \u7684\u7B80\u5199\u3002</p></blockquote><p>\u4F7F\u7528 <code>unpersist()</code> \u65B9\u6CD5\u624B\u52A8\u5730\u628A\u6301\u4E45\u5316\u7684RDD\u4ECE\u7F13\u5B58\u4E2D\u79FB\u9664;</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Persist this RDD with the default storage level (\`MEMORY_ONLY\`).
 */</span>
<span class="token keyword">def</span> cache<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> JavaDoubleRDD <span class="token operator">=</span> fromRDD<span class="token punctuation">(</span>srdd<span class="token punctuation">.</span>cache<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/**
 * Set this RDD&#39;s storage level to persist its values across operations after the first time
 * it is computed. Can only be called once on each RDD.
 */</span>
<span class="token keyword">def</span> persist<span class="token punctuation">(</span>newLevel<span class="token operator">:</span> StorageLevel<span class="token punctuation">)</span><span class="token operator">:</span> JavaDoubleRDD <span class="token operator">=</span> fromRDD<span class="token punctuation">(</span>srdd<span class="token punctuation">.</span>persist<span class="token punctuation">(</span>newLevel<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+g+'" alt="\u7F13\u5B58\u7EA7\u522B1"></p><p><img src="'+D+`" alt="\u7F13\u5B58\u7EA7\u522B2"></p><table><thead><tr><th>\u5B58\u50A8\u7EA7\u522B</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>MEMORY_ONLY</td><td>\u5C06RDD \u4F5C\u4E3A\u53CD\u5E8F\u5217\u5316\u7684\u5BF9\u8C61\u5B58\u50A8JVM \u4E2D\u3002\u5982\u679C RDD\u4E0D\u80FD\u88AB\u5185\u5B58\u88C5\u4E0B\uFF0C\u4E00\u4E9B\u5206\u533A\u5C06\u4E0D\u4F1A\u88AB\u7F13\u5B58\uFF0C \u5E76\u4E14\u5728\u9700\u8981\u7684\u65F6\u5019\u88AB\u91CD\u65B0\u8BA1\u7B97\u3002 \u9ED8\u8BA4\u7684\u7F13\u5B58\u7EA7\u522B</td></tr><tr><td>MEMORY_AND_DISK</td><td>\u5C06RDD \u4F5C\u4E3A\u53CD\u5E8F\u5217\u5316\u7684\u7684\u5BF9\u8C61\u5B58\u50A8\u5728JVM \u4E2D\u3002\u5982 \u679CRDD\u4E0D\u80FD\u88AB\u4E0E\u5185\u5B58\u88C5\u4E0B\uFF0C\u8D85\u51FA\u7684\u5206\u533A\u5C06\u88AB\u4FDD\u5B58 \u5728\u786C\u76D8\u4E0A\uFF0C\u5E76\u4E14\u5728\u9700\u8981\u65F6\u88AB\u8BFB\u53D6</td></tr><tr><td>MEMORY_ONLY_SER</td><td>\u5C06RDD \u4F5C\u4E3A\u5E8F\u5217\u5316\u7684\u7684\u5BF9\u8C61\u8FDB\u884C\u5B58\u50A8(\u6BCF\u4E00\u5206\u533A \u4E00\u4E2A\u5B57\u8282\u6570\u7EC4)\u3002 \u901A\u5E38\u6765\u8BF4\uFF0C\u8FD9\u6BD4\u5C06\u5BF9\u8C61\u53CD\u5E8F\u5217 \u5316\u7684\u7A7A\u95F4\u5229\u7528\u7387\u66F4\u9AD8\uFF0C\u8BFB\u53D6\u65F6\u4F1A\u6BD4\u8F83\u5360\u7528CPU</td></tr><tr><td>MEMORY_AND_DISK_SER</td><td>\u4E0EMEMORY_ONLY_SER \u76F8\u4F3C\uFF0C\u4F46\u662F\u628A\u8D85\u51FA\u5185\u5B58\u7684 \u5206\u533A\u5C06\u5B58\u50A8\u5728\u786C\u76D8\u4E0A\u800C\u4E0D\u662F\u5728\u6BCF\u6B21\u9700\u8981\u7684\u65F6\u5019\u91CD \u65B0\u8BA1\u7B97</td></tr><tr><td>DISK_ONLY</td><td>\u53EA\u5C06RDD \u5206\u533A\u5B58\u50A8\u5728\u786C\u76D8\u4E0A</td></tr><tr><td>DISK_ONLY_2\u7B49\u5E262\u7684</td><td>\u4E0E\u4E0A\u8FF0\u7684\u5B58\u50A8\u7EA7\u522B\u4E00\u6837\uFF0C\u4F46\u662F\u5C06\u6BCF\u4E00\u4E2A\u5206\u533A\u90FD\u590D\u5236\u5230\u96C6\u7FA4\u7684\u4E24\u4E2A\u7ED3\u70B9\u4E0A</td></tr></tbody></table><blockquote><p><code>cache RDD</code> \u4EE5\u5206\u533A\u4E3A\u5355\u4F4D; \u7A0B\u5E8F\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u7CFB\u7EDF\u4F1A\u6E05\u7406 <code>cache</code> \u6570\u636E;</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> list <span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token string">&quot;Hadoop&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Spark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Hive&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>list<span class="token punctuation">)</span>
 
<span class="token comment">// \u8C03\u7528persist(MEMORY_ONLY)</span>
<span class="token comment">// \u4F46\u8BED\u53E5\u6267\u884C\u5230\u8FD9\u91CC\uFF0C\u5E76\u4E0D\u4F1A\u7F13\u5B58rdd\uFF0C\u56E0\u4E3A\u8FD9\u65F6rdd\u8FD8\u6CA1\u6709\u88AB\u8BA1\u7B97\u751F\u6210</span>
rdd<span class="token punctuation">.</span>cache<span class="token punctuation">(</span><span class="token punctuation">)</span>
 
<span class="token comment">// \u7B2C\u4E00\u6B21Action\u64CD\u4F5C\uFF0C\u89E6\u53D1\u4E00\u6B21\u771F\u6B63\u4ECE\u5934\u5230\u5C3E\u7684\u8BA1\u7B97</span>
<span class="token comment">// \u8FD9\u65F6\u624D\u4F1A\u6267\u884C\u4E0A\u9762\u7684rdd.cache()\uFF0C\u5C06rdd\u653E\u5230\u7F13\u5B58\u4E2D</span>
rdd<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
 
<span class="token comment">// \u7B2C\u4E8C\u6B21Action\u64CD\u4F5C\uFF0C\u4E0D\u9700\u8981\u89E6\u53D1\u4ECE\u5934\u5230\u5C3E\u7684\u8BA1\u7B97</span>
<span class="token comment">// \u53EA\u9700\u8981\u91CD\u590D\u4F7F\u7528\u4E0A\u9762\u7F13\u5B58\u4E2D\u7684rdd</span>
rdd<span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="`+f+`" alt="RDD\u7F13\u5B58"></p><blockquote><p>\u88AB\u7F13\u5B58\u7684RDD\u5728DAG\u56FE\u4E2D\u6709\u4E00\u4E2A\u7EFF\u8272\u7684\u5706\u70B9\u3002</p></blockquote><h3 id="_4-4-rdd\u5BB9\u9519\u673A\u5236checkpoint" tabindex="-1"><a class="header-anchor" href="#_4-4-rdd\u5BB9\u9519\u673A\u5236checkpoint" aria-hidden="true">#</a> 4.4 RDD\u5BB9\u9519\u673A\u5236Checkpoint</h3><p><em>\u6D89\u53CA\u5230\u7684\u7B97\u5B50: <code>checkpoint</code> ; \u4E5F\u662F Transformation</em></p><p>Spark\u4E2D\u5BF9\u4E8E\u6570\u636E\u7684\u4FDD\u5B58\u9664\u4E86\u6301\u4E45\u5316\u64CD\u4F5C\u4E4B\u5916\uFF0C\u8FD8\u63D0\u4F9B\u4E86\u68C0\u67E5\u70B9\u7684\u673A\u5236;</p><p><em>\u68C0\u67E5\u70B9\u672C\u8D28\u662F\u901A\u8FC7\u5C06RDD\u5199\u5165\u9AD8\u53EF\u9760\u7684\u78C1\u76D8\uFF0C\u4E3B\u8981\u76EE\u7684\u662F\u4E3A\u4E86\u5BB9\u9519\u3002</em></p><p>\u68C0\u67E5\u70B9\u901A\u8FC7\u5C06\u6570\u636E\u5199\u5165\u5230HDFS\u6587\u4EF6\u7CFB\u7EDF\u5B9E\u73B0\u4E86RDD\u7684\u68C0\u67E5\u70B9\u529F\u80FD\u3002</p><p>Lineage\u8FC7\u957F\u4F1A\u9020\u6210\u5BB9\u9519\u6210\u672C\u8FC7\u9AD8\uFF0C\u8FD9\u6837\u5C31\u4E0D\u5982\u5728\u4E2D\u95F4\u9636\u6BB5\u505A\u68C0\u67E5\u70B9\u5BB9\u9519\uFF0C\u5982\u679C\u4E4B\u540E\u6709\u8282\u70B9\u51FA\u73B0\u95EE\u9898\u800C\u4E22\u5931\u5206\u533A\uFF0C \u4ECE\u505A\u68C0\u67E5\u70B9\u7684RDD\u5F00\u59CB\u91CD\u505A Lineage\uFF0C\u5C31\u4F1A\u51CF\u5C11\u5F00\u9500\u3002</p><p><code>cache</code> \u548C <code>checkpoint</code> \u662F\u6709\u663E\u8457\u533A\u522B\u7684\uFF0C\u7F13\u5B58\u628A RDD \u8BA1\u7B97\u51FA\u6765\u7136\u540E\u653E\u5728\u5185\u5B58\u4E2D\uFF0C\u4F46\u662F RDD \u7684\u4F9D\u8D56\u94FE\u4E0D\u80FD\u4E22\u6389\uFF0C \u5F53\u67D0\u4E2A\u70B9\u67D0\u4E2A <code>executor</code> \u5B95\u4E86\uFF0C\u4E0A\u9762 <code>cache</code> \u7684RDD\u5C31\u4F1A\u4E22\u6389\uFF0C\u9700\u8981\u901A\u8FC7\u4F9D\u8D56\u94FE\u91CD\u653E\u8BA1\u7B97\u3002 \u4E0D\u540C\u7684\u662F\uFF0C<code>checkpoint</code> \u662F\u628A RDD \u4FDD\u5B58\u5728 HDFS \u4E2D\uFF0C\u662F\u591A\u526F\u672C\u53EF\u9760\u5B58\u50A8\uFF0C\u6B64\u65F6\u4F9D\u8D56\u94FE\u53EF\u4EE5\u4E22\u6389\uFF0C\u6240\u4EE5\u65A9\u65AD\u4E86\u4F9D\u8D56\u94FE\u3002</p><p>\u4EE5\u4E0B\u573A\u666F\u9002\u5408\u4F7F\u7528\u68C0\u67E5\u70B9\u673A\u5236:</p><ol><li>DAG\u4E2D\u7684Lineage\u8FC7\u957F\uFF0C\u5982\u679C\u91CD\u7B97\uFF0C\u5219\u5F00\u9500\u592A\u5927</li><li>\u5728\u5BBD\u4F9D\u8D56\u4E0A\u505A Checkpoint \u83B7\u5F97\u7684\u6536\u76CA\u66F4\u5927</li></ol><blockquote><p>\u4E0Ecache\u7C7B\u4F3C checkpoint \u4E5F\u662F lazy \u7684\u3002</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100000</span><span class="token punctuation">)</span>
 
<span class="token comment">// \u8BBE\u7F6E\u68C0\u67E5\u70B9\u76EE\u5F55, \u6700\u597D\u8BBE\u7F6E\u5230 hdfs \u4E0A</span>
sc<span class="token punctuation">.</span>setCheckpointDir<span class="token punctuation">(</span><span class="token string">&quot;/tmp/checkpoint&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
rdd2<span class="token punctuation">.</span>checkpoint
 
<span class="token comment">// checkpoint \u4E5F\u662F lazy \u64CD\u4F5C</span>
rdd2<span class="token punctuation">.</span>isCheckpointed <span class="token comment">// false</span>
 
<span class="token comment">// checkpoint\u4E4B\u524D\u7684rdd\u4F9D\u8D56\u5173\u7CFB</span>
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
 
<span class="token comment">// \u6267\u884C\u4E00\u6B21action\uFF0C\u89E6\u53D1checkpoint\u7684\u6267\u884C (\u6B64\u65F6\u627E\u4E0D\u5230 rdd1 \u7684\u4F9D\u8D56\u4E86\uFF0C\u4F9D\u8D56\u5173\u7CFB\u5DF2\u7ECF\u88AB\u65A9\u65AD\u4E86)</span>
rdd2<span class="token punctuation">.</span>count
rdd2<span class="token punctuation">.</span>isCheckpointed <span class="token comment">// true</span>
 
<span class="token comment">// \u518D\u6B21\u67E5\u770BRDD\u7684\u4F9D\u8D56\u5173\u7CFB\u3002\u53EF\u4EE5\u770B\u5230checkpoint\u540E\uFF0CRDD\u7684lineage\u88AB\u622A\u65AD\uFF0C\u53D8\u6210\u4ECEcheckpointRDD\u5F00\u59CB</span>
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd
rdd2<span class="token punctuation">.</span>dependencies<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rdd<span class="token punctuation">.</span>collect
 
<span class="token comment">//\u67E5\u770BRDD\u6240\u4F9D\u8D56\u7684checkpoint\u6587\u4EF6</span>
rdd2<span class="token punctuation">.</span>getCheckpointFile
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><blockquote><p>\u5907\u6CE8: checkpoint \u7684\u6587\u4EF6\u4F5C\u4E1A\u6267\u884C\u5B8C\u6BD5\u540E\u4E0D\u4F1A\u88AB\u5220\u9664</p></blockquote><h3 id="_4-5-rdd\u7684\u5206\u533A" tabindex="-1"><a class="header-anchor" href="#_4-5-rdd\u7684\u5206\u533A" aria-hidden="true">#</a> 4.5 RDD\u7684\u5206\u533A</h3><blockquote><p><code>spark.default.parallelism</code>: (\u9ED8\u8BA4\u7684\u5E76\u53D1\u6570) = 2</p></blockquote><p>\u5F53\u914D\u7F6E\u6587\u4EF6 <code>spark-default.conf</code> \u4E2D\u6CA1\u6709\u663E\u793A\u5730\u914D\u7F6E\uFF0C\u5219\u6309\u7167\u5982\u4E0B\u89C4\u5219\u53D6\u503C:</p><p>1\u3001\u672C\u5730\u6A21\u5F0F(\u53D6\u51B3\u4E8E\u6838\u6570)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>spark-shell --master local<span class="token punctuation">[</span>N<span class="token punctuation">]</span> spark.default.parallelism <span class="token operator">=</span> N 
spark-shell --master <span class="token builtin class-name">local</span> spark.default.parallelism <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>2\u3001\u4F2A\u5206\u5E03\u5F0F(x\u4E3A\u672C\u673A\u4E0A\u542F\u52A8\u7684executor\u6570\uFF0Cy\u4E3A\u6BCF\u4E2Aexecutor\u4F7F\u7528\u7684core\u6570\uFF0Cz\u4E3A\u6BCF\u4E2Aexecutor\u4F7F\u7528\u7684\u5185\u5B58)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>spark-shell --master local-cluster<span class="token punctuation">[</span>x,y,z<span class="token punctuation">]</span> spark.default.parallelism <span class="token operator">=</span> x * y
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>3\u3001\u5206\u5E03\u5F0F\u6A21\u5F0F(yarn &amp; standalone)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>spark.default.parallelism <span class="token operator">=</span> max<span class="token punctuation">(</span>\u5E94\u7528\u7A0B\u5E8F\u6301\u6709executor\u7684core\u603B\u6570, <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>total number of cores on all executor nodes or 2, whichever is larger</p></blockquote><p>\u7ECF\u8FC7\u4E0A\u9762\u7684\u89C4\u5219\uFF0C\u5C31\u80FD\u786E\u5B9A\u4E86 <code>spark.default.parallelism</code> \u7684\u9ED8\u8BA4\u503C(\u914D\u7F6E\u6587\u4EF6 <code>spark-default.conf</code> \u4E2D\u6CA1\u6709\u663E\u793A\u7684\u914D\u7F6E\u3002\u5982\u679C\u914D\u7F6E\u4E86\uFF0C\u5219 <code>spark.default.parallelism = \u914D\u7F6E\u7684\u503C</code>)</p><hr><p><code>SparkContext</code> \u521D\u59CB\u5316\u65F6\uFF0C\u540C\u65F6\u4F1A\u751F\u6210\u4E24\u4E2A\u53C2\u6570\uFF0C\u7531\u4E0A\u9762\u5F97\u5230\u7684 <code>spark.default.parallelism</code> \u63A8\u5BFC\u51FA\u8FD9\u4E24\u4E2A\u53C2\u6570\u7684\u503C</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u4ECE\u96C6\u5408\u4E2D\u521B\u5EFARDD\u7684\u5206\u533A\u6570</span>
sc<span class="token punctuation">.</span>defaultParallelism <span class="token operator">=</span> spark<span class="token punctuation">.</span>default<span class="token punctuation">.</span>parallelism
<span class="token comment">// \u4ECE\u6587\u4EF6\u4E2D\u521B\u5EFARDD\u7684\u5206\u533A\u6570</span>
sc<span class="token punctuation">.</span>defaultMinPartitions <span class="token operator">=</span> min<span class="token punctuation">(</span>spark<span class="token punctuation">.</span>default<span class="token punctuation">.</span>parallelism<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4EE5\u4E0A\u53C2\u6570\u786E\u5B9A\u540E\uFF0C\u5C31\u53EF\u4EE5\u8BA1\u7B97 RDD \u7684\u5206\u533A\u6570\u4E86\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Default min number of partitions for Hadoop RDDs when not given by user
 * Notice that we use math.min so the &quot;defaultMinPartitions&quot; cannot be higher than 2.
 * The reasons for this are discussed in https://github.com/mesos/spark/pull/718
 */</span>
<span class="token keyword">def</span> defaultMinPartitions<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> math<span class="token punctuation">.</span>min<span class="token punctuation">(</span>defaultParallelism<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h4 id="\u521B\u5EFA-rdd-\u7684\u51E0\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-rdd-\u7684\u51E0\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA RDD \u7684\u51E0\u79CD\u65B9\u5F0F</h4><p>1\u3001\u901A\u8FC7\u96C6\u5408\u521B\u5EFA</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u5982\u679C\u521B\u5EFARDD\u65F6\u6CA1\u6709\u6307\u5B9A\u5206\u533A\u6570\uFF0C\u5219rdd\u7684\u5206\u533A\u6570 = sc.defaultParallelism </span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>getNumPartitions
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>\u5907\u6CE8: \u7B80\u5355\u7684\u8BF4RDD\u5206\u533A\u6570\u7B49\u4E8Ecores\u603B\u6570</p></blockquote><p>2\u3001\u901A\u8FC7textFile\u521B\u5EFA</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/start0721.big.log&quot;</span><span class="token punctuation">)</span> 
rdd<span class="token punctuation">.</span>getNumPartitions
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u5206\u533A\u6570:</p><ul><li>\u672C\u5730\u6587\u4EF6\u3002<code>rdd\u7684\u5206\u533A\u6570 = max(\u672C\u5730\u6587\u4EF6\u5206\u7247\u6570, sc.defaultMinPartitions)</code></li><li>HDFS\u6587\u4EF6\u3002 <code>rdd\u7684\u5206\u533A\u6570 = max(hdfs\u6587\u4EF6 block \u6570, sc.defaultMinPartitions)</code></li></ul><p>\u5907\u6CE8:</p><ul><li><code>\u672C\u5730\u6587\u4EF6\u5206\u7247\u6570 = \u672C\u5730\u6587\u4EF6\u5927\u5C0F / 32M</code></li><li>\u5982\u679C\u8BFB\u53D6\u7684\u662FHDFS\u6587\u4EF6\uFF0C\u540C\u65F6\u6307\u5B9A\u7684\u5206\u533A\u6570 &lt; hdfs\u6587\u4EF6\u7684block\u6570\uFF0C\u6307\u5B9A\u7684\u6570\u4E0D\u751F\u6548\u3002</li></ul><h3 id="_4-6-rdd\u5206\u533A\u5668" tabindex="-1"><a class="header-anchor" href="#_4-6-rdd\u5206\u533A\u5668" aria-hidden="true">#</a> 4.6 RDD\u5206\u533A\u5668</h3><blockquote><p>Optionally, a Partitioner for key-value RDDs (e.g. to say that the RDD is hash-partitioned)</p></blockquote><p><em>\u53EA\u6709Key-Value\u7C7B\u578B\u7684RDD\u624D\u53EF\u80FD\u6709\u5206\u533A\u5668\uFF0CValue\u7C7B\u578B\u7684RDD\u5206\u533A\u5668\u7684\u503C\u662F None\u3002</em></p><hr><p>\u4EE5\u4E0BRDD\u5206\u522B\u662F\u5426\u6709\u5206\u533A\u5668\uFF0C\u662F\u4EC0\u4E48\u7C7B\u578B\u7684\u5206\u533A\u5668?</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;/wcinput/wc.txt&quot;</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>partitioner <span class="token comment">// None</span>

<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>_<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd2<span class="token punctuation">.</span>partitioner <span class="token comment">// None</span>

<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd3<span class="token punctuation">.</span>partitioner <span class="token comment">// None</span>

<span class="token keyword">val</span> rdd4 <span class="token operator">=</span> rdd3<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
rdd4<span class="token punctuation">.</span>partitioner <span class="token comment">// Some(org.apache.spark.HashPartitioner@2)</span>

<span class="token keyword">val</span> rdd5 <span class="token operator">=</span> rdd4<span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
rdd5<span class="token punctuation">.</span>partitioner <span class="token comment">// Some(org.apache.spark.RangePartitioner@e44e9b0e)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><hr><p><strong>\u5206\u533A\u5668\u7684\u4F5C\u7528\u53CA\u5206\u7C7B</strong></p><p>\u5728 <code>PairRDD(key,value)</code> \u4E2D\uFF0C\u5F88\u591A\u64CD\u4F5C\u90FD\u662F\u57FA\u4E8Ekey\u7684\uFF0C\u7CFB\u7EDF\u4F1A\u6309\u7167key\u5BF9\u6570\u636E\u8FDB\u884C\u91CD\u7EC4\uFF0C\u5982 <code>groupByKey</code>;</p><p>\u6570\u636E\u91CD\u7EC4\u9700\u8981\u89C4\u5219\uFF0C\u6700\u5E38\u89C1\u7684\u5C31\u662F\u57FA\u4E8E Hash \u7684\u5206\u533A\uFF0C\u6B64\u5916\u8FD8\u6709\u4E00\u79CD\u590D\u6742\u7684\u57FA\u4E8E\u62BD\u6837 Range \u5206\u533A\u65B9\u6CD5;</p><p><img src="`+v+`" alt="\u57FA\u4E8E\u62BD\u6837\u7684\u5206\u533A"></p><h4 id="hashpartitioner" tabindex="-1"><a class="header-anchor" href="#hashpartitioner" aria-hidden="true">#</a> HashPartitioner</h4><p>\u6700\u7B80\u5355\u3001\u6700\u5E38\u7528\uFF0C\u4E5F\u662F\u9ED8\u8BA4\u63D0\u4F9B\u7684\u5206\u533A\u5668\u3002</p><p>\u5BF9\u4E8E\u7ED9\u5B9A\u7684key\uFF0C\u8BA1\u7B97\u5176hashCode\uFF0C\u5E76\u9664\u4EE5\u5206\u533A\u7684\u4E2A\u6570\u53D6\u4F59\uFF0C\u5982\u679C\u4F59\u6570\u5C0F\u4E8E0\uFF0C\u5219\u7528 <code>\u4F59\u6570+\u5206\u533A\u7684\u4E2A\u6570</code>\uFF0C \u6700\u540E\u8FD4\u56DE\u7684\u503C\u5C31\u662F\u8FD9\u4E2Akey\u6240\u5C5E\u7684\u5206\u533AID\u3002\u8BE5\u5206\u533A\u65B9\u6CD5\u53EF\u4EE5\u4FDD\u8BC1key\u76F8\u540C\u7684\u6570\u636E\u51FA\u73B0\u5728\u540C\u4E00\u4E2A\u5206\u533A\u4E2D\u3002</p><p>\u7528\u6237\u53EF\u901A\u8FC7 <code>partitionBy</code> \u4E3B\u52A8\u4F7F\u7528\u5206\u533A\u5668\uFF0C\u901A\u8FC7 <code>partitions</code> \u53C2\u6570\u6307\u5B9A\u60F3\u8981\u5206\u533A\u7684\u6570\u91CF\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 6</span>

<span class="token comment">// \u4EC5\u4EC5\u662F\u5C06\u6570\u636E\u5927\u81F4\u5E73\u5747\u5206\u6210\u4E86\u82E5\u5E72\u4EFD; rdd\u5E76\u6CA1\u6709\u5206\u533A\u5668</span>
rdd1<span class="token punctuation">.</span>glom<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> println<span class="token punctuation">(</span>x<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>partitioner <span class="token comment">// None</span>

<span class="token comment">// \u4E3B\u52A8\u4F7F\u7528 HashPartitioner</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>partitionBy<span class="token punctuation">(</span><span class="token keyword">new</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>HashPartitioner<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd2<span class="token punctuation">.</span>glom<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> println<span class="token punctuation">(</span>x<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E3B\u52A8\u4F7F\u7528 HashPartitioner</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>partitionBy<span class="token punctuation">(</span><span class="token keyword">new</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>spark<span class="token punctuation">.</span>RangePartitioner<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> rdd1<span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd3<span class="token punctuation">.</span>glom<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> println<span class="token punctuation">(</span>x<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>\u5927\u591A\u6570\u65F6\u5019\u6211\u4EEC\u90FD\u662F\u88AB\u52A8\u4F7F\u7528\u7684\u5206\u533A\u5668\u3002</p></blockquote><p>Spark\u7684\u5F88\u591A\u7B97\u5B50\u90FD\u53EF\u4EE5\u8BBE\u7F6E HashPartitioner \u7684\u503C</p><p><img src="`+y+'" alt="\u4FEE\u6539Partitioner\u7684\u7B97\u5B50"></p><h4 id="rangepartitioner" tabindex="-1"><a class="header-anchor" href="#rangepartitioner" aria-hidden="true">#</a> RangePartitioner</h4><p>\u7B80\u5355\u7684\u8BF4\u5C31\u662F\u5C06\u4E00\u5B9A\u8303\u56F4\u5185\u7684\u6570\u6620\u5C04\u5230\u67D0\u4E00\u4E2A\u5206\u533A\u5185\u3002</p><p>\u5728\u5B9E\u73B0\u4E2D\uFF0C\u5206\u754C\u7684\u7B97\u6CD5\u5C24\u4E3A\u91CD\u8981\uFF0C\u7528\u5230\u4E86\u6C34\u5858\u62BD\u6837\u7B97\u6CD5\u3002</p><p><code>sortByKey</code> \u4F1A\u4F7F\u7528 RangePartitioner\u3002</p><p><img src="'+S+`" alt="sortByKey\u793A\u610F\u56FE"></p><p>\u73B0\u5728\u7684\u95EE\u9898: \u5728\u6267\u884C\u5206\u533A\u4E4B\u524D\u5176\u5B9E\u5E76\u4E0D\u77E5\u9053\u6570\u636E\u7684\u5206\u5E03\u60C5\u51B5\uFF0C\u5982\u679C\u60F3\u77E5\u9053\u6570\u636E\u5206\u533A\u5C31\u9700\u8981\u5BF9\u6570\u636E\u8FDB\u884C\u91C7\u6837;</p><p>Spark \u4E2D RangePartitioner \u5728\u5BF9\u6570\u636E\u91C7\u6837\u7684\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u4E86<strong>\u6C34\u5858\u91C7\u6837\u7B97\u6CD5</strong>\u3002</p><blockquote><p>\u6C34\u5858\u91C7\u6837: \u4ECE\u5305\u542Bn\u4E2A\u9879\u76EE\u7684\u96C6\u5408S\u4E2D\u9009\u53D6k\u4E2A\u6837\u672C\uFF0C\u5176\u4E2Dn\u4E3A\u4E00\u5F88\u5927\u6216\u672A\u77E5\u7684\u6570\u91CF\uFF0C\u5C24\u5176\u9002\u7528\u4E8E\u4E0D\u80FD\u628A\u6240\u6709n\u4E2A\u9879\u76EE\u90FD\u5B58\u653E\u5230\u4E3B\u5185\u5B58\u7684\u60C5\u51B5;</p></blockquote><p>\u5728\u91C7\u6837\u7684\u8FC7\u7A0B\u4E2D\u6267\u884C\u4E86 <code>collect()</code> \u64CD\u4F5C\uFF0C\u5F15\u53D1\u4E86Action\u64CD\u4F5C\u3002</p><blockquote><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u975E\u5E38\u4E25\u683C\u6765\u8BB2\uFF0C\u5E76\u4E0D\u662F\u6240\u6709\u7684 Transformation \u90FD\u4E0D\u4F1A\u89E6\u53D1 Action\u3002</p></blockquote><h4 id="\u81EA\u5B9A\u4E49\u5206\u533A\u5668" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u5206\u533A\u5668" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u5206\u533A\u5668</h4><p>Spark\u5141\u8BB8\u7528\u6237\u901A\u8FC7\u81EA\u5B9A\u4E49\u7684Partitioner\u5BF9\u8C61\uFF0C\u7075\u6D3B\u7684\u6765\u63A7\u5236RDD\u7684\u5206\u533A\u65B9\u5F0F\u3002</p><p>\u5B9E\u73B0\u81EA\u5B9A\u4E49\u5206\u533A\u5668\u6309\u4EE5\u4E0B\u89C4\u5219\u5206\u533A:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5206\u533A0 &lt; 100
100 &lt;= \u5206\u533A1 &lt; 200 
200 &lt;= \u5206\u533A2 &lt; 300 
300 &lt;= \u5206\u533A3 &lt; 400 
... ...
900 &lt;= \u5206\u533A9 &lt; 1000
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">class</span> MyPartitioner<span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">extends</span> Partitioner<span class="token punctuation">{</span>
  <span class="token comment">// \u6709\u591A\u5C11\u4E2A\u5206\u533A\u6570</span>
  <span class="token keyword">override</span> <span class="token keyword">def</span> numPartitions<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    n
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7ED9\u5B9A key\uFF0C\u5982\u4F55\u5206\u533A</span>
  <span class="token keyword">override</span> <span class="token keyword">def</span> getPartition<span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">Any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> k<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> key<span class="token punctuation">.</span>toString<span class="token punctuation">.</span>toInt
    k <span class="token operator">/</span> <span class="token number">100</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">object</span> UserDefinePartitioner <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4E1A\u52A1\u903B\u8F91</span>
    <span class="token keyword">val</span> random<span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">=</span> scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random
    <span class="token keyword">val</span> arr<span class="token operator">:</span> immutable<span class="token punctuation">.</span>IndexedSeq<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token keyword">=&gt;</span> random<span class="token punctuation">.</span>nextInt<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> rdd1<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    rdd1<span class="token punctuation">.</span>glom<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> println<span class="token punctuation">(</span>x<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>

    println<span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> rdd2<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>partitionBy<span class="token punctuation">(</span><span class="token keyword">new</span> MyPartitioner<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    rdd2<span class="token punctuation">.</span>glom<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> println<span class="token punctuation">(</span>x<span class="token punctuation">.</span>toBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h3 id="_4-7-\u5E7F\u64AD\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_4-7-\u5E7F\u64AD\u53D8\u91CF" aria-hidden="true">#</a> 4.7 \u5E7F\u64AD\u53D8\u91CF</h3><p>\u6709\u65F6\u5019\u9700\u8981\u5728\u591A\u4E2A\u4EFB\u52A1\u4E4B\u95F4\u5171\u4EAB\u53D8\u91CF\uFF0C\u6216\u8005\u5728\u4EFB\u52A1(Task)\u548CDriver Program\u4E4B\u95F4<em>\u5171\u4EAB\u53D8\u91CF</em>\u3002 \u4E3A\u4E86\u6EE1\u8DB3\u8FD9\u79CD\u9700\u6C42\uFF0CSpark\u63D0\u4F9B\u4E86\u4E24\u79CD\u7C7B\u578B\u7684\u53D8\u91CF:</p><ul><li>\u5E7F\u64AD\u53D8\u91CF(broadcast variables)</li><li>\u7D2F\u52A0\u5668(accumulators)</li></ul><p><strong>\u5E7F\u64AD\u53D8\u91CF\u3001\u7D2F\u52A0\u5668\u4E3B\u8981\u4F5C\u7528\u662F\u4E3A\u4E86\u4F18\u5316Spark\u7A0B\u5E8F</strong>\u3002</p><p>\u5E7F\u64AD\u53D8\u91CF\u5C06\u53D8\u91CF\u5728\u8282\u70B9\u7684 Executor \u4E4B\u95F4\u8FDB\u884C\u5171\u4EAB(\u7531Driver\u5E7F\u64AD\u51FA\u53BB);</p><p>\u5E7F\u64AD\u53D8\u91CF\u7528\u6765\u9AD8\u6548\u5206\u53D1\u8F83\u5927\u7684\u5BF9\u8C61\u3002\u5411\u6240\u6709\u5DE5\u4F5C\u8282\u70B9(Executor)\u53D1\u9001\u4E00\u4E2A\u8F83\u5927\u7684\u53EA\u8BFB\u503C\uFF0C\u4EE5\u4F9B\u4E00\u4E2A\u6216\u591A\u4E2A\u64CD\u4F5C\u4F7F\u7528\u3002</p><p>\u4F7F\u7528\u5E7F\u64AD\u53D8\u91CF\u7684\u8FC7\u7A0B\u5982\u4E0B:</p><ul><li><p>\u5BF9\u4E00\u4E2A\u7C7B\u578B T \u7684\u5BF9\u8C61\u8C03\u7528 <code>SparkContext.broadcast</code> \u521B\u5EFA\u51FA\u4E00\u4E2A <code>Broadcast[T]</code> \u5BF9\u8C61\u3002 \u4EFB\u4F55\u53EF\u5E8F\u5217\u5316\u7684\u7C7B\u578B\u90FD\u53EF\u4EE5\u8FD9\u4E48\u5B9E\u73B0(\u5728 Driver \u7AEF)</p></li><li><p>\u901A\u8FC7 <code>value</code> \u5C5E\u6027\u8BBF\u95EE\u8BE5\u5BF9\u8C61\u7684\u503C(\u5728 Executor \u4E2D)</p></li><li><p>\u53D8\u91CF\u503C\u4F1A\u88AB\u53D1\u5230\u5404\u4E2A Executor \u4E00\u6B21\uFF0C\u4F5C\u4E3A\u53EA\u8BFB\u503C\u5904\u7406\u3002</p></li></ul><p><img src="`+w+'" alt="\u5E7F\u64AD\u53D8\u91CF\u793A\u610F\u56FE"></p><p>\u5E7F\u64AD\u53D8\u91CF\u7684\u4F18\u5316\uFF1A</p><ol><li>\u6574\u4E2A Executor \u5171\u4EAB\u4E00\u4EFD</li><li>\u4F20\u8F93\u7684\u65F6\u5019\u8981\u505A\u538B\u7F29 (\u6CE8\u610F\u9700\u8981\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316)</li><li>\u4F7F\u7528 BT \u4F20\u8F93\u534F\u8BAE</li></ol><blockquote><p>BT \u4F20\u8F93\u534F\u8BAE\uFF1A\u7B80\u5355\u8BB2\u4E3B\u8981\u6709\u4E24\u70B9\uFF0C\u4E00\u662F\u4F1A\u5C06\u6570\u636E\u6309\u5757\u5207\u5206\uFF0C\u4E8C\u662F\u5E76\u4E0D\u662F\u6240\u6709\u7684\u6570\u636E\u5757\u90FD\u627E Driver \u8981\u3002</p></blockquote><p>\u5E7F\u64AD\u53D8\u91CF\u7684\u76F8\u5173\u53C2\u6570</p><table><thead><tr><th>\u53C2\u6570</th><th>\u542B\u4E49</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td>spark.broadcast.blockSize</td><td>\u5BF9\u5E7F\u64AD\u53D8\u91CF\u5206\u5757\u7684\u5757\u5927\u5C0F</td><td>4m</td></tr><tr><td>spark.broadcast.checksum</td><td>\u6570\u636E\u68C0\u9A8C</td><td>true</td></tr><tr><td>spark.broadcast.compress</td><td>\u662F\u5426\u538B\u7F29</td><td>true</td></tr></tbody></table><h4 id="\u5E7F\u64AD\u53D8\u91CF\u7684\u8FD0\u7528-map-side-join" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u64AD\u53D8\u91CF\u7684\u8FD0\u7528-map-side-join" aria-hidden="true">#</a> \u5E7F\u64AD\u53D8\u91CF\u7684\u8FD0\u7528(Map Side Join)</h4><p>\u666E\u901A\u7684Join\u64CD\u4F5C</p><p><img src="'+R+'" alt="\u666E\u901A\u7684Join\u64CD\u4F5C"></p><p>Map Side Join</p><p><img src="'+x+`" alt="MapSideJoin"></p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> JoinDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getCanonicalName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    <span class="token comment">// \u8BBE\u7F6E\u672C\u5730\u6587\u4EF6\u5207\u5206\u5927\u5C0F(\u672C\u5730\u6587\u4EF6\u9ED8\u8BA4\u5207\u5757\u5927\u5C0F 32m)</span>
    sc<span class="token punctuation">.</span>hadoopConfiguration<span class="token punctuation">.</span>setLong<span class="token punctuation">(</span><span class="token string">&quot;fs.local.block.size&quot;</span><span class="token punctuation">,</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span>

    <span class="token comment">// map task\uFF1A\u6570\u636E\u51C6\u5907 (\u6B64\u5904\u5C06\u914D\u7F6E\u6587\u4EF6\u66F4\u540D\u4E3A core-site.xml.bak \u8BA9\u5176\u5931\u6548\uFF0C\u4ECE\u800C\u8BFB\u672C\u5730\u6587\u4EF6)</span>
    <span class="token keyword">val</span> productRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/product_info.txt&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
        <span class="token keyword">val</span> fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

    <span class="token keyword">val</span> orderRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/orderinfo.txt&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
        <span class="token keyword">val</span> fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

    <span class="token comment">// join\u6709shuffle\u64CD\u4F5C</span>
    <span class="token keyword">val</span> resultRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> productRDD<span class="token punctuation">.</span>join<span class="token punctuation">(</span>orderRDD<span class="token punctuation">)</span>

    println<span class="token punctuation">(</span>resultRDD<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    Thread<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span>

    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><img src="`+_+`" alt="Join\u6267\u884C"></p><p>\u6267\u884C\u65F6\u95F421s\uFF0Cshuffle read 450M (CPU: i7-8750H)</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> MapSideJoin <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getCanonicalName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    <span class="token comment">// \u8BBE\u7F6E\u672C\u5730\u6587\u4EF6\u5207\u5206\u5927\u5C0F</span>
    sc<span class="token punctuation">.</span>hadoopConfiguration<span class="token punctuation">.</span>setLong<span class="token punctuation">(</span><span class="token string">&quot;fs.local.block.size&quot;</span><span class="token punctuation">,</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span>

    <span class="token comment">// map task\uFF1A\u6570\u636E\u51C6\u5907</span>
    <span class="token keyword">val</span> productMap<span class="token operator">:</span> collection<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/product_info.txt&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
        <span class="token keyword">val</span> fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">.</span>collectAsMap<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5E7F\u64AD\u5546\u54C1\u4FE1\u606F</span>
    <span class="token keyword">val</span> productBC<span class="token operator">:</span> Broadcast<span class="token punctuation">[</span>collection<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>broadcast<span class="token punctuation">(</span>productMap<span class="token punctuation">)</span>

    <span class="token keyword">val</span> orderRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/orderinfo.txt&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
        <span class="token keyword">val</span> fields <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

    <span class="token comment">// \u5B8C\u6210 map side join \u64CD\u4F5C</span>
    <span class="token comment">// RDD[(String, (String, String))]: (pid, (productInfo, orderInfo))</span>
    <span class="token keyword">val</span> resultRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> orderRDD<span class="token punctuation">.</span>map <span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span>pid<span class="token punctuation">,</span> orderInfo<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span>
      <span class="token keyword">val</span> prodMap<span class="token operator">:</span> collection<span class="token punctuation">.</span>Map<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> productBC<span class="token punctuation">.</span>value
      <span class="token keyword">val</span> productInfo<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> prodMap<span class="token punctuation">.</span>getOrElse<span class="token punctuation">(</span>pid<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>pid<span class="token punctuation">,</span> <span class="token punctuation">(</span>productInfo<span class="token punctuation">,</span> orderInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    println<span class="token punctuation">(</span>resultRDD<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    Thread<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span>

    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u6267\u884C\u65F6\u95F45s\uFF0C\u6CA1\u6709shuffle (CPU: i7-8750H)</p><p><img src="`+q+`" alt="Map\u7AEFJoin"></p><h3 id="_4-8-\u7D2F\u52A0\u5668" tabindex="-1"><a class="header-anchor" href="#_4-8-\u7D2F\u52A0\u5668" aria-hidden="true">#</a> 4.8 \u7D2F\u52A0\u5668</h3><p>\u7D2F\u52A0\u5668\u7684\u4F5C\u7528: \u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u53D8\u91CF\u5728\u4E0D\u540C\u7684 Executor \u7AEF\u80FD\u4FDD\u6301\u72B6\u6001\u7684\u7D2F\u52A0;</p><p>\u7D2F\u8BA1\u5668\u5728 Driver \u7AEF\u5B9A\u4E49\u3001\u8BFB\u53D6; \u5728 Executor \u4E2D\u5B8C\u6210\u7D2F\u52A0;</p><p>\u7D2F\u52A0\u5668\u4E5F\u662F lazy \u7684\uFF0C\u9700\u8981 Action \u89E6\u53D1; Action\u89E6\u53D1\u4E00\u6B21\uFF0C\u6267\u884C\u4E00\u6B21\uFF0C\u89E6\u53D1\u591A\u6B21\uFF0C\u6267\u884C\u591A\u6B21;</p><p>\u7D2F\u52A0\u5668\u4E00\u4E2A\u6BD4\u8F83\u7ECF\u5178\u7684\u5E94\u7528\u573A\u666F\u662F\u7528\u6765\u5728 Spark Streaming \u5E94\u7528\u4E2D\u8BB0\u5F55\u67D0\u4E9B\u4E8B\u4EF6\u7684\u6570\u91CF;</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> data <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Seq<span class="token punctuation">(</span><span class="token string">&quot;hadoop map reduce&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;spark mllib&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token comment">// \u65B9\u5F0F1</span>
<span class="token keyword">val</span> count1 <span class="token operator">=</span> data<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>line <span class="token keyword">=&gt;</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>word <span class="token keyword">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reduce<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
println<span class="token punctuation">(</span>count1<span class="token punctuation">)</span>

<span class="token comment">// \u65B9\u5F0F2\u3002\u9519\u8BEF\u7684\u65B9\u5F0F, \u4E0B\u9762\u7684\u6253\u5370\u7684\u662Fdriver\u7AEF\u7684acc \u4ECD\u7136\u662F0</span>
<span class="token keyword">var</span> acc <span class="token operator">=</span> <span class="token number">0</span>
data<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>line <span class="token keyword">=&gt;</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>word <span class="token keyword">=&gt;</span> acc <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span>
println<span class="token punctuation">(</span>acc<span class="token punctuation">)</span>
 
<span class="token comment">// \u5728Driver\u4E2D\u5B9A\u4E49\u53D8\u91CF\uFF0C\u6BCF\u4E2A\u8FD0\u884C\u7684Task\u4F1A\u5F97\u5230\u8FD9\u4E9B\u53D8\u91CF\u7684\u4E00\u4EFD\u65B0\u7684\u526F\u672C\uFF0C</span>
<span class="token comment">// \u4F46\u5728Task\u4E2D\u66F4\u65B0\u8FD9\u4E9B\u526F\u672C\u7684\u503C\u4E0D\u4F1A\u5F71\u54CDDriver\u4E2D\u5BF9\u5E94\u53D8\u91CF\u7684\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Spark\u5185\u7F6E\u4E86\u4E09\u79CD\u7C7B\u578B\u7684\u7D2F\u52A0\u5668\uFF0C\u5206\u522B\u662F:</p><ul><li><code>LongAccumulator</code> \u7528\u6765\u7D2F\u52A0\u6574\u6570\u578B</li><li><code>DoubleAccumulator</code> \u7528\u6765\u7D2F\u52A0\u6D6E\u70B9\u578B</li><li><code>CollectionAccumulator</code> \u7528\u6765\u7D2F\u52A0\u96C6\u5408\u5143\u7D20</li></ul><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> data <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token string">&quot;hadoop spark hive hbase java scala hello world spark scala java hive&quot;</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 
<span class="token keyword">val</span> acc1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>longAccumulator<span class="token punctuation">(</span><span class="token string">&quot;totalNum1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> acc2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>doubleAccumulator<span class="token punctuation">(</span><span class="token string">&quot;totalNum2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> acc3 <span class="token operator">=</span> sc<span class="token punctuation">.</span>collectionAccumulator<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">&quot;allWords&quot;</span><span class="token punctuation">)</span>
 
<span class="token comment">// \u56E0\u4E3Acount\u548Ccollect\u89E6\u53D1\u4E86\u4E24\u6B21 Action, \u4E0B\u9762\u7684\u7EDF\u8BA1\u4F1A\u6267\u884C\u4E24\u6B21</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> data<span class="token punctuation">.</span>map <span class="token punctuation">{</span> word <span class="token keyword">=&gt;</span>
    acc1<span class="token punctuation">.</span>add<span class="token punctuation">(</span>word<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    acc2<span class="token punctuation">.</span>add<span class="token punctuation">(</span>word<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    acc3<span class="token punctuation">.</span>add<span class="token punctuation">(</span>word<span class="token punctuation">)</span>
    word
<span class="token punctuation">}</span>
 
rdd<span class="token punctuation">.</span>count
rdd<span class="token punctuation">.</span>collect
 
println<span class="token punctuation">(</span>acc1<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
println<span class="token punctuation">(</span>acc2<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
println<span class="token punctuation">(</span>acc3<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p>\u8981\u975E\u5E38\u6CE8\u610F\uFF0C\u4E00\u4E0D\u5C0F\u5FC3\u5C31\u5BB9\u6613\u6267\u884C\u4E24\u6B21 Action\uFF0C\u4ECE\u800C\u8BA9\u7D2F\u52A0\u7684\u7ED3\u679C\u51FA\u4E4E\u6211\u4EEC\u7684\u610F\u6599\u3002</p></blockquote><h3 id="_4-9-topn\u7684\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_4-9-topn\u7684\u4F18\u5316" aria-hidden="true">#</a> 4.9 TopN\u7684\u4F18\u5316</h3><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> TopN <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> N <span class="token operator">=</span> <span class="token number">9</span>

    <span class="token comment">// \u751F\u6210\u6570\u636E</span>
    <span class="token keyword">val</span> random <span class="token operator">=</span> scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random
    <span class="token keyword">val</span> scores<span class="token operator">:</span> immutable<span class="token punctuation">.</span>IndexedSeq<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">.</span>flatMap <span class="token punctuation">{</span> idx <span class="token keyword">=&gt;</span>
      <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">{</span> _ <span class="token keyword">=&gt;</span>
        <span class="token string-interpolation"><span class="token id function">f</span><span class="token string">&quot;group</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">idx</span></span><span class="token string">%2d,</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">random<span class="token punctuation">.</span>nextInt<span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// scores.foreach(println)</span>

    <span class="token keyword">val</span> scoreRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>scores<span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
      <span class="token keyword">val</span> fields<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fields<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toInt<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    scoreRDD<span class="token punctuation">.</span>cache<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// TopN \u7684\u5B9E\u73B0</span>
    <span class="token comment">// groupByKey \u7684\u5B9E\u73B0\uFF1A\u9700\u8981\u5C06\u6BCF\u4E2A\u5206\u533A\u7684\u6BCF\u4E2A Group \u7684\u5168\u90E8\u6570\u636E\u505A Shuffle</span>
    scoreRDD<span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>buf <span class="token keyword">=&gt;</span> buf<span class="token punctuation">.</span>toList<span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>takeRight<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">.</span>reverse<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    println<span class="token punctuation">(</span><span class="token string">&quot;-------------------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// TopN \u7684\u4F18\u5316</span>
    scoreRDD<span class="token punctuation">.</span>aggregateByKey<span class="token punctuation">(</span>List<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>lst<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>lst <span class="token operator">:</span><span class="token operator">+</span> score<span class="token punctuation">)</span><span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>takeRight<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5206\u533A\u5185\u53D6 TopN</span>
      <span class="token punctuation">(</span>lst1<span class="token punctuation">,</span> lst2<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>lst1 <span class="token operator">++</span> lst2<span class="token punctuation">)</span><span class="token punctuation">.</span>sorted<span class="token punctuation">.</span>takeRight<span class="token punctuation">(</span>N<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>buf <span class="token keyword">=&gt;</span> buf<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span>ascending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><blockquote><p>\u4F7F\u7528 <code>aggregateByKey</code> \u66FF\u6362 <code>groupByKey</code>, \u6838\u5FC3\u601D\u60F3\u5C31\u662F\uFF1A\u5982\u679C Shuffle \u4E0D\u53EF\u907F\u514D\uFF0C \u53EF\u4EE5\u51CF\u5C11 Shuffle \u7684\u6570\u636E\u91CF\u6765\u63D0\u9AD8\u6027\u80FD\u3002</p></blockquote><h2 id="\u7B2C5\u8282-spark\u539F\u7406\u521D\u63A2" tabindex="-1"><a class="header-anchor" href="#\u7B2C5\u8282-spark\u539F\u7406\u521D\u63A2" aria-hidden="true">#</a> \u7B2C5\u8282 Spark\u539F\u7406\u521D\u63A2</h2><h3 id="_5-1-standalone\u6A21\u5F0F\u4F5C\u4E1A\u63D0\u4EA4" tabindex="-1"><a class="header-anchor" href="#_5-1-standalone\u6A21\u5F0F\u4F5C\u4E1A\u63D0\u4EA4" aria-hidden="true">#</a> 5.1 Standalone\u6A21\u5F0F\u4F5C\u4E1A\u63D0\u4EA4</h3><p>Standalone \u6A21\u5F0F\u4E0B\u6709\u56DB\u4E2A\u91CD\u8981\u7EC4\u6210\u90E8\u5206\uFF0C\u5206\u522B\u662F:</p><ul><li>Driver: \u7528\u6237\u7F16\u5199\u7684 Spark \u5E94\u7528\u7A0B\u5E8F\u5C31\u8FD0\u884C\u5728 Driver \u4E0A\uFF0C\u7531Driver \u8FDB\u7A0B\u6267\u884C</li><li>Master: \u4E3B\u8981\u8D1F\u8D23\u8D44\u6E90\u7684\u8C03\u5EA6\u548C\u5206\u914D\uFF0C\u5E76\u8FDB\u884C\u96C6\u7FA4\u7684\u76D1\u63A7\u7B49\u804C\u8D23</li><li>Worker: Worker \u8FD0\u884C\u5728\u96C6\u7FA4\u4E2D\u7684\u4E00\u53F0\u670D\u52A1\u5668\u4E0A\u3002\u8D1F\u8D23\u7BA1\u7406\u8BE5\u8282\u70B9\u4E0A\u7684\u8D44\u6E90\uFF0C\u8D1F\u8D23\u542F\u52A8\u542F\u52A8\u8282\u70B9\u4E0A\u7684 Executor</li><li>Executor: \u4E00\u4E2A Worker \u4E0A\u53EF\u4EE5\u8FD0\u884C\u591A\u4E2A Executor\uFF0CExecutor\u901A\u8FC7\u542F\u52A8\u591A\u4E2A\u7EBF\u7A0B(task)\u5BF9 RDD \u7684\u5206\u533A\u8FDB\u884C\u5E76\u884C\u8BA1\u7B97</li></ul><p>SparkContext \u4E2D\u7684\u4E09\u5927\u7EC4\u4EF6:</p><ul><li>DAGScheduler: \u8D1F\u8D23\u5C06DAG\u5212\u5206\u6210\u82E5\u5E72\u4E2AStage</li><li>TaskScheduler: \u5C06DAGScheduler\u63D0\u4EA4\u7684Stage(TaskSet)\u8FDB\u884C\u4F18\u5148\u7EA7\u6392\u5E8F\uFF0C\u518D\u5C06 task \u53D1\u9001\u5230 Executor</li><li>SchedulerBackend: \u5B9A\u4E49\u4E86\u8BB8\u591A\u4E0EExecutor\u4E8B\u4EF6\u76F8\u5173\u7684\u5904\u7406\uFF0C\u5305\u62EC: \u65B0\u7684 executor \u6CE8\u518C\u8FDB\u6765\u7684\u65F6\u5019\u8BB0\u5F55executor\u7684\u4FE1\u606F\uFF0C \u589E\u52A0\u5168\u5C40\u7684\u8D44\u6E90\u91CF(\u6838\u6570); executor \u66F4\u65B0\u72B6\u6001\uFF0C\u82E5\u4EFB\u52A1\u5B8C\u6210\u7684\u8BDD\uFF0C\u56DE\u6536core; \u5176\u4ED6\u505C\u6B62executor\u3001remove executor\u7B49\u4E8B\u4EF6</li></ul><p><img src="`+M+'" alt="SparkContext\u4E09\u5927\u7EC4\u4EF6"></p><p>Standalone\u6A21\u5F0F\u4E0B\u4F5C\u4E1A\u63D0\u4EA4\u6B65\u9AA4:</p><ol><li>\u542F\u52A8\u5E94\u7528\u7A0B\u5E8F\uFF0C\u5B8C\u6210SparkContext\u7684\u521D\u59CB\u5316</li><li>Driver\u5411Master\u6CE8\u518C\uFF0C\u7533\u8BF7\u8D44\u6E90</li><li>Master\u68C0\u67E5\u96C6\u7FA4\u8D44\u6E90\u72B6\u51B5\u3002\u82E5\u96C6\u7FA4\u8D44\u6E90\u6EE1\u8DB3\uFF0C\u901A\u77E5Worker\u542F\u52A8Executor</li><li>Executor\u542F\u52A8\u540E\u5411Driver\u6CE8\u518C(\u79F0\u4E3A\u53CD\u5411\u6CE8\u518C)</li><li>Driver\u5B8C\u6210DAG\u7684\u89E3\u6790\uFF0C\u5F97\u5230Tasks\uFF0C\u7136\u540E\u5411Executor\u53D1\u9001Task</li><li>Executor \u5411Driver\u6C47\u603B\u4EFB\u52A1\u7684\u6267\u884C\u60C5\u51B5</li><li>\u5E94\u7528\u7A0B\u5E8F\u6267\u884C\u5B8C\u6BD5\uFF0C\u56DE\u6536\u8D44\u6E90</li></ol><p><img src="'+E+'" alt="Standalone\u4F5C\u4E1A\u63D0\u4EA4\u6B65\u9AA4"></p><h3 id="_5-2-shuffle\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_5-2-shuffle\u539F\u7406" aria-hidden="true">#</a> 5.2 Shuffle\u539F\u7406</h3><p>Shuffle\u7684\u672C\u610F\u662F\u6D17\u724C\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u628A\u724C\u5F04\u4E71\u3002</p><p>Spark\u3001Hadoop\u4E2D\u7684shuffle\u53EF\u4E0D\u662F\u4E3A\u4E86\u628A\u6570\u636E\u5F04\u4E71\uFF0C\u800C\u662F\u4E3A\u4E86\u5C06\u968F\u673A\u6392\u5217\u7684\u6570\u636E\u8F6C\u6362\u6210\u5177\u6709\u4E00\u5B9A\u89C4\u5219\u7684\u6570\u636E\u3002</p><p>Shuffle \u662FMapReduce\u8BA1\u7B97\u6846\u67B6\u4E2D\u7684\u4E00\u4E2A\u7279\u6B8A\u7684\u9636\u6BB5\uFF0C\u4ECB\u4E8E Map \u548C Reduce \u4E4B\u95F4\u3002 \u5F53Map\u7684\u8F93\u51FA\u7ED3\u679C\u8981\u88ABReduce\u4F7F\u7528\u65F6\uFF0C\u8F93\u51FA\u7ED3\u679C\u9700\u8981\u6309key\u6392\u5217\uFF0C\u5E76\u4E14\u5206\u53D1\u5230 Reducer \u4E0A\u53BB\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u5C31\u662Fshuffle\u3002</p><p>Shuffle \u6D89\u53CA\u5230\u4E86\u672C\u5730\u78C1\u76D8(\u975EHDFS)\u7684\u8BFB\u5199\u548C\u7F51\u7EDC\u7684\u4F20\u8F93\uFF0C\u5927\u591A\u6570Spark\u4F5C\u4E1A\u7684\u6027\u80FD\u4E3B\u8981\u5C31\u662F\u6D88\u8017\u5728\u4E86shuffle\u73AF\u8282\u3002 \u56E0\u6B64Shuffle\u6027\u80FD\u7684\u9AD8\u4F4E\u76F4\u63A5\u5F71\u54CD\u5230\u4E86\u6574\u4E2A\u7A0B\u5E8F\u7684\u8FD0\u884C\u6548\u7387\u3002</p><p>\u5728Spark Shuffle\u7684\u5B9E\u73B0\u4E0A\uFF0C\u7ECF\u5386\u4E86Hash Shuffle\u3001Sort Shuffle\u3001Unsafe Shuffle\u4E09\u9636\u6BB5:</p><ul><li>Spark 0.8 \u53CA\u4EE5\u524D Hash Based Shuffle</li><li>Spark 0.8.1 \u4E3AHash Based Shuffle\u5F15\u5165File Consolidation\u673A\u5236 Spark 0.9 \u5F15\u5165ExternalAppendOnlyMap</li><li>Spark 1.1 \u5F15\u5165Sort Based Shuffle\uFF0C\u4F46\u9ED8\u8BA4\u4ECD\u4E3AHash Based Shuffle</li><li>Spark 1.2 \u9ED8\u8BA4\u7684Shuffle\u65B9\u5F0F\u6539\u4E3ASort Based Shuffle</li><li>Spark 1.4 \u5F15\u5165Tungsten-Sort Based Shuffle(\u53EF\u4EE5\u4F7F\u7528\u5806\u5916\u5185\u5B58)</li><li>Spark 1.6 Tungsten-sort\u5E76\u5165Sort Based Shuffle</li><li>Spark 2.0 Hash Based Shuffle\u9000\u51FA\u5386\u53F2\u821E\u53F0</li></ul><p>\u7B80\u5355\u7684\u8BF4:</p><ul><li>Spark 1.1 \u4EE5\u524D\u662FHash Shuffle</li><li>Spark 1.1 \u5F15\u5165\u4E86Sort Shuffle(\u6B64\u65F6\u548C MR \u7684 Shuffle \u5DF2\u7ECF\u975E\u5E38\u76F8\u4F3C\u4E86)</li><li>Spark 1.6 \u5C06Tungsten-sort\u5E76\u5165Sort Shuffle</li><li>Spark 2.0 Hash Shuffle\u9000\u51FA\u5386\u53F2\u821E\u53F0</li></ul><p><img src="'+A+'" alt="SparkShuffle\u53D1\u5C55\u8FDB\u7A0B"></p><h4 id="_1\u3001hash-base-shuffle-v1" tabindex="-1"><a class="header-anchor" href="#_1\u3001hash-base-shuffle-v1" aria-hidden="true">#</a> 1\u3001Hash Base Shuffle V1</h4><p>\u6BCF\u4E2AShuffle Map Task\u9700\u8981\u4E3A\u6BCF\u4E2A\u4E0B\u6E38\u7684Task\u521B\u5EFA\u4E00\u4E2A\u5355\u72EC\u7684\u6587\u4EF6</p><p>Shuffle\u8FC7\u7A0B\u4E2D\u4F1A\u751F\u6210\u6D77\u91CF\u7684\u5C0F\u6587\u4EF6\u3002\u540C\u65F6\u6253\u5F00\u8FC7\u591A\u6587\u4EF6\u3001\u4F4E\u6548\u7684\u968F\u673AIO</p><p><img src="'+B+'" alt="HashBaseV1"></p><h4 id="_2\u3001hash-base-shuffle-v2" tabindex="-1"><a class="header-anchor" href="#_2\u3001hash-base-shuffle-v2" aria-hidden="true">#</a> 2\u3001Hash Base Shuffle V2</h4><p>Hash Base Shuffle V2 \u6838\u5FC3\u601D\u60F3: \u5141\u8BB8\u4E0D\u540C\u7684task\u590D\u7528\u540C\u4E00\u6279\u78C1\u76D8\u6587\u4EF6\uFF0C\u6709\u6548\u5C06\u591A\u4E2A task\u7684\u78C1\u76D8\u6587\u4EF6\u8FDB\u884C\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u7684\u5408\u5E76\uFF0C \u4ECE\u800C\u5927\u5E45\u5EA6\u51CF\u5C11\u78C1\u76D8\u6587\u4EF6\u7684\u6570\u91CF\uFF0C\u8FDB\u800C\u63D0\u5347 shuffle write \u7684\u6027\u80FD\u3002\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u89E3\u51B3\u4E86Hash V1\u4E2D\u7684\u95EE\u9898\uFF0C\u4F46\u4E0D\u5F7B\u5E95\u3002</p><p><img src="'+C+'" alt="HashBaseV2"></p><p>Hash Shuffle \u89C4\u907F\u4E86\u6392\u5E8F\uFF0C\u63D0\u9AD8\u4E86\u6027\u80FD; \u603B\u7684\u6765\u8BF4\u5728Hash Shuffle\u8FC7\u7A0B\u4E2D\u751F\u6210\u6D77\u91CF\u7684\u5C0F\u6587\u4EF6 (Hash Base Shuffle V2\u751F\u6210\u6D77\u91CF\u5C0F\u6587\u4EF6\u7684\u95EE\u9898\u5F97\u5230\u4E86\u4E00\u5B9A\u7A0B\u5EA6\u7684\u7F13\u89E3)\u3002</p><h4 id="_3\u3001sort-base-shuffle" tabindex="-1"><a class="header-anchor" href="#_3\u3001sort-base-shuffle" aria-hidden="true">#</a> 3\u3001Sort Base Shuffle</h4><p>Sort Base Shuffle\u5927\u5927\u51CF\u5C11\u4E86shuffle\u8FC7\u7A0B\u4E2D\u4EA7\u751F\u7684\u6587\u4EF6\u6570\uFF0C\u63D0\u9AD8Shuffle\u7684\u6548\u7387;</p><p><img src="'+N+'" alt="SortBase"></p><blockquote><p>Spark Shuffle \u4E0E Hadoop Shuffle \u4ECE\u76EE\u7684\u3001\u610F\u4E49\u3001\u529F\u80FD\u4E0A\u770B\u662F\u7C7B\u4F3C\u7684\uFF0C\u5B9E\u73B0(\u7EC6\u8282)\u4E0A\u6709\u533A\u522B\u3002</p></blockquote><h3 id="_5-3-rdd\u7F16\u7A0B\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_5-3-rdd\u7F16\u7A0B\u4F18\u5316" aria-hidden="true">#</a> 5.3 RDD\u7F16\u7A0B\u4F18\u5316</h3><h4 id="_5-3-1-rdd\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#_5-3-1-rdd\u590D\u7528" aria-hidden="true">#</a> 5.3.1 RDD\u590D\u7528</h4><p>\u907F\u514D\u521B\u5EFA\u91CD\u590D\u7684RDD\u3002\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u8981\u6CE8\u610F: \u5BF9\u4E8E\u540C\u4E00\u4EFD\u6570\u636E\uFF0C\u53EA\u5E94\u8BE5\u521B\u5EFA\u4E00\u4E2A RDD\uFF0C\u4E0D\u8981\u521B\u5EFA\u591A\u4E2ARDD\u6765\u4EE3\u8868\u540C\u4E00\u4EFD\u6570\u636E\u3002</p><h4 id="_5-3-2-rdd\u7F13\u5B58-\u6301\u4E45\u5316" tabindex="-1"><a class="header-anchor" href="#_5-3-2-rdd\u7F13\u5B58-\u6301\u4E45\u5316" aria-hidden="true">#</a> 5.3.2 RDD\u7F13\u5B58/\u6301\u4E45\u5316</h4><p>\u5F53\u591A\u6B21\u5BF9\u540C\u4E00\u4E2ARDD\u6267\u884C\u7B97\u5B50\u64CD\u4F5C\u65F6\uFF0C\u6BCF\u4E00\u6B21\u90FD\u4F1A\u5BF9\u8FD9\u4E2ARDD\u4EE5\u4E4B\u524D\u7684\u7236RDD\u91CD\u65B0\u8BA1\u7B97\u4E00\u6B21\uFF0C\u8FD9\u79CD\u60C5\u51B5\u662F\u5FC5\u987B\u8981\u907F\u514D\u7684\uFF0C \u5BF9\u540C\u4E00\u4E2ARDD\u7684\u91CD\u590D\u8BA1\u7B97\u662F\u5BF9\u8D44\u6E90\u7684\u6781\u5927\u6D6A\u8D39</p><p>\u5BF9\u591A\u6B21\u4F7F\u7528\u7684RDD\u8FDB\u884C\u6301\u4E45\u5316\uFF0C\u901A\u8FC7\u6301\u4E45\u5316\u5C06\u516C\u5171RDD\u7684\u6570\u636E\u7F13\u5B58\u5230\u5185\u5B58/\u78C1\u76D8\u4E2D\uFF0C\u4E4B\u540E\u5BF9\u4E8E\u516C\u5171RDD\u7684\u8BA1\u7B97\u90FD\u4F1A\u4ECE\u5185\u5B58/\u78C1\u76D8\u4E2D\u76F4\u63A5\u83B7\u53D6RDD\u6570\u636E</p><p>RDD\u7684\u6301\u4E45\u5316\u662F\u53EF\u4EE5\u8FDB\u884C\u5E8F\u5217\u5316\u7684\uFF0C\u5F53\u5185\u5B58\u65E0\u6CD5\u5C06RDD\u7684\u6570\u636E\u5B8C\u6574\u7684\u8FDB\u884C\u5B58\u653E\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u5E8F\u5217\u5316\u7684\u65B9\u5F0F\u51CF\u5C0F\u6570\u636E\u4F53\u79EF\uFF0C\u5C06\u6570\u636E\u5B8C\u6574\u5B58\u50A8\u5728\u5185\u5B58\u4E2D</p><h4 id="_5-3-3-\u5DE7\u7528-filter" tabindex="-1"><a class="header-anchor" href="#_5-3-3-\u5DE7\u7528-filter" aria-hidden="true">#</a> 5.3.3 \u5DE7\u7528 filter</h4><p>\u5C3D\u53EF\u80FD\u65E9\u7684\u6267\u884Cfilter\u64CD\u4F5C\uFF0C\u8FC7\u6EE4\u65E0\u7528\u6570\u636E</p><p>\u5728filter\u8FC7\u6EE4\u6389\u8F83\u591A\u6570\u636E\u540E\uFF0C\u4F7F\u7528 <code>coalesce</code> \u5BF9\u6570\u636E\u8FDB\u884C\u91CD\u5206\u533A</p><h4 id="_5-3-4-\u4F7F\u7528\u9AD8\u6027\u80FD\u7B97\u5B50" tabindex="-1"><a class="header-anchor" href="#_5-3-4-\u4F7F\u7528\u9AD8\u6027\u80FD\u7B97\u5B50" aria-hidden="true">#</a> 5.3.4 \u4F7F\u7528\u9AD8\u6027\u80FD\u7B97\u5B50</h4><ol><li>\u907F\u514D\u4F7F\u7528 <code>groupByKey</code>\uFF0C\u6839\u636E\u573A\u666F\u9009\u62E9\u4F7F\u7528\u9AD8\u6027\u80FD\u7684\u805A\u5408\u7B97\u5B50 <code>reduceByKey</code>\u3001 <code>aggregateByKey</code></li><li><code>coalesce</code>\u3001<code>repartition</code>\uFF0C\u5728\u53EF\u80FD\u7684\u60C5\u51B5\u4E0B\u4F18\u5148\u9009\u62E9\u6CA1\u6709shuffle\u7684\u64CD\u4F5C(<code>coalesce</code>)</li><li><code>foreachPartition</code> \u4F18\u5316\u8F93\u51FA\u64CD\u4F5C</li><li><code>map</code>\u3001<code>mapPartitions</code>\uFF0C\u9009\u62E9\u5408\u7406\u7684\u9009\u62E9\u7B97\u5B50 <code>mapPartitions</code> \u6027\u80FD\u66F4\u597D(\u4F5C\u7528\u4E8E\u6570\u636E\u5206\u533A\u4E0A)\uFF0C\u4F46\u6570\u636E\u91CF\u5927\u65F6\u5BB9\u6613\u5BFC\u81F4OOM</li><li>\u7528 <code>repartitionAndSortWithinPartitions</code> \u66FF\u4EE3 <code>repartition + sort</code> \u64CD\u4F5C(\u5C06\u4E24\u6B21 Shuffle \u51CF\u5C11\u4E3A\u4E00\u6B21)</li><li>\u5408\u7406\u4F7F\u7528 <code>cache</code>\u3001<code>persist</code>\u3001<code>checkpoint</code>\uFF0C\u9009\u62E9\u5408\u7406\u7684\u6570\u636E\u5B58\u50A8\u7EA7\u522B</li><li><code>filter</code> \u7684\u4F7F\u7528</li><li>\u51CF\u5C11\u5BF9\u6570\u636E\u6E90\u7684\u626B\u63CF(\u7B97\u6CD5\u590D\u6742\u4E86)</li></ol><h4 id="_5-3-5-\u8BBE\u7F6E\u5408\u7406\u7684\u5E76\u884C\u5EA6" tabindex="-1"><a class="header-anchor" href="#_5-3-5-\u8BBE\u7F6E\u5408\u7406\u7684\u5E76\u884C\u5EA6" aria-hidden="true">#</a> 5.3.5 \u8BBE\u7F6E\u5408\u7406\u7684\u5E76\u884C\u5EA6</h4><p>Spark\u4F5C\u4E1A\u4E2D\u7684\u5E76\u884C\u5EA6\u6307\u5404\u4E2Astage\u7684task\u7684\u6570\u91CF</p><p>\u8BBE\u7F6E\u5408\u7406\u7684\u5E76\u884C\u5EA6\uFF0C\u8BA9\u5E76\u884C\u5EA6\u4E0E\u8D44\u6E90\u76F8\u5339\u914D\u3002\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u5728\u8D44\u6E90\u5141\u8BB8\u7684\u524D\u63D0\u4E0B\uFF0C\u5E76\u884C\u5EA6\u8981\u8BBE\u7F6E\u7684\u5C3D\u53EF\u80FD\u5927\uFF0C \u8FBE\u5230\u53EF\u4EE5\u5145\u5206\u5229\u7528\u96C6\u7FA4\u8D44\u6E90\u3002\u5408\u7406\u7684\u8BBE\u7F6E\u5E76\u884C\u5EA6\uFF0C\u53EF\u4EE5\u63D0\u5347\u6574\u4E2ASpark\u4F5C\u4E1A\u7684\u6027\u80FD\u548C\u8FD0\u884C\u901F\u5EA6\u3002</p><h4 id="_5-3-6-\u5E7F\u64AD\u5927\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#_5-3-6-\u5E7F\u64AD\u5927\u53D8\u91CF" aria-hidden="true">#</a> 5.3.6 \u5E7F\u64AD\u5927\u53D8\u91CF</h4><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Ctask\u4E2D\u7684\u7B97\u5B50\u4E2D\u5982\u679C\u4F7F\u7528\u4E86\u5916\u90E8\u53D8\u91CF\uFF0C\u6BCF\u4E2Atask\u90FD\u4F1A\u83B7\u53D6\u4E00\u4EFD\u53D8\u91CF\u7684\u590D\u672C\uFF0C \u8FD9\u4F1A\u9020\u591A\u4F59\u7684\u7F51\u7EDC\u4F20\u8F93\u548C\u5185\u5B58\u6D88\u8017</p><p>\u4F7F\u7528\u5E7F\u64AD\u53D8\u91CF\uFF0C\u53EA\u4F1A\u5728\u6BCF\u4E2AExecutor\u4FDD\u5B58\u4E00\u4E2A\u526F\u672C\uFF0CExecutor\u7684\u6240\u6709task\u5171\u7528\u6B64\u5E7F\u64AD\u53D8\u91CF\uFF0C \u8FD9\u6837\u5C31\u8282\u7EA6\u4E86\u7F51\u7EDC\u53CA\u5185\u5B58\u8D44\u6E90</p>',223);function j(O,F){const a=t("ExternalLinkIcon");return e(),o(l,null,[I,T,n("blockquote",null,[n("p",null,[n("a",H,[L,c(a)])])]),K],64)}var J=p(P,[["render",j],["__file","index.html.vue"]]);export{J as default};
