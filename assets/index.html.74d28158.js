import{_ as t,r as o,o as e,a as c,b as n,d as l,F as u,c as s,e as a}from"./app.40df414d.js";var i="/doc/assets/README-1648348315095.25fc88ba.png",r="/doc/assets/README-1648348344381.a4549282.png",k="/doc/assets/README-1648348387966.62dcc18e.png",b="/doc/assets/README-1648347886944.709851b7.png",m="/doc/assets/README-1648348435722.4179da88.png",d="/doc/assets/README-1648348680126.755bb70f.png",g="/doc/assets/README-1648348579046.fae14f1a.png",y="/doc/assets/README-1648349136617.e2b36545.png",D="/doc/assets/README-1648471957487.a0247e18.png",v="/doc/assets/README-1648349851716.7f35586a.png",h="/doc/assets/README-1648349878458.f469ad27.png";const q={},f=s(`<h1 id="spark-core" tabindex="-1"><a class="header-anchor" href="#spark-core" aria-hidden="true">#</a> Spark Core</h1><h2 id="\u7B2C3\u8282-rdd\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B2C3\u8282-rdd\u7F16\u7A0B" aria-hidden="true">#</a> \u7B2C3\u8282 RDD\u7F16\u7A0B</h2><h3 id="_3-1-\u4EC0\u4E48\u662Frdd" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4EC0\u4E48\u662Frdd" aria-hidden="true">#</a> 3.1 \u4EC0\u4E48\u662FRDD</h3><p>RDD\u662F Spark \u7684\u57FA\u77F3\uFF0C\u662F\u5B9E\u73B0 Spark \u6570\u636E\u5904\u7406\u7684\u6838\u5FC3\u62BD\u8C61\u3002</p><p>RDD \u662F\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u5B83\u4EE3\u8868\u4E00\u4E2A\u4E0D\u53EF\u53D8\u3001\u53EF\u5206\u533A\u3001\u91CC\u9762\u7684\u5143\u7D20\u53EF\u5E76\u884C\u8BA1\u7B97\u7684\u96C6\u5408\u3002</p><p>RDD(Resilient Distributed Dataset \u5F39\u6027\u5206\u5E03\u5F0F\u6570\u636E\u96C6)\u662F Spark \u4E2D\u7684\u6838\u5FC3\u6982\u5FF5\uFF0C \u5B83\u662F\u4E00\u4E2A\u5BB9\u9519\u3001\u53EF\u4EE5\u5E76\u884C\u6267\u884C\u7684\u5206\u5E03\u5F0F\u6570\u636E\u96C6\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Internally, each RDD is characterized by five main properties:
 *
 *  - A list of partitions
 *  - A function for computing each split
 *  - A list of dependencies on other RDDs
 *  - Optionally, a Partitioner for key-value RDDs (e.g. to say that the RDD is hash-partitioned)
 *  - Optionally, a list of preferred locations to compute each split on (e.g. block locations for
 *    an HDFS file)
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>RDD\u5305\u542B5\u4E2A\u7279\u5F81:</p><ol><li>\u4E00\u4E2A\u5206\u533A\u7684\u5217\u8868</li><li>\u4E00\u4E2A\u8BA1\u7B97\u51FD\u6570compute\uFF0C\u5BF9\u6BCF\u4E2A\u5206\u533A\u8FDB\u884C\u8BA1\u7B97</li><li>\u5BF9\u5176\u4ED6RDDs\u7684\u4F9D\u8D56(\u5BBD\u4F9D\u8D56\u3001\u7A84\u4F9D\u8D56)\u5217\u8868</li><li>\u5BF9key-value RDDs\u6765\u8BF4\uFF0C\u5B58\u5728\u4E00\u4E2A\u5206\u533A\u5668(Partitioner)\u3010\u53EF\u9009\u7684\u3011</li><li>\u5BF9\u6BCF\u4E2A\u5206\u533A\u6709\u4E00\u4E2A\u4F18\u5148\u4F4D\u7F6E\u7684\u5217\u8868\u3010\u53EF\u9009\u7684\u3011</li></ol><p>\u8BF4\u660E\uFF1A</p><ul><li>\u4E00\u7EC4\u5206\u7247(Partition)\uFF0C\u5373\u6570\u636E\u96C6\u7684\u57FA\u672C\u7EC4\u6210\u5355\u4F4D\u3002</li></ul><p>\u5BF9\u4E8ERDD\u6765\u8BF4\uFF0C\u6BCF\u4E2A\u5206\u7247\u90FD\u4F1A\u88AB\u4E00\u4E2A\u8BA1\u7B97\u4EFB\u52A1\u5904\u7406\uFF0C\u5E76\u51B3\u5B9A\u5E76\u884C\u8BA1\u7B97\u7684\u7C92\u5EA6\u3002\u7528\u6237\u53EF\u4EE5\u5728\u521B\u5EFARDD\u65F6\u6307\u5B9ARDD\u7684\u5206\u7247\u4E2A\u6570\uFF0C \u5982\u679C\u6CA1\u6709\u6307\u5B9A\uFF0C\u90A3\u4E48\u5C31\u4F1A\u91C7\u7528\u9ED8\u8BA4\u503C;</p><ul><li>\u4E00\u4E2A\u5BF9\u5206\u533A\u6570\u636E\u8FDB\u884C\u8BA1\u7B97\u7684\u51FD\u6570\u3002</li></ul><p>Spark\u4E2DRDD\u7684\u8BA1\u7B97\u662F\u4EE5\u5206\u7247\u4E3A\u5355\u4F4D\u7684\uFF0C\u6BCF\u4E2ARDD\u90FD\u4F1A\u5B9E\u73B0 compute \u51FD\u6570\u4EE5\u8FBE\u5230\u8BE5\u76EE\u7684\u3002 compute\u51FD\u6570\u4F1A\u5BF9\u8FED\u4EE3\u5668\u8FDB\u884C\u7EC4\u5408\uFF0C\u4E0D\u9700\u8981\u4FDD\u5B58\u6BCF\u6B21\u8BA1\u7B97\u7684\u7ED3\u679C;</p><blockquote><p>\u4E00\u4E2A\u5206\u533A\u5BF9\u5E94\u4E00\u4E2A\u8BA1\u7B97\u4EFB\u52A1\u3002</p></blockquote><ul><li>RDD\u4E4B\u95F4\u5B58\u5728\u4F9D\u8D56\u5173\u7CFB\u3002</li></ul><p>RDD\u7684\u6BCF\u6B21\u8F6C\u6362\u90FD\u4F1A\u751F\u6210\u4E00\u4E2A\u65B0\u7684RDD\uFF0CRDD\u4E4B\u95F4\u5F62\u6210\u7C7B\u4F3C\u4E8E\u6D41\u6C34\u7EBF\u4E00\u6837\u7684\u524D\u540E\u4F9D\u8D56\u5173\u7CFB(lineage)\u3002 \u5728\u90E8\u5206\u5206\u533A\u6570\u636E\u4E22\u5931\u65F6\uFF0C Spark\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u4F9D\u8D56\u5173\u7CFB\u91CD\u65B0\u8BA1\u7B97\u4E22\u5931\u7684\u5206\u533A\u6570\u636E\uFF0C\u800C\u4E0D\u662F\u5BF9RDD\u7684\u6240\u6709\u5206\u533A\u8FDB\u884C\u91CD\u65B0\u8BA1\u7B97;</p><ul><li>\u5BF9\u4E8E key-value \u7684RDD\u800C\u8A00\uFF0C\u53EF\u80FD\u5B58\u5728\u5206\u533A\u5668(Partitioner)\u3002</li></ul><p>Spark \u5B9E\u73B0\u4E86\u4E24\u79CD\u7C7B\u578B\u7684\u5206\u7247\u51FD\u6570\uFF0C\u4E00\u4E2A\u662F\u57FA\u4E8E\u54C8\u5E0C\u7684HashPartitioner\uFF0C\u53E6\u5916\u4E00\u4E2A\u662F\u57FA\u4E8E\u8303\u56F4\u7684RangePartitioner\u3002 \u53EA\u6709 key-value \u7684RDD\uFF0C\u624D\u53EF\u80FD\u6709Partitioner\uFF0C\u975Ekey-value\u7684RDD\u7684 Partitioner \u7684\u503C\u662FNone\u3002 Partitioner\u51FD\u6570\u51B3\u5B9A\u4E86RDD\u672C\u8EAB\u7684\u5206\u7247\u6570\u91CF\uFF0C\u4E5F\u51B3\u5B9A\u4E86parent RDD Shuffle\u8F93\u51FA\u65F6\u7684\u5206\u7247\u6570\u91CF;</p><ul><li>\u4E00\u4E2A\u5217\u8868\uFF0C\u5B58\u50A8\u5B58\u50A8\u6BCF\u4E2APartition\u7684\u4F18\u5148\u4F4D\u7F6E(preferred location)\u3002</li></ul><p>\u5BF9\u4E8E\u4E00\u4E2AHDFS\u6587\u4EF6\u6765\u8BF4\uFF0C\u8FD9\u4E2A\u5217\u8868\u4FDD\u5B58\u7684\u5C31\u662F\u6BCF\u4E2APartition\u6240\u5728\u7684\u5757\u7684\u4F4D\u7F6E\u3002\u6309\u7167*&quot;\u79FB\u52A8\u8BA1\u7B97\u4E0D\u79FB\u52A8\u6570\u636E&quot;*\u7684\u7406\u5FF5\uFF0C Spark\u5728\u4EFB\u52A1\u8C03\u5EA6\u7684\u65F6\u5019\uFF0C\u4F1A\u5C3D\u53EF\u80FD\u5730\u5C06\u8BA1\u7B97\u4EFB\u52A1\u5206\u914D\u5230\u5176\u6240\u8981\u5904\u7406\u6570\u636E\u5757\u7684\u5B58\u50A8\u4F4D\u7F6E\u3002</p><h3 id="_3-2-rdd\u7684\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_3-2-rdd\u7684\u7279\u70B9" aria-hidden="true">#</a> 3.2 RDD\u7684\u7279\u70B9</h3><p>1\u3001\u5206\u533A</p><p>RDD\u903B\u8F91\u4E0A\u662F\u5206\u533A\u7684\uFF0C\u6BCF\u4E2A\u5206\u533A\u7684\u6570\u636E\u662F<strong>\u62BD\u8C61\u5B58\u5728</strong>\u7684\uFF0C\u8BA1\u7B97\u7684\u65F6\u5019\u4F1A\u901A\u8FC7\u4E00\u4E2A compute \u51FD\u6570\u5F97\u5230\u6BCF\u4E2A\u5206\u533A\u7684\u6570\u636E\u3002 \u5982\u679CRDD\u662F\u901A\u8FC7\u5DF2\u6709\u7684\u6587\u4EF6\u7CFB\u7EDF\u6784\u5EFA\uFF0C\u5219 compute\u51FD\u6570\u662F\u8BFB\u53D6\u6307\u5B9A\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u7684\u6570\u636E\uFF0C\u5982\u679CRDD\u662F\u901A\u8FC7\u5176\u4ED6RDD\u8F6C\u6362\u800C\u6765\uFF0C \u5219compute\u51FD\u6570\u662F\u6267\u884C\u8F6C\u6362\u903B\u8F91\u5C06\u5176\u4ED6RDD\u7684\u6570\u636E\u8FDB\u884C\u8F6C\u6362\u3002</p><p><img src="`+i+'" alt="\u5206\u533A"></p><p>2\u3001\u53EA\u8BFB</p><p>RDD\u662F\u53EA\u8BFB\u7684\uFF0C\u8981\u60F3\u6539\u53D8RDD\u4E2D\u7684\u6570\u636E\uFF0C\u53EA\u80FD\u5728\u73B0\u6709\u7684RDD\u57FA\u7840\u4E0A\u521B\u5EFA\u65B0\u7684RDD;</p><p><img src="'+r+'" alt="\u53EA\u8BFB"></p><p>\u4E00\u4E2ARDD\u8F6C\u6362\u4E3A\u53E6\u4E00\u4E2ARDD\uFF0C\u901A\u8FC7\u4E30\u5BCC\u7684\u64CD\u4F5C\u7B97\u5B50(map\u3001filter\u3001union\u3001join\u3001 reduceByKey...) \u5B9E\u73B0\uFF0C\u4E0D\u518D\u50CFMR\u90A3\u6837\u53EA\u80FD\u5199map\u548Creduce\u4E86\u3002</p><p><img src="'+k+'" alt="\u7B97\u5B50\u4E30\u5BCC"></p><p>RDD\u7684\u64CD\u4F5C\u7B97\u5B50\u5305\u62EC\u4E24\u7C7B:</p><ul><li>Transformation \u7528\u6765\u5BF9RDD\u8FDB\u884C\u8F6C\u5316\uFF0C\u5EF6\u8FDF\u6267\u884C(Lazy);</li><li>Action \u7528\u6765\u89E6\u53D1RDD\u7684\u8BA1\u7B97; \u5F97\u5230\u76F8\u5173\u8BA1\u7B97\u7ED3\u679C\u6216\u8005\u5C06RDD\u4FDD\u5B58\u7684\u6587\u4EF6\u7CFB\u7EDF\u4E2D;</li></ul><blockquote><p>\u4E2A\u4EBA\u611F\u89C9\uFF1A Transformation \u76F8\u5F53\u4E8E Java \u4E2D\u7684\u8FC7\u7A0B\u6D41; Action \u76F8\u5F53\u4E8E Java \u4E2D\u7684\u7EC8\u7ED3\u6D41\u3002</p></blockquote><p>3\u3001\u4F9D\u8D56</p><p>RDDs\u901A\u8FC7\u64CD\u4F5C\u7B97\u5B50\u8FDB\u884C\u8F6C\u6362\uFF0C\u8F6C\u6362\u5F97\u5230\u7684\u65B0RDD\u5305\u542B\u4E86\u4ECE\u5176\u4ED6RDDs\u884D\u751F\u6240\u5FC5\u9700\u7684\u4FE1\u606F\uFF0C RDDs\u4E4B\u95F4\u7EF4\u62A4\u7740\u8FD9\u79CD\u8840\u7F18\u5173\u7CFB(lineage)\uFF0C\u4E5F\u79F0\u4E4B\u4E3A\u4F9D\u8D56\u3002</p><p>\u4F9D\u8D56\u5305\u62EC\u4E24\u79CD:</p><ul><li>\u7A84\u4F9D\u8D56\uFF1ARDDs\u4E4B\u95F4\u5206\u533A\u662F\u4E00\u4E00\u5BF9\u5E94\u7684(1:1 \u6216 n:1)</li><li>\u5BBD\u4F9D\u8D56\uFF1A\u5B50RDD\u6BCF\u4E2A\u5206\u533A\u4E0E\u7236RDD\u7684\u6BCF\u4E2A\u5206\u533A\u90FD\u6709\u5173\uFF0C\u662F\u591A\u5BF9\u591A\u7684\u5173\u7CFB(\u5373 <code>n:m</code>)\u3002\u3010\u6709shuffle\u53D1\u751F\u3011</li></ul><p><img src="'+b+'" alt="RDD\u7279\u70B9-\u4F9D\u8D56"></p><p>4\u3001\u7F13\u5B58</p><p>\u53EF\u4EE5\u63A7\u5236\u5B58\u50A8\u7EA7\u522B(\u5185\u5B58\u3001\u78C1\u76D8\u7B49)\u6765\u8FDB\u884C\u7F13\u5B58\u3002</p><p>\u5982\u679C\u5728\u5E94\u7528\u7A0B\u5E8F\u4E2D\u591A\u6B21\u4F7F\u7528\u540C\u4E00\u4E2ARDD\uFF0C\u53EF\u4EE5\u5C06\u8BE5RDD\u7F13\u5B58\u8D77\u6765\uFF0C\u8BE5RDD\u53EA\u6709\u5728\u7B2C\u4E00\u6B21\u8BA1\u7B97\u7684\u65F6\u5019\u4F1A\u6839\u636E\u8840\u7F18\u5173\u7CFB\u5F97\u5230\u5206\u533A\u7684\u6570\u636E\uFF0C \u5728\u540E\u7EED\u5176\u4ED6\u5730\u65B9\u7528\u5230\u8BE5RDD\u7684\u65F6\u5019\uFF0C\u4F1A\u76F4\u63A5\u4ECE\u7F13\u5B58\u5904\u53D6\u800C\u4E0D\u7528\u518D\u6839\u636E\u8840\u7F18\u5173\u7CFB\u8BA1\u7B97\uFF0C\u8FD9\u6837\u5C31\u52A0\u901F\u540E\u671F\u7684\u91CD\u7528\u3002</p><p><img src="'+m+'" alt="\u7F13\u5B58"></p><p>5\u3001checkpoint</p><p>\u867D\u7136RDD\u7684\u8840\u7F18\u5173\u7CFB\u5929\u7136\u5730\u53EF\u4EE5\u5B9E\u73B0\u5BB9\u9519\uFF0C\u5F53RDD\u7684\u67D0\u4E2A\u5206\u533A\u6570\u636E\u5931\u8D25\u6216\u4E22\u5931\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8840\u7F18\u5173\u7CFB\u91CD\u5EFA\u3002</p><p>\u4F46\u662F\u4E8E\u957F\u65F6\u95F4\u8FED\u4EE3\u578B\u5E94\u7528\u6765\u8BF4\uFF0C\u968F\u7740\u8FED\u4EE3\u7684\u8FDB\u884C\uFF0CRDDs\u4E4B\u95F4\u7684\u8840\u7F18\u5173\u7CFB\u4F1A\u8D8A\u6765\u8D8A\u957F\uFF0C \u4E00\u65E6\u5728\u540E\u7EED\u8FED\u4EE3\u8FC7\u7A0B\u4E2D\u51FA\u9519\uFF0C\u5219\u9700\u8981\u901A\u8FC7\u975E\u5E38\u957F\u7684\u8840\u7F18\u5173\u7CFB\u53BB\u91CD\u5EFA\uFF0C\u52BF\u5FC5\u5F71\u54CD\u6027\u80FD\u3002</p><p>RDD\u652F\u6301 checkpoint \u5C06\u6570\u636E\u4FDD\u5B58\u5230\u6301\u4E45\u5316\u7684\u5B58\u50A8\u4E2D\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u5207\u65AD\u4E4B\u524D\u7684\u8840\u7F18\u5173\u7CFB\uFF0C \u56E0\u4E3Acheckpoint\u540E\u7684RDD\u4E0D\u9700\u8981\u77E5\u9053\u5B83\u7684\u7236RDDs\u4E86\uFF0C\u5B83\u53EF\u4EE5\u4ECE checkpoint \u5904\u62FF\u5230\u6570\u636E\u3002</p><h3 id="_3-3-spark\u7F16\u7A0B\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#_3-3-spark\u7F16\u7A0B\u6A21\u578B" aria-hidden="true">#</a> 3.3 Spark\u7F16\u7A0B\u6A21\u578B</h3><h4 id="\u903B\u8F91\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u903B\u8F91\u6A21\u578B" aria-hidden="true">#</a> \u903B\u8F91\u6A21\u578B</h4><p><img src="'+d+'" alt="Spark\u7F16\u7A0B\u6A21\u578B"></p><p>\u8BF4\u660E\uFF1A</p><ul><li>RDD\u8868\u793A\u6570\u636E\u5BF9\u8C61</li><li>\u901A\u8FC7\u5BF9\u8C61\u4E0A\u7684\u65B9\u6CD5\u8C03\u7528\u6765\u5BF9RDD\u8FDB\u884C\u8F6C\u6362</li><li>\u6700\u7EC8\u663E\u793A\u7ED3\u679C\u6216\u5C06\u7ED3\u679C\u8F93\u51FA\u5230\u5916\u90E8\u6570\u636E\u6E90</li><li>RDD\u8F6C\u6362\u7B97\u5B50\u79F0\u4E3ATransformation\u662FLazy\u7684(\u5EF6\u8FDF\u6267\u884C)</li><li>\u53EA\u6709\u9047\u5230Action\u7B97\u5B50\uFF0C\u624D\u4F1A\u6267\u884CRDD\u7684\u8F6C\u6362\u64CD\u4F5C</li></ul><hr><h4 id="\u7269\u7406\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u7269\u7406\u6A21\u578B" aria-hidden="true">#</a> \u7269\u7406\u6A21\u578B</h4><p>\u8981\u4F7F\u7528Spark\uFF0C\u9700\u8981\u7F16\u5199 Driver \u7A0B\u5E8F\uFF0C\u5B83\u88AB\u63D0\u4EA4\u5230\u96C6\u7FA4\u8FD0\u884C</p><ul><li>Driver\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A\u6216\u591A\u4E2A RDD \uFF0C\u5E76\u8C03\u7528 RDD \u4E0A\u7684\u5404\u79CD\u7B97\u5B50</li><li>Worker\u5219\u6267\u884CRDD\u5206\u533A\u8BA1\u7B97\u4EFB\u52A1</li></ul><p><img src="'+g+`" alt="RDD\u7F16\u7A0B\u6A21\u578B"></p><h3 id="_3-4-rdd\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_3-4-rdd\u7684\u521B\u5EFA" aria-hidden="true">#</a> 3.4 RDD\u7684\u521B\u5EFA</h3><p>1\u3001SparkContext</p><p><code>SparkContext</code> \u662F\u7F16\u5199Spark\u7A0B\u5E8F\u7528\u5230\u7684\u7B2C\u4E00\u4E2A\u7C7B\uFF0C\u662FSpark\u7684\u4E3B\u8981\u5165\u53E3\u70B9\uFF0C\u5B83\u8D1F\u8D23\u548C\u6574\u4E2A\u96C6\u7FA4\u7684\u4EA4\u4E92;</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Main entry point for Spark functionality. A SparkContext represents the connection to a Spark
 * cluster, and can be used to create RDDs, accumulators and broadcast variables on that cluster.
 *
 * Only one SparkContext may be active per JVM.  You must \`stop()\` the active SparkContext before
 * creating a new one.  This limitation may eventually be removed; see SPARK-2243 for more details.
 *
 * @param config a Spark Config object describing the application configuration. Any settings in
 *   this config overrides the default configs as well as system properties.
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5982\u628ASpark\u96C6\u7FA4\u5F53\u4F5C\u670D\u52A1\u7AEF\uFF0C\u90A3\u4E48Driver\u5C31\u662F\u5BA2\u6237\u7AEF\uFF0CSparkContext \u662F\u5BA2\u6237\u7AEF\u7684\u6838\u5FC3;</p><p>SparkContext\u662FSpark\u7684\u5BF9\u5916\u63A5\u53E3\uFF0C\u8D1F\u8D23\u5411\u8C03\u7528\u8005\u63D0\u4F9B Spark \u7684\u5404\u79CD\u529F\u80FD;</p><p>SparkContext\u7528\u4E8E\u8FDE\u63A5Spark\u96C6\u7FA4\u3001\u521B\u5EFARDD\u3001\u7D2F\u52A0\u5668\u3001\u5E7F\u64AD\u53D8\u91CF;</p><hr><p>\u5728 spark-shell \u4E2D SparkContext \u5DF2\u7ECF\u521B\u5EFA\u597D\u4E86\uFF0C\u53EF\u76F4\u63A5\u4F7F\u7528;</p><p>\u7F16\u5199Spark Driver\u7A0B\u5E8F\u7B2C\u4E00\u4EF6\u4E8B\u5C31\u662F: \u521B\u5EFASparkContext;</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Spark context Web UI available at http://linux121:4040
Spark context available as &#39;sc&#39; (master = spark://linux121:7077, app id = app-20220327170814-0000).
Spark session available as &#39;spark&#39;.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\\ \\/ _ \\/ _ \`/ __/  &#39;_/
   /___/ .__/\\_,_/_/ /_/\\_\\   version 2.4.5
      /_/
         
Using Scala version 2.12.10 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_231)
Type in expressions to have them evaluated.
Type :help for more information.

scala&gt; 
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>\u5EFA\u8BAE: \u4F7F\u7528Standalone\u6A21\u5F0F\u6216\u672C\u5730\u6A21\u5F0F\u5B66\u4E60RDD\u7684\u5404\u79CD\u7B97\u5B50; \u4E0D\u9700\u8981HA; \u4E0D\u9700\u8981IDEA</p></blockquote><p>2\u3001\u4ECE\u96C6\u5408\u521B\u5EFARDD</p><p>\u4ECE\u96C6\u5408\u4E2D\u521B\u5EFARDD\uFF0C\u4E3B\u8981\u7528\u4E8E\u6D4B\u8BD5\u3002Spark \u63D0\u4F9B\u4E86\u4EE5\u4E0B\u51FD\u6570: <code>parallelize</code>\u3001 <code>makeRDD</code>\u3001<code>range</code></p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">)</span>

<span class="token comment">// \u68C0\u67E5 RDD \u5206\u533A\u6570 </span>
rdd2<span class="token punctuation">.</span>getNumPartitions
rdd2<span class="token punctuation">.</span>partitions<span class="token punctuation">.</span>length

<span class="token comment">// \u521B\u5EFA RDD\uFF0C\u5E76\u6307\u5B9A\u5206\u533A\u6570</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u5206\u533A\u6570\u4E3A 10</span>
rdd2<span class="token punctuation">.</span>getNumPartitions
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u5206\u533A\u6570\u4E3A 10</span>
rdd3<span class="token punctuation">.</span>getNumPartitions
<span class="token keyword">val</span> rdd4 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
rdd4<span class="token punctuation">.</span>getNumPartitions
<span class="token keyword">val</span> rdd5 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// 3 \u662F\u6B65\u957F</span>
rdd5<span class="token punctuation">.</span>getNumPartitions <span class="token comment">// =&gt; 6</span>
<span class="token keyword">val</span> rdd6 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 2 \u662F\u6B65\u957F\uFF0C10 \u662F\u5206\u533A\u6570</span>
rdd6<span class="token punctuation">.</span>getNumPartitions
<span class="token keyword">val</span> rdd7 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> numSlices <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u901A\u8FC7\u663E\u5F0F\u53C2\u6570\u7684\u65B9\u5F0F\u6307\u5B9A\u5206\u533A\u6570\uFF0C\u8FD9\u6837\u53EF\u4EE5\u7701\u7565\u6B65\u957F</span>
rdd7<span class="token punctuation">.</span>getNumPartitions
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><blockquote><p>\u5907\u6CE8: <code>rdd.collect</code> \u65B9\u6CD5\u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u4E0D\u8981\u4F7F\u7528\uFF0C\u4F1A\u9020\u6210Driver OOM</p></blockquote><p>3\u3001\u4ECE\u6587\u4EF6\u7CFB\u7EDF\u521B\u5EFARDD</p><p>\u7528 <code>textFile()</code> \u65B9\u6CD5\u6765\u4ECE\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u52A0\u8F7D\u6570\u636E\u521B\u5EFARDD\u3002 \u65B9\u6CD5\u5C06\u6587\u4EF6\u7684 URI \u4F5C\u4E3A\u53C2\u6570\uFF0C \u8FD9\u4E2AURI\u53EF\u4EE5\u662F:</p><ul><li>\u672C\u5730\u6587\u4EF6\u7CFB\u7EDF (\u4F7F\u7528\u672C\u5730\u6587\u4EF6\u7CFB\u7EDF\u8981\u6CE8\u610F: \u8BE5\u6587\u4EF6\u662F\u4E0D\u662F\u5728\u6240\u6709\u7684\u8282\u70B9\u5B58\u5728\u3010\u5728Standalone\u6A21\u5F0F\u4E0B\u3011)</li><li>\u5206\u5E03\u5F0F\u6587\u4EF6\u7CFB\u7EDFHDFS\u7684\u5730\u5740</li><li>Amazon S3 \u7684\u5730\u5740</li></ul><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u4ECE\u672C\u5730\u6587\u4EF6\u7CFB\u7EDF\u52A0\u8F7D\u6570\u636E</span>
<span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;file:///root/data/wc.txt&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// \u4ECE\u5206\u5E03\u5F0F\u6587\u4EF6\u7CFB\u7EDF\u52A0\u8F7D\u6570\u636E</span>
<span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;hdfs://linux121:9000/user/root/data/uaction.dat&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;/user/root/data/uaction.dat&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/uaction.dat&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>4\u3001\u4ECERDD\u521B\u5EFARDD</p><p>\u672C\u8D28\u662F\u5C06\u4E00\u4E2ARDD\u8F6C\u6362\u4E3A\u53E6\u4E00\u4E2ARDD\u3002</p><blockquote><p>\u8BE6\u7EC6\u4FE1\u606F\u53C2\u89C1 3.5 Transformation</p></blockquote><h3 id="_3-5-transformation\u3010\u91CD\u8981\u3011" tabindex="-1"><a class="header-anchor" href="#_3-5-transformation\u3010\u91CD\u8981\u3011" aria-hidden="true">#</a> 3.5 Transformation\u3010\u91CD\u8981\u3011</h3><p>RDD\u7684\u64CD\u4F5C\u7B97\u5B50\u5206\u4E3A\u4E24\u7C7B:</p><ul><li><p>Transformation \u7528\u6765\u5BF9RDD\u8FDB\u884C\u8F6C\u5316\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u65F6<em>\u5EF6\u8FDF\u6267\u884C</em>\u7684(\u6216\u8005\u8BF4\u662F Lazy \u7684);</p></li><li><p>Action \u7528\u6765\u89E6\u53D1RDD\u7684\u8BA1\u7B97; \u5F97\u5230\u76F8\u5173\u8BA1\u7B97\u7ED3\u679C\u6216\u8005\u5C06\u7ED3\u679C\u4FDD\u5B58\u7684\u5916\u90E8\u7CFB\u7EDF\u4E2D;</p></li><li><p>Transformation: \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684RDD</p></li><li><p>Action: \u8FD4\u56DE\u7ED3\u679Cint\u3001double\u3001\u96C6\u5408(\u4E0D\u4F1A\u8FD4\u56DE\u65B0\u7684RDD)</p></li></ul><blockquote><p>\u8981\u5F88\u51C6\u786E\u533A\u5206Transformation\u3001Action</p></blockquote><p>\u6BCF\u4E00\u6B21 Transformation \u64CD\u4F5C\u90FD\u4F1A\u4EA7\u751F\u65B0\u7684RDD\uFF0C\u4F9B\u7ED9\u4E0B\u4E00\u4E2A\u201C\u8F6C\u6362\u201D\u4F7F\u7528;</p><p>\u8F6C\u6362\u5F97\u5230\u7684RDD\u662F\u60F0\u6027\u6C42\u503C\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6574\u4E2A\u8F6C\u6362\u8FC7\u7A0B\u53EA\u662F\u8BB0\u5F55\u4E86\u8F6C\u6362\u7684\u8F68\u8FF9\uFF0C\u5E76\u4E0D\u4F1A\u53D1\u751F\u771F\u6B63\u7684\u8BA1\u7B97\uFF0C \u53EA\u6709\u9047\u5230 Action \u64CD\u4F5C\u65F6\uFF0C\u624D\u4F1A\u53D1\u751F\u771F\u6B63\u7684\u8BA1\u7B97\uFF0C\u5F00\u59CB\u4ECE\u8840\u7F18\u5173\u7CFB(lineage)\u6E90\u5934\u5F00\u59CB\uFF0C\u8FDB\u884C\u7269\u7406\u7684\u8F6C\u6362\u64CD\u4F5C;</p><p><img src="`+y+'" alt="Transformation\u6D41\u7A0B"></p><p>\u5E38\u89C1\u7684 Transformation \u7B97\u5B50:</p>',87),w=a("\u5B98\u65B9\u6587\u6863: "),x={href:"http://spark.apache.org/docs/latest/rdd-programming-guide.html#transformations",target:"_blank",rel:"noopener noreferrer"},R=a("http://spark.apache.org/docs/latest/rdd-programming-guide.html#transformations"),_=s(`<h4 id="\u5E38\u89C1\u8F6C\u6362\u7B97\u5B501" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u8F6C\u6362\u7B97\u5B501" aria-hidden="true">#</a> \u5E38\u89C1\u8F6C\u6362\u7B97\u5B501</h4><ul><li><code>map(func)</code>: \u5BF9\u6570\u636E\u96C6\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u4F7F\u7528func\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684RDD</li><li><code>filter(func)</code>: \u5BF9\u6570\u636E\u96C6\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u4F7F\u7528func\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u4F7Ffunc\u4E3Atrue\u7684\u5143\u7D20\u6784\u6210\u7684RDD</li><li><code>flatMap(func)</code>: \u4E0E <code>map</code> \u7C7B\u4F3C\uFF0C\u6BCF\u4E2A\u8F93\u5165\u5143\u7D20\u88AB\u6620\u5C04\u4E3A0\u6216\u591A\u4E2A\u8F93\u51FA\u5143\u7D20</li><li><code>mapPartitions(func)</code>: \u548C <code>map</code> \u5F88\u50CF\uFF0C\u4F46\u662F <code>map</code> \u662F\u5C06func\u4F5C\u7528\u5728\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF0C\u800C <code>mapPartitions</code> \u662Ffunc\u4F5C\u7528\u5728\u6574\u4E2A\u5206\u533A\u4E0A\u3002</li></ul><blockquote><p>\u5047\u8BBE\u4E00\u4E2ARDD\u6709N\u4E2A\u5143\u7D20\uFF0CM\u4E2A\u5206\u533A(N &gt;&gt; M)\uFF0C\u90A3\u4E48map\u7684\u51FD\u6570\u5C06\u88AB\u8C03\u7528N\u6B21\uFF0C\u800CmapPartitions\u4E2D\u7684\u51FD\u6570\u4EC5\u88AB\u8C03\u7528M\u6B21\uFF0C\u4E00\u6B21\u5904\u7406\u4E00\u4E2A\u5206\u533A\u4E2D\u7684\u6240\u6709\u5143\u7D20</p></blockquote><ul><li><code>mapPartitionsWithIndex(func)</code>: \u4E0E <code>mapPartitions</code> \u7C7B\u4F3C\uFF0C\u591A\u4E86\u5206\u533A\u7D22\u5F15\u503C\u4FE1\u606F</li></ul><p>\u5168\u90E8\u90FD\u662F\u7A84\u4F9D\u8D56</p><blockquote><p>\u7A84\u4F9D\u8D56\u7B80\u5355\u8BB2\u5C31\u662F<em>\u5206\u533A\u6570\u4E0D\u53D8</em>\u3001<em>\u4E2D\u95F4\u6CA1\u6709 Shuffle</em> \u64CD\u4F5C\u3002</p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">// \u4EE5\u4E0A\u90FD\u662F Transformation \u64CD\u4F5C\uFF0C\u6CA1\u6709\u88AB\u6267\u884C\u3002</span>
<span class="token comment">// \u5982\u4F55\u8BC1\u660E\u8FD9\u4E9B\u64CD\u4F5C\u6309\u9884\u671F\u6267\u884C\uFF0C\u6B64\u65F6\u9700\u8981\u5F15\u5165Action\u7B97\u5B50</span>
rdd2<span class="token punctuation">.</span>collect
rdd3<span class="token punctuation">.</span>collect
<span class="token comment">// collect \u662FAction\u7B97\u5B50\uFF0C\u89E6\u53D1Job\u7684\u6267\u884C\uFF0C\u5C06RDD\u7684\u5168\u90E8\u5143\u7D20\u4ECE Executor \u641C\u96C6\u5230 Driver \u7AEF\u3002</span>
<span class="token comment">// \u751F\u4EA7\u73AF\u5883\u4E2D\u7981\u7528</span>

<span class="token comment">// flatMap \u4F7F\u7528\u6848\u4F8B</span>
<span class="token keyword">val</span> rdd4 <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;data/wc.txt&quot;</span><span class="token punctuation">)</span>
rdd4<span class="token punctuation">.</span>collect <span class="token comment">// \u6587\u4EF6\u4E2D\u6BCF\u4E00\u884C\u5C31\u662F\u6B64\u5904\u4E00\u4E2A\u5143\u7D20</span>
rdd4<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>_<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect <span class="token comment">// \u6309\u7167\u7A7A\u683C\u5207\u5206\uFF0C\u8FD4\u56DE\u7684\u5143\u7D20\u662F\u5355\u8BCD</span>

<span class="token comment">// RDD \u662F\u5206\u533A\uFF0Crdd4\u6709\u51E0\u4E2A\u533A\uFF0C\u6BCF\u4E2A\u5206\u533A\u6709\u54EA\u4E9B\u5143\u7D20</span>
rdd4<span class="token punctuation">.</span>getNumPartitions
rdd4<span class="token punctuation">.</span>partitions<span class="token punctuation">.</span>length

<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">20</span><span class="token punctuation">)</span>

rdd1<span class="token punctuation">.</span>mapPartitions<span class="token punctuation">(</span>iter <span class="token keyword">=&gt;</span> Iterator<span class="token punctuation">(</span>iter<span class="token punctuation">.</span>toArray<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array(1:2:3, 4:5:6, 7:8:9:10, 11:12:13, 14:15:16, 17:18:19:20)</span>

rdd1<span class="token punctuation">.</span>mapPartitions<span class="token punctuation">{</span>iter <span class="token keyword">=&gt;</span>
  Iterator<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">iter<span class="token punctuation">.</span>toList</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array(List(1, 2, 3), List(4, 5, 6), List(7, 8, 9, 10), List(11, 12, 13), </span>
<span class="token comment">//        List(14, 15, 16), List(17, 18, 19, 20))</span>

rdd1<span class="token punctuation">.</span>mapPartitions<span class="token punctuation">{</span>iter <span class="token keyword">=&gt;</span>
  Iterator<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">iter<span class="token punctuation">.</span>toArray<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array(1-2-3, 4-5-6, 7-8-9-10, 11-12-13, 14-15-16, 17-18-19-20)</span>

<span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5206\u533A\u7F16\u53F7</span>
rdd1<span class="token punctuation">.</span>mapPartitionsWithIndex<span class="token punctuation">{</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> iter<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span>
  Iterator<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">idx</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">iter<span class="token punctuation">.</span>toArray<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array(0:1-2-3, 1:4-5-6, 2:7-8-9-10, 3:11-12-13, 4:14-15-16, 5:17-18-19-20)</span>

<span class="token comment">// \u6BCF\u4E2A\u5143\u7D20 * 2</span>
<span class="token keyword">val</span> rdd5 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>mapPartitions<span class="token punctuation">(</span>iter <span class="token keyword">=&gt;</span> iter<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd5<span class="token punctuation">.</span>collect
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p><strong>map \u4E0E mapPartitions \u7684\u533A\u522B</strong></p><ul><li><code>map</code>: \u6BCF\u6B21\u5904\u7406\u4E00\u6761\u6570\u636E</li><li><code>mapPartitions</code>: \u6BCF\u6B21\u5904\u7406\u4E00\u4E2A\u5206\u533A\u7684\u6570\u636E\uFF0C\u5206\u533A\u7684\u6570\u636E\u5904\u7406\u5B8C\u6210\u540E\uFF0C\u6570\u636E\u624D\u80FD\u91CA\u653E\uFF0C\u8D44\u6E90\u4E0D\u8DB3\u65F6\u5BB9\u6613\u5BFC\u81F4OOM</li></ul><p>\u6700\u4F73\u5B9E\u8DF5: \u5F53\u5185\u5B58\u8D44\u6E90\u5145\u8DB3\u65F6\uFF0C\u5EFA\u8BAE\u4F7F\u7528 <code>mapPartitions</code>\uFF0C\u4EE5\u63D0\u9AD8\u5904\u7406\u6548\u7387</p><h4 id="\u5E38\u89C1\u8F6C\u6362\u7B97\u5B502" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u8F6C\u6362\u7B97\u5B502" aria-hidden="true">#</a> \u5E38\u89C1\u8F6C\u6362\u7B97\u5B502</h4><ul><li><code>groupBy(func)</code>: \u6309\u7167\u4F20\u5165\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u8FDB\u884C\u5206\u7EC4\u3002\u5C06key\u76F8\u540C\u7684\u503C\u653E\u5165\u4E00\u4E2A\u8FED\u4EE3\u5668</li><li><code>glom()</code>: \u5C06\u6BCF\u4E00\u4E2A\u5206\u533A\u5F62\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5F62\u6210\u65B0\u7684RDD\u7C7B\u578B <code>RDD[Array[T]]</code></li><li><code>sample(withReplacement, fraction, seed)</code>: \u91C7\u6837\u7B97\u5B50\u3002\u4EE5\u6307\u5B9A\u7684\u968F\u673A\u79CD\u5B50(<code>seed</code>)\u968F\u673A\u62BD\u6837\u51FA\u6570\u91CF\u4E3A <code>fraction</code> \u7684\u6570\u636E\uFF0C<code>withReplacement</code>\u8868\u793A\u662F\u62BD\u51FA\u7684\u6570\u636E\u662F\u5426\u653E\u56DE\uFF0C<code>true</code>\u4E3A\u6709\u653E\u56DE\u7684\u62BD\u6837\uFF0C<code>false</code>\u4E3A\u65E0\u653E\u56DE\u7684\u62BD\u6837</li><li><code>distinct([numTasks]))</code>: \u5BF9RDD\u5143\u7D20\u53BB\u91CD\u540E\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684RDD\u3002\u53EF\u4F20\u5165 <code>numTasks</code> \u53C2\u6570\u6539\u53D8RDD\u5206\u533A\u6570</li><li><code>coalesce(numPartitions)</code>: \u7F29\u51CF\u5206\u533A\u6570\uFF0C\u65E0shuffle</li><li><code>repartition(numPartitions)</code>: \u589E\u52A0\u6216\u51CF\u5C11\u5206\u533A\u6570\uFF0C\u6709shuffle</li><li><code>sortBy(func, [ascending], [numTasks])</code>: \u4F7F\u7528 func \u5BF9\u6570\u636E\u8FDB\u884C\u5904\u7406\uFF0C\u5BF9\u5904\u7406\u540E\u7684\u7ED3\u679C\u8FDB\u884C\u6392\u5E8F</li></ul><p>\u5BBD\u4F9D\u8D56\u7684\u7B97\u5B50(shuffle): <code>groupBy</code>\u3001<code>distinct</code>\u3001<code>repartition</code>\u3001<code>sortBy</code></p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u5C06 RDD \u4E2D\u7684\u5143\u7D20\u6309\u71673\u7684\u4F59\u6570\u5206\u7EC4</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> group <span class="token operator">=</span> rdd<span class="token punctuation">.</span>groupBy<span class="token punctuation">(</span>_ <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span>
group<span class="token punctuation">.</span>collect
<span class="token comment">// Array[(Int, Iterable[Int])] = Array(</span>
<span class="token comment">//    (0,CompactBuffer(9, 3, 6)), (1,CompactBuffer(7, 4, 10, 1)), </span>
<span class="token comment">//    (2,CompactBuffer(5, 2, 8)))</span>

<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd<span class="token punctuation">.</span>glom
rdd2<span class="token punctuation">.</span>collect
<span class="token comment">// Array(Array(1), Array(2, 3), Array(4, 5), Array(6), Array(7, 8), Array(9, 10))</span>

<span class="token comment">// \u5C06 RDD \u4E2D\u7684\u5143\u7D20\u6BCF10\u4E2A\u5143\u7D20\u5206\u7EC4</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">101</span><span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>glom<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>sliding<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// sliding \u662FScala\u4E2D\u7684\u65B9\u6CD5, \u7528\u4E8E\u5207\u5206\u6570\u7EC4</span>
<span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5207\u5206\u540E\u7684\u6570\u7EC4\u7684\u957F\u5EA6</span>
<span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u6BCF\u4E2AList\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u76F8\u5BF9\u4E8E\u4E0A\u4E00\u4E2AList\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u79FB\u52A8\u7684\u6B65\u6570</span>

<span class="token comment">// \u5BF9\u6570\u636E\u91C7\u6837\u3002fraction\u91C7\u6837\u7684\u767E\u5206\u6BD4\uFF0C\u8FD1\u4F3C\u6570 </span>
<span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570\uFF1A\u662F\u5426\u653E\u56DE\u91C7\u6837; \u5982\u679C\u653E\u56DE\uFF0C\u5219\u6837\u672C\u6709\u6982\u7387\u4F1A\u91CD\u590D\uFF1B</span>
<span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF1A\u91C7\u96C6\u7684\u767E\u5206\u6BD4(\u6982\u6570\uFF0C\u4E0D\u4E00\u5B9A\u7279\u522B\u51C6\u786E)\uFF1B</span>
<span class="token comment">// \u7B2C\u4E09\u4E2A\u53C2\u6570\uFF1A\u5982\u679C\u5199\u4E86\u76F8\u540C\u7684\u6570\uFF0C\u591A\u6B21\u91C7\u6837\u7684\u6837\u672C\u90FD\u662F\u4E00\u6837\u7684\uFF0C\u4E0D\u5199\u5C31\u6BCF\u6B21\u91C7\u6837\u7684\u6837\u672C\u90FD\u4E0D\u4E00\u6837</span>
<span class="token comment">// \u6709\u653E\u56DE\u7684\u91C7\u6837\uFF0C\u4F7F\u7528\u56FA\u5B9A\u7684\u79CD\u5B50 </span>
rdd<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// \u65E0\u653E\u56DE\u7684\u91C7\u6837\uFF0C\u4F7F\u7528\u56FA\u5B9A\u7684\u79CD\u5B50</span>
rdd<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// \u6709\u653E\u56DE\u7684\u91C7\u6837\uFF0C\u4E0D\u8BBE\u7F6E\u79CD\u5B50</span>
rdd<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// \u4F7F\u7528\u573A\u666F\uFF1A\u5728\u90E8\u5206\u6570\u636E\u4E0A\u505A\u6D4B\u8BD5</span>

<span class="token comment">// \u6570\u636E\u53BB\u91CD</span>
<span class="token keyword">val</span> random <span class="token operator">=</span> scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random
<span class="token keyword">val</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> random<span class="token punctuation">.</span>nextInt<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>distinct<span class="token punctuation">.</span>collect

<span class="token comment">// RDD\u91CD\u5206\u533A</span>
<span class="token comment">// \u6570\u636E\u51C6\u5907</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> numSlices<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>_<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
rdd2<span class="token punctuation">.</span>getNumPartitions

<span class="token comment">// \u51CF\u5C11\u5206\u533A\u6570;\u90FD\u751F\u6548\u4E86</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>repartition<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
rdd3<span class="token punctuation">.</span>getNumPartitions

<span class="token keyword">val</span> rdd4 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>coalesce<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
rdd4<span class="token punctuation">.</span>getNumPartitions

<span class="token comment">// \u589E\u52A0\u5206\u533A\u6570</span>
<span class="token keyword">val</span> rdd5 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>repartition<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
rdd5<span class="token punctuation">.</span>getNumPartitions

<span class="token comment">// \u589E\u52A0\u5206\u533A\u6570\uFF0C\u8FD9\u6837\u4F7F\u7528\u6CA1\u6709\u6548\u679C</span>
<span class="token keyword">val</span> rdd6 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>coalesce<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
rdd6<span class="token punctuation">.</span>getNumPartitions

<span class="token comment">// \u589E\u52A0\u5206\u533A\u6570\u7684\u6B63\u786E\u7528\u6CD5</span>
<span class="token keyword">val</span> rdd6 <span class="token operator">=</span> rdd2<span class="token punctuation">.</span>coalesce<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> 
<span class="token comment">// \u7B49\u4E8E\u662F\u5C06\u9ED8\u8BA4\u7684\u53C2\u6570 shuffle \u8BBE\u7F6E\u4E3A true \u5C31\u53EF\u4EE5\u589E\u52A0\u5206\u533A\u6570\u4E86; \u56E0\u4E3A\u589E\u52A0\u5206\u533A shuffle \u4E0D\u53EF\u907F\u514D</span>
rdd6<span class="token punctuation">.</span>getNumPartitions

<span class="token comment">// RDD\u5143\u7D20\u6392\u5E8F</span>
<span class="token keyword">val</span> random <span class="token operator">=</span> scala<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random
<span class="token keyword">val</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> random<span class="token punctuation">.</span>nextInt<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>collect

<span class="token comment">// \u6570\u636E\u5168\u5C40\u6709\u5E8F\uFF0C\u9ED8\u8BA4\u5347\u5E8F</span>
rdd<span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>x<span class="token keyword">=&gt;</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// \u964D\u5E8F</span>
rdd<span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>x<span class="token keyword">=&gt;</span>x<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p><strong>coalesce \u4E0E repartition \u7684\u533A\u522B</strong></p><ul><li>coalesce: \u4E00\u822C\u7528\u4E8E\u51CF\u5C11\u5206\u533A\u6570(\u6B64\u65F6\u65E0shuffle)</li><li>repartition: \u589E\u5927\u6216\u51CF\u5C11\u5206\u533A\u6570; \u6709shuffle</li></ul><h4 id="\u5E38\u89C1\u8F6C\u6362\u7B97\u5B503" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u8F6C\u6362\u7B97\u5B503" aria-hidden="true">#</a> \u5E38\u89C1\u8F6C\u6362\u7B97\u5B503</h4><p>RDD\u4E4B\u95F4\u7684\u4EA4\u3001\u5E76\u3001\u5DEE\u7B97\u5B50\uFF0C\u5206\u522B\u5982\u4E0B:</p><ul><li><code>intersection(otherRDD)</code></li><li><code>union(otherRDD)</code></li><li><code>subtract (otherRDD)</code></li></ul><hr><ul><li><code>cartesian(otherRDD)</code>: \u7B1B\u5361\u5C14\u79EF(RDD1\u4E2D\u6BCF\u4E2A\u5143\u7D20\u548CRDD2\u4E2D\u6BCF\u4E2A\u5143\u7D20\u53D1\u751F\u5173\u7CFB)</li><li><code>zip(otherRDD)</code>: \u5C06\u4E24\u4E2ARDD\u7EC4\u5408\u6210 key-value \u5F62\u5F0F\u7684RDD\uFF0C\u9ED8\u8BA4\u4E24\u4E2ARDD\u7684 partition \u6570\u91CF\u4EE5\u53CA\u5143\u7D20\u6570\u91CF\u90FD\u76F8\u540C\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u5F02\u5E38\u3002</li></ul><p>\u5BBD\u4F9D\u8D56\u7684\u7B97\u5B50(shuffle): <code>intersection</code>\u3001<code>subtract</code></p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span>

rdd1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// \u5143\u7D20\u6C42\u5E76\u96C6\uFF0C\u4E0D\u53BB\u91CD</span>
rdd1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// \u5DEE\u96C6\u6709\u65B9\u5411 (rdd1 \u548C rdd2 \u4F4D\u7F6E\u6362\u4E86\u4EE5\u540E\u7ED3\u679C\u4E0D\u4E00\u6837)</span>
rdd1<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// \u68C0\u67E5\u5206\u533A\u6570</span>
rdd1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 6</span>
rdd1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 12</span>
rdd1<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 6</span>

<span class="token comment">// \u7B1B\u5361\u5C14\u79EF</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>cartesian<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array((1,6), (1,7), (1,8), (1,9), (2,6), (2,7), (2,8), (2,9),</span>
<span class="token comment">// (3,6), (3,7), (3,8), (3,9), (4,6), (4,7), (4,8), (4,9))</span>

<span class="token comment">// \u68C0\u67E5\u5206\u533A\u6570</span>
rdd1<span class="token punctuation">.</span>cartesian<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 36</span>

<span class="token comment">// \u62C9\u94FE\u64CD\u4F5C</span>
rdd1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect <span class="token comment">// Array((1,6), (2,7), (3,8), (4,9))</span>
rdd1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>getNumPartitions <span class="token comment">// 6</span>

<span class="token comment">// zip\u64CD\u4F5C\u8981\u6C42:\u4E24\u4E2ARDD\u7684partition\u6570\u91CF\u4EE5\u53CA\u5143\u7D20\u6570\u91CF\u90FD\u76F8\u540C\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u5F02\u5E38</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Can only zip RDDs with same number of elements in each partition</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u5907\u6CE8:</p><ol><li><p><code>union</code>\u662F\u7A84\u4F9D\u8D56\u3002(\u5F97\u5230\u7684RDD\u5206\u533A\u6570\u4E3A:\u4E24\u4E2ARDD\u5206\u533A\u6570\u4E4B\u548C)</p></li><li><p><code>cartesian</code> \u662F\u7A84\u4F9D\u8D56</p></li></ol><ul><li>\u5F97\u5230RDD\u7684\u5143\u7D20\u4E2A\u6570\u4E3A: \u4E24\u4E2ARDD\u5143\u7D20\u4E2A\u6570\u7684\u4E58\u79EF</li><li>\u5F97\u5230RDD\u7684\u5206\u533A\u6570\u4E3A: \u4E24\u4E2ARDD\u5206\u533A\u6570\u7684\u4E58\u79EF</li><li>\u4F7F\u7528\u8BE5\u64CD\u4F5C\u4F1A\u5BFC\u81F4\u6570\u636E\u81A8\u80C0\uFF0C\u614E\u7528\uFF01\uFF01</li></ul><h3 id="_3-6-action" tabindex="-1"><a class="header-anchor" href="#_3-6-action" aria-hidden="true">#</a> 3.6 Action</h3><p>Action \u7528\u6765\u89E6\u53D1RDD\u7684\u8BA1\u7B97\uFF0C\u5F97\u5230\u76F8\u5173\u8BA1\u7B97\u7ED3\u679C;</p><blockquote><p>Action\u89E6\u53D1Job\u3002\u4E00\u4E2ASpark\u7A0B\u5E8F(Driver\u7A0B\u5E8F)\u5305\u542B\u4E86\u591A\u5C11 Action \u7B97\u5B50\uFF0C\u90A3\u4E48\u5C31\u6709\u591A\u5C11Job;</p></blockquote><blockquote><p>\u5178\u578B\u7684Action\u7B97\u5B50: <code>collect</code>/<code>count</code></p></blockquote><blockquote><p><code>collect()</code> =&gt; <code>sc.runJob()</code> =&gt; ... =&gt; <code>dagScheduler.runJob()</code> =&gt; \u89E6\u53D1\u4E86Job</p></blockquote><blockquote><p>\u8981\u6C42: \u80FD\u5FEB\u901F\u51C6\u786E\u7684\u533A\u5206 Transformation \u548C Action</p></blockquote><p>\u6536\u96C6\uFF1A<code>collect()</code>/<code>collectAsMap()</code></p><p>\u7EDF\u8BA1\uFF1A <code>stats</code>/<code>count</code>/<code>mean</code>/<code>stdev</code>/<code>max</code>/<code>min</code></p><p>\u805A\u5408\uFF1A<code>reduce(func)</code>/<code>fold(func)</code>/<code>aggregate(func)</code></p><hr><ul><li><p><code>first()</code>: Return the first element in this RDD</p></li><li><p><code>take(n)</code>: T ake the first num elements of the RDD</p></li><li><p><code>top(n)</code>: \u6309\u7167\u9ED8\u8BA4(\u964D\u5E8F)\u6216\u8005\u6307\u5B9A\u7684\u6392\u5E8F\u89C4\u5219\uFF0C\u8FD4\u56DE\u524Dnum\u4E2A\u5143\u7D20\u3002</p></li><li><p><code>takeSample(withReplacement, num, [seed])</code>: \u8FD4\u56DE\u91C7\u6837\u7684\u6570\u636E</p></li><li><p><code>foreach(func)</code>/<code>foreachPartition(func)</code>: \u4E0Emap\u3001mapPartitions\u7C7B\u4F3C\uFF0C\u533A\u522B\u662F foreach \u662F Action</p></li></ul><p>\u4FDD\u5B58RDD\u4E2D\u7684\u6570\u636E\uFF1A <code>saveAsTextFile(path)</code>/<code>saveAsSequenceFile(path)</code>/<code>saveAsObjectFile(path)</code></p><hr><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">// \u8FD4\u56DE\u7EDF\u8BA1\u4FE1\u606F\u3002\u4EC5\u80FD\u4F5C\u7528 RDD[Double] \u7C7B\u578B\u4E0A\u8C03\u7528</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>stats
<span class="token comment">//  (count: 100, mean: 50.500000, stdev: 28.866070, max: 100.000000, min: 1.000000)</span>

<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E0D\u80FD\u8C03\u7528 // \u4E3A\u4EC0\u4E48\u4E0D\u80FD\u8C03\u7528\uFF1F\u56E0\u4E3A stats \u7EDF\u8BA1\u4FE1\u606F RDD \u4E2D\u7684\u5143\u7D20\u65F6\u5355\u4E2A\u800C\u4E14\u662F\u6570\u5B57\uFF0C</span>
<span class="token comment">// zip \u4E4B\u540E\u7684 RDD \u4E2D\u7684\u5143\u7D20\u662F (key, value) \u7ED3\u6784\u7684\u3002</span>
rdd1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>stats

<span class="token comment">// count\u5728\u5404\u79CD\u7C7B\u578B\u7684RDD\u4E0A\uFF0C\u5747\u80FD\u8C03\u7528</span>
rdd1<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>count <span class="token comment">// 100</span>

<span class="token comment">// \u805A\u5408\u64CD\u4F5C</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>reduce<span class="token punctuation">(</span>_<span class="token operator">+</span>_<span class="token punctuation">)</span> <span class="token comment">// 55</span>
rdd<span class="token punctuation">.</span>fold<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_<span class="token operator">+</span>_<span class="token punctuation">)</span> <span class="token comment">// 55</span>
rdd<span class="token punctuation">.</span>fold<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_<span class="token operator">+</span>_<span class="token punctuation">)</span> <span class="token comment">// 58</span>
<span class="token comment">// \u4E3A\u4EC0\u4E48\u662F 58\uFF1F \u6B64\u5904\u6709\u4E24\u4E2A\u5206\u533A\uFF0C\u6BCF\u4E2A\u5206\u533A\u5C40\u90E8\u6C47\u603B +1 = 2; \u5168\u5C40\u6C47\u603B\u518D +1 \u603B\u5171\u662F +3\uFF0C\u6240\u4EE5\u7ED3\u679C58</span>
<span class="token comment">// \u5982\u679C\u6B64\u5904\u6709\u516B\u4E2A\u5206\u533A\u7ED3\u679C\u5C31\u662F \u5C40\u90E8\u6C47\u603B +1*8 \u518D\u5168\u5C40\u6C47\u603B + 1 = 55 +9 = 64</span>

rdd<span class="token punctuation">.</span>fold<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
  println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
  x<span class="token operator">+</span>y 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// x=0, y=15</span>
<span class="token comment">// x=15, y=40</span>

rdd<span class="token punctuation">.</span>fold<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
  println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
  x<span class="token operator">+</span>y
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// x=1, y=41</span>
<span class="token comment">// x=42, y=16</span>

<span class="token comment">// fold \u5C40\u90E8\u6C47\u603B\u548C\u5168\u5C40\u6C47\u603B\u7684\u65B9\u6CD5\u90FD\u662F\u4E00\u6837</span>
<span class="token comment">// aggregate \u53EF\u4EE5\u5206\u522B\u5B9A\u5236\u5C40\u90E8\u6C47\u603B\u65B9\u6CD5\u548C\u5C40\u90E8\u6C47\u603B\u65B9\u6CD5</span>

<span class="token comment">// \u7B2C\u4E00\u4E2A\u53C2\u6570: \u521D\u59CB\u503C\uFF1B\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF1A\u5C40\u90E8\u6C47\u603B\u65B9\u6CD5\uFF1B\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF1A\u5168\u5C40\u6C47\u603B\u65B9\u6CD5</span>
rdd<span class="token punctuation">.</span>aggregate<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_<span class="token operator">+</span>_<span class="token punctuation">,</span> _<span class="token operator">+</span>_<span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>aggregate<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_<span class="token operator">+</span>_<span class="token punctuation">,</span> _<span class="token operator">+</span>_<span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>aggregate<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;a=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">a</span></span><span class="token string">, b=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">b</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    a<span class="token operator">+</span>b 
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    x<span class="token operator">+</span>y
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token comment">// first/take(n)/top(n): \u83B7\u53D6RDD\u4E2D\u7684\u5143\u7D20\u3002\u591A\u7528\u4E8E\u6D4B\u8BD5 </span>
rdd<span class="token punctuation">.</span>first
rdd<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>top<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u6392\u5E8F\u540E\u53D6Top10\uFF0C\u5982\u679C RDD \u7684\u5143\u7D20\u662F\u5BF9\u8C61\uFF0C\u9700\u8981\u81EA\u5B9A\u4E49\u6BD4\u8F83\u65B9\u5F0F</span>

<span class="token comment">// \u91C7\u6837\u5E76\u8FD4\u56DE\u7ED3\u679C </span>
rdd<span class="token punctuation">.</span>takeSample<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// \u7B2C\u4E8C\u4E2A\u53C2\u6570\u8868\u793A\u8FD4\u56DE\u591A\u5C11\u4E2A\u5143\u7D20</span>

<span class="token comment">// \u4FDD\u5B58\u6587\u4EF6\u5230\u6307\u5B9A\u8DEF\u5F84(rdd\u6709\u591A\u5C11\u5206\u533A\uFF0C\u5C31\u4FDD\u5B58\u4E3A\u591A\u5C11\u6587\u4EF6\uFF0C\u4FDD\u5B58\u6587\u4EF6\u65F6\u6CE8\u610F\u5C0F\u6587\u4EF6\u95EE\u9898)</span>
rdd<span class="token punctuation">.</span>saveAsTextFile<span class="token punctuation">(</span><span class="token string">&quot;data/t1&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><blockquote><p>fold() \u6267\u884C\u56FE\u89E3\uFF1A</p><p><img src="`+D+`" alt="Spark\u56FE\u89E3_fold\u6267\u884C\u6D41\u7A0B.png"></p></blockquote><h3 id="_3-7-key-value-rdd\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-7-key-value-rdd\u64CD\u4F5C" aria-hidden="true">#</a> 3.7 Key-Value RDD\u64CD\u4F5C</h3><p>RDD\u6574\u4F53\u4E0A\u5206\u4E3A Value \u7C7B\u578B\u548C Key-Value \u7C7B\u578B\u3002</p><p>\u524D\u9762\u4ECB\u7ECD\u7684\u662F Value \u7C7B\u578B\u7684RDD\u7684\u64CD\u4F5C\uFF0C\u5B9E\u9645\u4F7F\u7528\u66F4\u591A\u7684\u662F key-value \u7C7B\u578B\u7684 RDD\uFF0C\u4E5F\u79F0\u4E3A PairRDD\u3002</p><blockquote><p>Key-Value \u7C7B\u578B\u7684RDD\u66F4\u4E3A\u5E38\u7528\u3002</p></blockquote><p>Value \u7C7B\u578BRDD\u7684\u64CD\u4F5C\u57FA\u672C\u96C6\u4E2D\u5728 <code>RDD.scala</code> \u4E2D;</p><p>key-value \u7C7B\u578B\u7684RDD\u64CD\u4F5C\u96C6\u4E2D\u5728 <code>PairRDDFunctions.scala</code> \u4E2D;</p><p>\u524D\u9762\u4ECB\u7ECD\u7684\u5927\u591A\u6570\u7B97\u5B50\u5BF9 Pair RDD \u90FD\u662F\u6709\u6548\u7684\u3002Pair RDD\u8FD8\u6709\u5C5E\u4E8E\u81EA\u5DF1\u7684 Transformation\u3001Action \u7B97\u5B50;</p><h4 id="_3-7-1-\u521B\u5EFApair-rdd" tabindex="-1"><a class="header-anchor" href="#_3-7-1-\u521B\u5EFApair-rdd" aria-hidden="true">#</a> 3.7.1 \u521B\u5EFAPair RDD</h4><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toArray
<span class="token keyword">val</span> arr1 <span class="token operator">=</span> arr<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">,</span> x<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// rdd1 \u4E0D\u662F Pair RDD</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr1<span class="token punctuation">)</span> <span class="token comment">// \u5143\u7D20\u65F6\u5143\u7EC4\u7684RDD</span>

<span class="token comment">// rdd2 \u662F Pair RDD</span>
<span class="token keyword">val</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">,</span> x<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>arr2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_3-7-2-transformation\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-7-2-transformation\u64CD\u4F5C" aria-hidden="true">#</a> 3.7.2 Transformation\u64CD\u4F5C</h4><p>1\u3001(\u7C7B\u4F3C) map \u64CD\u4F5C</p><p><code>mapValues</code>/<code>flatMapValues</code>/<code>keys</code>/<code>values</code>\uFF0C\u8FD9\u4E9B\u64CD\u4F5C\u90FD\u53EF\u4EE5\u4F7F\u7528 map \u64CD\u4F5C\u5B9E\u73B0\uFF0C\u662F\u7B80\u5316\u64CD\u4F5C\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528 mapValues \u66F4\u7B80\u6D01</span>
<span class="token keyword">val</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token number">1</span> to <span class="token namespace">x</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>collect <span class="token comment">// Array((1,Range 1 to 2), (3,Range 1 to 4), (5,Range 1 to 6))</span>

<span class="token comment">// \u53EF\u4F7F\u7528map\u5B9E\u73B0\u540C\u6837\u7684\u64CD\u4F5C</span>
<span class="token keyword">val</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> <span class="token number">1</span> to <span class="token namespace">x<span class="token punctuation">.</span></span>_2<span class="token punctuation">)</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span>collect <span class="token comment">// Array((1,Range 1 to 2), (3,Range 1 to 4), (5,Range 1 to 6))</span>

<span class="token keyword">val</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>map<span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">1</span> to <span class="token namespace">v</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
b<span class="token punctuation">.</span>collect <span class="token comment">// Array((1,Range 1 to 2), (3,Range 1 to 4), (5,Range 1 to 6))</span>

<span class="token comment">// flatMapValues \u5C06 value \u7684\u503C\u538B\u5E73</span>
<span class="token keyword">val</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>flatMapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token number">1</span> to <span class="token namespace">x</span><span class="token punctuation">)</span>
c<span class="token punctuation">.</span>collect <span class="token comment">// Array((1,1), (1,2), (3,1), (3,2), (3,3), (3,4), (5,1), (5,2), (5,3), (5,4), (5,5), (5,6))</span>

<span class="token keyword">val</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token number">1</span> to <span class="token namespace">x</span><span class="token punctuation">)</span><span class="token punctuation">.</span>flatMap<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> v<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
c<span class="token punctuation">.</span>collect <span class="token comment">// Array((1,1), (1,2), (3,1), (3,2), (3,3), (3,4), (5,1), (5,2), (5,3), (5,4), (5,5), (5,6))</span>

c<span class="token punctuation">.</span>keys<span class="token punctuation">.</span>collect <span class="token comment">// Array(1, 1, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5)</span>
c<span class="token punctuation">.</span>values<span class="token punctuation">.</span>collect <span class="token comment">// Array(1, 2, 1, 2, 3, 4, 1, 2, 3, 4, 5, 6)</span>

c<span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> k<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
c<span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> k<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
c<span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> v<span class="token punctuation">}</span><span class="token punctuation">.</span>collect
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>2\u3001\u805A\u5408\u64CD\u4F5C\u3010\u91CD\u8981\u3001\u96BE\u70B9\u3011</p><blockquote><p><code>PariRDD(k, v)</code> \u4F7F\u7528\u8303\u56F4\u5E7F</p></blockquote><p>\u805A\u5408: <code>groupByKey</code>/<code>reduceByKey</code>/<code>foldByKey</code>/<code>aggregateByKey</code></p><p><code>combineByKey(OLD)</code>/<code>combineByKeyWithClassTag(NEW)</code> =&gt; \u5E95\u5C42\u5B9E\u73B0</p><p><code>subtractByKey</code>: \u7C7B\u4F3C\u4E8Esubtract\uFF0C\u5220\u6389 RDD \u4E2D\u952E\u4E0E other RDD \u4E2D\u7684\u952E\u76F8\u540C\u7684\u5143\u7D20</p><p>\u5C0F\u6848\u4F8B:</p><p>\u7ED9\u5B9A\u4E00\u7EC4\u6570\u636E: <code>(&quot;spark&quot;, 12), (&quot;hadoop&quot;, 26), (&quot;hadoop&quot;, 23), (&quot;spark&quot;, 15), (&quot;scala&quot;, 26), (&quot;spark&quot;, 25), (&quot;spark&quot;, 23), (&quot;hadoop&quot;, 16), (&quot;scala&quot;, 24), (&quot;spark&quot;, 16)</code>\uFF0C \u952E\u503C\u5BF9\u7684key\u8868\u793A\u56FE\u4E66\u540D\u79F0\uFF0Cvalue\u8868\u793A\u67D0\u5929\u56FE\u4E66\u9500\u91CF\u3002 \u8BA1\u7B97\u6BCF\u4E2A\u952E\u5BF9\u5E94\u7684\u5E73\u5747\u503C\uFF0C\u4E5F\u5C31\u662F\u8BA1\u7B97\u6BCF\u79CD\u56FE\u4E66\u7684\u6BCF\u5929\u5E73\u5747\u9500\u91CF\u3002</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  <span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;scala&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  <span class="token punctuation">(</span><span class="token string">&quot;scala&quot;</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// groupByKey</span>
rdd<span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect 
<span class="token comment">// Array((scala,CompactBuffer(26, 24)), (hadoop,CompactBuffer(26, 23, 16)), (spark,CompactBuffer(12, 25, 15, 16, 23)))</span>
<span class="token comment">// CompactBuffer \u662F Spark \u81EA\u5B9A\u4E49\u7684\u6570\u636E\u7ED3\u6784</span>

<span class="token comment">// \u4E0B\u9762\u4E09\u4E2A\u8BED\u53E5\u6548\u679C\u76F8\u540C</span>
rdd<span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>sum<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>x<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array((scala,25.0), (hadoop,21.666666666666668), (spark,18.2))</span>
rdd<span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">.</span>sum<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>v<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span>collect
rdd<span class="token punctuation">.</span>groupByKey<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>v <span class="token keyword">=&gt;</span> v<span class="token punctuation">.</span>sum<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>v<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// reduceByKey</span>
rdd<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Array[(String, (Int, Int))]</span>
  <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1 <span class="token operator">+</span> y<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2 <span class="token operator">+</span> y<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// (\u6CE8\u610F\uFF1A\u6B64\u65F6x,y\u90FD\u662F\u5143\u7EC4) \u5143\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u6570\u6C42\u548C\uFF0C\u7B2C\u4E8C\u4E2A\u6570\u8BA1\u6570</span>
  <span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toDouble <span class="token operator">/</span> x<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6B64\u65F6 x \u7684\u6570\u636E\u7C7B\u578B\u662F\u5143\u7EC4</span>
  <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// foldByKey =&gt; \u53EF\u4EE5\u5B9A\u4E49\u521D\u503C(\u5728\u7B2C\u4E00\u4E2A\u62EC\u53F7\u5185)</span>
rdd<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foldByKey<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1<span class="token operator">+</span>y<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2<span class="token operator">+</span>y<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x<span class="token keyword">=&gt;</span>x<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>x<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// aggregateByKey</span>
<span class="token comment">// aggregateByKey =&gt; \u5B9A\u4E49\u521D\u503C + \u5206\u533A\u5185\u7684\u805A\u5408\u51FD\u6570 + \u5206\u533A\u95F4\u7684\u805A\u5408\u51FD\u6570 </span>
rdd<span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span>aggregateByKey<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span> <span class="token comment">// \u5B9A\u4E49\u521D\u503C</span>
    <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1 <span class="token operator">+</span> y<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2 <span class="token operator">+</span> y<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5206\u533A\u5185\u7684\u805A\u5408\u51FD\u6570</span>
    <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>_1 <span class="token operator">+</span> b<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> a<span class="token punctuation">.</span>_2 <span class="token operator">+</span> b<span class="token punctuation">.</span>_2<span class="token punctuation">)</span> <span class="token comment">// \u5206\u533A\u95F4\u7684\u805A\u5408\u51FD\u6570</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x<span class="token keyword">=&gt;</span>x<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toDouble <span class="token operator">/</span> x<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// \u521D\u503C(\u5143\u7EC4)\u4E0ERDD\u5143\u7D20\u7C7B\u578B(Int)\u53EF\u4EE5\u4E0D\u4E00\u81F4</span>
rdd<span class="token punctuation">.</span>aggregateByKey<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1 <span class="token operator">+</span> y<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u6CE8\u610F\uFF1A\u6B64\u65F6\u7684 y \u662F Int\uFF0C\u800C\u4E0D\u662F\u5143\u7EC4</span>
  <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;a=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">a</span></span><span class="token string">, b=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">b</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>_1 <span class="token operator">+</span> b<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> a<span class="token punctuation">.</span>_2 <span class="token operator">+</span> b<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toDouble <span class="token operator">/</span> x<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// \u5206\u533A\u5185\u7684\u5408\u5E76\u4E0E\u5206\u533A\u95F4\u7684\u5408\u5E76\uFF0C\u53EF\u4EE5\u91C7\u7528\u4E0D\u540C\u7684\u65B9\u5F0F; \u8FD9\u79CD\u65B9\u5F0F\u662F\u4F4E\u6548\u7684! </span>
rdd<span class="token punctuation">.</span>aggregateByKey<span class="token punctuation">(</span>scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>mutable<span class="token punctuation">.</span>ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> x<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>a <span class="token operator">++</span> b<span class="token punctuation">}</span> <span class="token comment">// \u4E24\u4E2A buffer \u76F8\u52A0\u4F7F\u7528 ++</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>v <span class="token keyword">=&gt;</span> v<span class="token punctuation">.</span>sum<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>v<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// combineByKey(\u7406\u89E3\u5C31\u884C) </span>
rdd<span class="token punctuation">.</span>combineByKey<span class="token punctuation">(</span>
  <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">Int</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;x=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">x</span></span><span class="token string">, y=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">y</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>_1<span class="token operator">+</span>y<span class="token punctuation">,</span> x<span class="token punctuation">.</span>_2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">Int</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;a=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">a</span></span><span class="token string">, b=</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">b</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span>a<span class="token punctuation">.</span>_1<span class="token operator">+</span>b<span class="token punctuation">.</span>_1<span class="token punctuation">,</span> a<span class="token punctuation">.</span>_2<span class="token operator">+</span>b<span class="token punctuation">.</span>_2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>toDouble<span class="token operator">/</span>x<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect

<span class="token comment">// subtractByKey \u51CF\u53BB\u76F8\u540C\u7684key</span>
<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
  <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;spark&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>subtractByKey<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Array()</span>

<span class="token comment">// subtractByKey</span>
<span class="token keyword">val</span> rdd <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> other <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd<span class="token punctuation">.</span>subtractByKey<span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Array((d,5))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><hr><p>\u8FD9\u4E48\u591A\u805A\u5408\u65B9\u6CD5\uFF0C\u7528\u54EA\u4E2A\u5462\uFF1F</p><p>\u7ED3\u8BBA: \u6548\u7387\u76F8\u7B49\u7528\u6700\u719F\u6089\u7684\u65B9\u6CD5; <code>groupByKey</code> \u5728\u4E00\u822C\u60C5\u51B5\u4E0B\u6548\u7387\u4F4E\uFF0C\u5C3D\u91CF\u5C11\u7528</p><blockquote><p>\u521D\u5B66: \u6700\u91CD\u8981\u7684\u662F\u8003\u8651\u5982\u4F55\u5B9E\u73B0; \u5982\u679C\u4F7F\u7528\u4E86 <code>groupByKey</code>\uFF0C\u5BFB\u627E\u66FF\u6362\u7684\u7B97\u5B50\u5B9E\u73B0;</p></blockquote><hr><p>\u4E3A\u4EC0\u4E48 <code>GroupByKey</code> \u6548\u7387\u4F4E\u5462 \uFF1F</p><p><img src="`+v+'" alt="\u4E24\u7C7B\u805A\u5408\u65B9\u5F0F\u6BD4\u8F83\u793A\u610F\u56FE"></p><p>groupByKey Shuffle\u8FC7\u7A0B\u4E2D\u4F20\u8F93\u7684\u6570\u636E\u91CF\u5927\uFF0C\u6548\u7387\u4F4E</p><p><img src="'+h+`" alt="GroupByKey\u6D41\u7A0B\u56FE"></p><blockquote><p>\u4E2A\u4EBA\u7406\u89E3\uFF1A\u6709\u4E9B\u60C5\u51B5 Shuffle \u4E0D\u53EF\u907F\u514D\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5C3D\u91CF\u51CF\u5C11 Shuffle \u7684\u6570\u636E\u91CF\uFF0C\u6765\u63D0\u9AD8\u6548\u7387\u3002</p></blockquote><p>3\u3001\u6392\u5E8F\u64CD\u4F5C</p><ul><li><code>sortByKey</code>: <code>sortByKey</code> \u51FD\u6570\u4F5C\u7528\u4E8EPairRDD\uFF0C\u5BF9Key\u8FDB\u884C\u6392\u5E8F\u3002</li></ul><p>\u5728 <code>org.apache.spark.rdd.OrderedRDDFunctions</code> \u4E2D\u5B9E\u73B0:</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> a <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize<span class="token punctuation">(</span>List<span class="token punctuation">(</span><span class="token string">&quot;zmn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;iteblog&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;397090770&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> b <span class="token operator">=</span> sc<span class="token punctuation">.</span>parallelize <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token namespace">a<span class="token punctuation">.</span>count<span class="token punctuation">.</span>toInt</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>zip<span class="token punctuation">(</span>b<span class="token punctuation">)</span>
c<span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect <span class="token comment">// Array((397090770,4), (com,3), (iteblog,2), (test,5), (zmn,1))</span>
c<span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span>collect <span class="token comment">// \u9ED8\u8BA4\u4F7F\u7528\u5347\u5E8F\u6392\u5E8F\uFF0Cfalse \u8868\u793A\u4F7F\u7528\u964D\u5E8F\u6392\u5E8F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>4\u3001join\u64CD\u4F5C</p><p><code>cogroup</code>/<code>join</code>/<code>leftOuterJoin</code>/<code>rightOuterJoin</code>/<code>fullOuterJoin</code></p><p><code>join</code> \u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Return an RDD containing all pairs of elements with matching keys in \`this\` and \`other\`. Each
 * pair of elements will be returned as a (k, (v1, v2)) tuple, where (k, v1) is in \`this\` and
 * (k, v2) is in \`other\`. Uses the given Partitioner to partition the output RDD.
 */</span>
<span class="token keyword">def</span> join<span class="token punctuation">[</span>W<span class="token punctuation">]</span><span class="token punctuation">(</span>other<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span>K<span class="token punctuation">,</span> W<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> partitioner<span class="token operator">:</span> Partitioner<span class="token punctuation">)</span><span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span>K<span class="token punctuation">,</span> <span class="token punctuation">(</span>V<span class="token punctuation">,</span> W<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>withScope <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>cogroup<span class="token punctuation">(</span>other<span class="token punctuation">,</span> partitioner<span class="token punctuation">)</span><span class="token punctuation">.</span>flatMapValues<span class="token punctuation">(</span> pair <span class="token keyword">=&gt;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>v <span class="token keyword">&lt;-</span> pair<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>iterator<span class="token punctuation">;</span> w <span class="token keyword">&lt;-</span> pair<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>iterator<span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token punctuation">(</span>v<span class="token punctuation">,</span> w<span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;Spark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;Hadoop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;Kylin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;Flink&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&quot;\u51AF\u4E03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u805A\u96C6\u4E24\u4E2A RDD (\u7C7B\u4F3C\u4E8E\u5168\u5916\u8FDE\u63A5)</span>
<span class="token keyword">val</span> rdd3 <span class="token operator">=</span> rdd1<span class="token punctuation">.</span>cogroup<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span>
rdd3<span class="token punctuation">.</span>collect<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>
<span class="token comment">// (6,(CompactBuffer(),CompactBuffer(\u51AF\u4E03)))</span>
<span class="token comment">// (1,(CompactBuffer(Spark),CompactBuffer()))</span>
<span class="token comment">// (2,(CompactBuffer(Hadoop),CompactBuffer()))</span>
<span class="token comment">// (3,(CompactBuffer(Kylin),CompactBuffer(\u674E\u56DB)))</span>
<span class="token comment">// (4,(CompactBuffer(Flink),CompactBuffer(\u738B\u4E94)))</span>
<span class="token comment">// (5,(CompactBuffer(),CompactBuffer(\u8D75\u516D)))</span>

rdd3<span class="token punctuation">.</span>filter<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> v1<span class="token punctuation">.</span>nonEmpty <span class="token operator">&amp;</span> v2<span class="token punctuation">.</span>nonEmpty<span class="token punctuation">}</span><span class="token punctuation">.</span>collect

<span class="token comment">// \u4EFF\u7167\u6E90\u7801\u5B9E\u73B0join\u64CD\u4F5C</span>
rdd3<span class="token punctuation">.</span>flatMapValues<span class="token punctuation">(</span> pair <span class="token keyword">=&gt;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>v <span class="token keyword">&lt;-</span> pair<span class="token punctuation">.</span>_1<span class="token punctuation">.</span>iterator<span class="token punctuation">;</span> w <span class="token keyword">&lt;-</span> pair<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>iterator<span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token punctuation">(</span>v<span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Spark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Hadoop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Scala&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;20K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;18K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;25K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;10K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

rdd1<span class="token punctuation">.</span>join<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect <span class="token comment">//Array((3,(Kylin,\u674E\u56DB)), (4,(Flink,\u738B\u4E94)))</span>

rdd1<span class="token punctuation">.</span>leftOuterJoin<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect 
<span class="token comment">// Array[(Int, (String, Option[String]))] = Array(</span>
<span class="token comment">// (1,(Spark,None)), (2,(Hadoop,None)), (3,(Kylin,Some(\u674E\u56DB))), (4,(Flink,Some(\u738B\u4E94))))</span>

rdd1<span class="token punctuation">.</span>rightOuterJoin<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array((6,(None,\u51AF\u4E03)), (3,(Some(Kylin),\u674E\u56DB)), (4,(Some(Flink),\u738B\u4E94)), (5,(None,\u8D75\u516D)))</span>

rdd1<span class="token punctuation">.</span>fullOuterJoin<span class="token punctuation">(</span>rdd2<span class="token punctuation">)</span><span class="token punctuation">.</span>collect
<span class="token comment">// Array((6,(None,Some(\u51AF\u4E03))), (1,(Some(Spark),None)), (2,(Some(Hadoop),None)), </span>
<span class="token comment">// (3,(Some(Kylin),Some(\u674E\u56DB))), (4,(Some(Flink),Some(\u738B, (5,(None,Some(\u8D75\u516D))))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="_3-7-3-action\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-7-3-action\u64CD\u4F5C" aria-hidden="true">#</a> 3.7.3 Action\u64CD\u4F5C</h4><p><code>collectAsMap</code>/<code>countByKey</code>/<code>lookup(key)</code></p><p>countByKey\u6E90\u7801:</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token comment">/**
 * Count the number of elements for each key, collecting the results to a local Map.
 *
 * @note This method should only be used if the resulting map is expected to be small, as
 * the whole thing is loaded into the driver&#39;s memory.
 * To handle very large results, consider using rdd.mapValues(_ =&gt; 1L).reduceByKey(_ + _), which
 * returns an RDD[T, Long] instead of a map.
 */</span>
<span class="token keyword">def</span> countByKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Map<span class="token punctuation">[</span>K<span class="token punctuation">,</span> <span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>withScope <span class="token punctuation">{</span>
  <span class="token keyword">self</span><span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>_ <span class="token keyword">=&gt;</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span><span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toMap
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>lookup(key): \u9AD8\u6548\u7684\u67E5\u627E\u65B9\u6CD5\uFF0C\u53EA\u67E5\u627E\u5BF9\u5E94\u5206\u533A\u7684\u6570\u636E(\u5982\u679CRDD\u6709\u5206\u533A\u5668\u7684\u8BDD)</p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">val</span> rdd1 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Spark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Hadoop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Scala&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> rdd2 <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span>Array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;20K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;18K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;25K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;10K&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
rdd1<span class="token punctuation">.</span>lookup<span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// WrappedArray(Spark, Java)</span>
rdd2<span class="token punctuation">.</span>lookup<span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span> <span class="token comment">// WrappedArray(20K)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-8-\u8F93\u5165\u4E0E\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#_3-8-\u8F93\u5165\u4E0E\u8F93\u51FA" aria-hidden="true">#</a> 3.8 \u8F93\u5165\u4E0E\u8F93\u51FA</h3><h4 id="_3-8-1-\u6587\u4EF6\u8F93\u5165\u4E0E\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#_3-8-1-\u6587\u4EF6\u8F93\u5165\u4E0E\u8F93\u51FA" aria-hidden="true">#</a> 3.8.1 \u6587\u4EF6\u8F93\u5165\u4E0E\u8F93\u51FA</h4><p>1\u3001\u6587\u672C\u6587\u4EF6</p><p>\u6570\u636E\u8BFB\u53D6: <code>textFile(String)</code>\u3002\u53EF\u6307\u5B9A\u5355\u4E2A\u6587\u4EF6\uFF0C\u652F\u6301\u901A\u914D\u7B26\u3002</p><p>\u8FD9\u6837\u5BF9\u4E8E\u5927\u91CF\u7684\u5C0F\u6587\u4EF6\u8BFB\u53D6\u6548\u7387\u5E76\u4E0D\u9AD8\uFF0C\u5E94\u8BE5\u4F7F\u7528 <code>wholeTextFiles</code></p><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">def</span> wholeTextFiles<span class="token punctuation">(</span>
    path<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span>
    minPartitions<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> defaultMinPartitions<span class="token punctuation">)</span><span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> withScope <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD4\u56DE\u503C <code>RDD[(String, String)]</code>\uFF0C\u5176\u4E2DKey\u662F\u6587\u4EF6\u7684\u540D\u79F0\uFF0CValue\u662F\u6587\u4EF6\u7684\u5185\u5BB9</p><p>\u6570\u636E\u4FDD\u5B58: <code>saveAsTextFile(String)</code>\u3002\u6307\u5B9A\u7684\u8F93\u51FA\u76EE\u5F55\u3002</p><p>2\u3001csv\u6587\u4EF6</p><p>\u8BFB\u53D6 CSV(Comma-Separated Values)/TSV(Tab-Separated Values) \u6570\u636E\u548C\u8BFB\u53D6 JSON \u6570\u636E\u76F8\u4F3C\uFF0C \u90FD\u9700\u8981\u5148\u628A\u6587\u4EF6\u5F53\u4F5C\u666E\u901A\u6587\u672C\u6587\u4EF6\u6765\u8BFB\u53D6\u6570\u636E\uFF0C\u7136\u540E\u901A\u8FC7\u5C06\u6BCF\u4E00\u884C\u8FDB\u884C\u89E3\u6790\u5B9E\u73B0\u5BF9CSV\u7684\u8BFB\u53D6\u3002</p><p>CSV/TSV \u6570\u636E\u7684\u8F93\u51FA\u4E5F\u662F\u9700\u8981\u5C06\u7ED3\u6784\u5316RDD\u901A\u8FC7\u76F8\u5173\u7684\u5E93\u8F6C\u6362\u6210\u5B57\u7B26\u4E32RDD\uFF0C\u7136\u540E\u4F7F\u7528 Spark \u7684\u6587\u672C\u6587\u4EF6 API \u5199\u51FA\u53BB\u3002</p><p>3\u3001json\u6587\u4EF6</p><p>\u5982\u679C JSON \u6587\u4EF6\u4E2D\u6BCF\u4E00\u884C\u5C31\u662F\u4E00\u4E2AJSON\u8BB0\u5F55\uFF0C\u90A3\u4E48\u53EF\u4EE5\u901A\u8FC7\u5C06JSON\u6587\u4EF6\u5F53\u505A\u6587\u672C\u6587\u4EF6\u6765\u8BFB\u53D6\uFF0C \u7136\u540E\u5229\u7528\u76F8\u5173\u7684JSON\u5E93\u5BF9\u6BCF\u4E00\u6761\u6570\u636E\u8FDB\u884CJSON\u89E3\u6790\u3002</p><p>JSON\u6570\u636E\u7684\u8F93\u51FA\u4E3B\u8981\u662F\u901A\u8FC7\u5728\u8F93\u51FA\u4E4B\u524D\u5C06\u7531\u7ED3\u6784\u5316\u6570\u636E\u7EC4\u6210\u7684 RDD \u8F6C\u4E3A\u5B57\u7B26\u4E32RDD\uFF0C\u7136\u540E\u4F7F\u7528 Spark \u7684\u6587\u672C\u6587\u4EF6 API \u5199\u51FA\u53BB\u3002</p><blockquote><p>json\u6587\u4EF6\u7684\u5904\u7406\u4F7F\u7528 SparkSQL \u6700\u4E3A\u7B80\u6D01\u3002</p></blockquote><p>4\u3001SequenceFile</p><p>SequenceFile\u6587\u4EF6\u662FHadoop\u7528\u6765\u5B58\u50A8\u4E8C\u8FDB\u5236\u5F62\u5F0F\u7684key-value\u5BF9\u800C\u8BBE\u8BA1\u7684\u4E00\u79CD\u5E73\u9762\u6587\u4EF6(Flat File)\u3002</p><p>Spark \u6709\u4E13\u95E8\u7528\u6765\u8BFB\u53D6 SequenceFile \u7684\u63A5\u53E3\u3002\u5728 SparkContext \u4E2D\uFF0C\u53EF\u4EE5\u8C03\u7528: <code>sequenceFile[keyClass, valueClass]</code>;</p><p>\u8C03\u7528 <code>saveAsSequenceFile(path)</code> \u4FDD\u5B58PairRDD\uFF0C\u7CFB\u7EDF\u5C06\u952E\u548C\u503C\u80FD\u591F\u81EA\u52A8\u8F6C\u4E3A Writable \u7C7B\u578B\u3002</p><p>5\u3001\u5BF9\u8C61\u6587\u4EF6</p><p>\u5BF9\u8C61\u6587\u4EF6\u662F\u5C06\u5BF9\u8C61\u5E8F\u5217\u5316\u540E\u4FDD\u5B58\u7684\u6587\u4EF6\uFF0C\u91C7\u7528Java\u7684\u5E8F\u5217\u5316\u673A\u5236\u3002</p><p>\u901A\u8FC7 <code>objectFile[k,v](path)</code> \u63A5\u6536\u4E00\u4E2A\u8DEF\u5F84\uFF0C\u8BFB\u53D6\u5BF9\u8C61\u6587\u4EF6\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684 RDD\uFF0C \u4E5F\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <code>saveAsObjectFile()</code> \u5B9E\u73B0\u5BF9\u5BF9\u8C61\u6587\u4EF6\u7684\u8F93\u51FA\u3002\u56E0\u4E3A\u662F\u5E8F\u5217\u5316\u6240\u4EE5\u8981\u6307\u5B9A\u7C7B\u578B\u3002</p><h4 id="_3-8-2-jdbc" tabindex="-1"><a class="header-anchor" href="#_3-8-2-jdbc" aria-hidden="true">#</a> 3.8.2 JDBC</h4><blockquote><p>\u8BE6\u89C1\u7EFC\u5408\u6848\u4F8B</p></blockquote><h3 id="_3-9-\u7B97\u5B50\u7EFC\u5408\u5E94\u7528\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3-9-\u7B97\u5B50\u7EFC\u5408\u5E94\u7528\u6848\u4F8B" aria-hidden="true">#</a> 3.9 \u7B97\u5B50\u7EFC\u5408\u5E94\u7528\u6848\u4F8B</h3><h4 id="_1\u3001wordcount-scala" tabindex="-1"><a class="header-anchor" href="#_1\u3001wordcount-scala" aria-hidden="true">#</a> 1\u3001WordCount - scala</h4><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> ScalaWordCount <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token comment">// val conf = new SparkConf().setMaster(&quot;local[*]&quot;).setAppName(&quot;ScalaWordCount&quot;)</span>
    <span class="token comment">// \u6253\u5305\u8FD0\u884C\u65F6\uFF0CsetMaster() \u4E5F\u53EF\u4EE5\u5220\u9664\uFF0C\u5728\u4EFB\u52A1\u63D0\u4EA4\u65F6\u6307\u5B9A\u8FD0\u884C\u65B9\u5F0F</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">&quot;ScalaWordCount&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    <span class="token comment">// \u8BBE\u7F6E\u65E5\u5FD7\u9694\u79BB\u7EA7\u522B</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// 2.\u8BFB\u6587\u4EF6(\u672C\u5730\u6587\u4EF6\u65B9\u5F0F)</span>
    <span class="token comment">// val lines: RDD[String] = sc.textFile(&quot;file:////data/wc.dat&quot;)</span>
    <span class="token comment">// [\u96C6\u7FA4\u8FD0\u884C\u65F6\uFF0C\u6587\u4EF6\u8DEF\u5F84\u53EF\u4EE5\u4F5C\u4E3A\u53C2\u6570]</span>
    <span class="token keyword">val</span> lines<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span>args<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 3.RDD\u8F6C\u6362</span>
    <span class="token keyword">val</span> words<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> lines<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>line <span class="token keyword">=&gt;</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> wordsMap<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> words<span class="token punctuation">.</span>map<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> result<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> wordsMap<span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
    <span class="token comment">// 4.\u8F93\u51FA</span>
    result<span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>
    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 6.\u6253\u5305\uFF0C\u4F7F\u7528 Spark-Submit \u63D0\u4EA4\u96C6\u7FA4\u8FD0\u884C</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u63D0\u4EA4\u672C\u5730\u6267\u884C\u547D\u4EE4</span>
spark-submit --master local<span class="token punctuation">[</span>*<span class="token punctuation">]</span> --class com.zmn.spark.core.ScalaWordCount <span class="token punctuation">\\</span>
  original-spark-test-101-1.0-SNAPSHOT.jar /wcinput/*
<span class="token comment"># \u63D0\u4EA4 yarn \u6267\u884C</span>
spark-submit --master <span class="token function">yarn</span> --class com.zmn.spark.core.ScalaWordCount <span class="token punctuation">\\</span>
  original-spark-test-101-1.0-SNAPSHOT.jar /wcinput/*
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_2\u3001wordcount-java" tabindex="-1"><a class="header-anchor" href="#_2\u3001wordcount-java" aria-hidden="true">#</a> 2\u3001WordCount - java</h4><p>Spark\u63D0\u4F9B\u4E86: Scala\u3001Java\u3001Python\u3001R\u8BED\u8A00\u7684API;</p><p>\u5BF9 Scala \u548C Java \u8BED\u8A00\u7684\u652F\u6301\u6700\u597D;</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaWordCount</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
        <span class="token class-name">SparkConf</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkConf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">&quot;JavaWordCount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMaster</span><span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JavaSparkContext</span> jsc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaSparkContext</span><span class="token punctuation">(</span>conf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        jsc<span class="token punctuation">.</span><span class="token function">setLogLevel</span><span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u65E5\u5FD7\u9694\u79BB\u7EA7\u522B</span>
        <span class="token comment">// 2.\u751F\u6210 RDD</span>
        <span class="token class-name">JavaRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> lines <span class="token operator">=</span> jsc<span class="token punctuation">.</span><span class="token function">textFile</span><span class="token punctuation">(</span><span class="token string">&quot;file:////data/wc.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.RDD\u8F6C\u6362</span>
        <span class="token class-name">JavaRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words <span class="token operator">=</span> lines<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> wordMap <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">mapToPair</span><span class="token punctuation">(</span>word <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Tuple2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JavaPairRDD</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> wordMap<span class="token punctuation">.</span><span class="token function">reduceByKey</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">sum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4.\u8F93\u51FA\u7ED3\u679C</span>
        result<span class="token punctuation">.</span><span class="token function">foreach</span><span class="token punctuation">(</span>ele <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CE8\u610F\uFF1A\u6B64\u5904\u4E0D\u652F\u6301\u65B9\u6CD5\u5F15\u7528</span>
        <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
        jsc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>Spark\u5165\u53E3\u70B9: <code>JavaSparkContext</code></li><li>Value-RDD: <code>JavaRDD</code></li><li>key-value RDD: <code>JavaPairRDD</code></li></ul><p>JavaRDD \u548C JavaPairRDD\u8F6C\u6362:</p><ul><li>JavaRDD =&gt; JavaPairRDD: \u901A\u8FC7 <code>mapToPair</code> \u51FD\u6570</li><li>JavaPairRDD =&gt; JavaRDD: \u901A\u8FC7 <code>map</code> \u51FD\u6570\u8F6C\u6362</li></ul><blockquote><p>\u614E\u7528 Java \u65B9\u6CD5\u5F15\u7528\u3002</p></blockquote><h4 id="_3\u3001\u8BA1\u7B97\u5706\u5468\u7387" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u8BA1\u7B97\u5706\u5468\u7387" aria-hidden="true">#</a> 3\u3001\u8BA1\u7B97\u5706\u5468\u7387</h4><blockquote><p>\u8499\u7279\u5361\u6D1B\u6CD5\uFF1A</p><p>\u8BBE\u5706\u7684\u9762\u79EF\u4E3A pi, \u6B63\u65B9\u5F62\u7684\u9762\u79EF\u4E3A 4; \u4E00\u5171\u5C04\u51FB\u7684\u6B21\u6570\u4E3A N, \u5C04\u51FB\u843D\u5728\u5355\u4F4D\u5143\u7684\u6B21\u6570\u4E3A n</p><p><code>4 / pi = N /n</code> =&gt; <code>pi = 4 * n / N</code></p></blockquote><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> SparkPi <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5206\u533A\u6570</span>
    <span class="token keyword">val</span> slice<span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> args<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toInt <span class="token keyword">else</span> <span class="token number">10</span>

    <span class="token keyword">val</span> N <span class="token operator">=</span> <span class="token number">10000000</span>
    <span class="token comment">// 2.\u751F\u6210RDD</span>
    <span class="token comment">// 3.RDD\u8F6C\u6362</span>
    <span class="token keyword">val</span> n<span class="token operator">:</span> <span class="token builtin">Double</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>makeRDD<span class="token punctuation">(</span><span class="token number">1</span> to N<span class="token punctuation">,</span> numSlices <span class="token operator">=</span> slice<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span>random<span class="token punctuation">,</span> random<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> x <span class="token operator">+</span> y <span class="token operator">*</span> y <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 4.\u8F93\u51FA</span>
    <span class="token keyword">val</span> pi <span class="token operator">=</span> <span class="token number">4.0</span> <span class="token operator">*</span> n <span class="token operator">/</span> N
    println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;pi = </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">pi</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h4 id="_4\u3001\u5E7F\u544A\u6570\u636E\u7EDF\u8BA1" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u5E7F\u544A\u6570\u636E\u7EDF\u8BA1" aria-hidden="true">#</a> 4\u3001\u5E7F\u544A\u6570\u636E\u7EDF\u8BA1</h4><p>\u6570\u636E\u683C\u5F0F:</p><table><thead><tr><th>\u65F6\u95F4\u70B9</th><th>\u7701\u4EFD</th><th>\u57CE\u5E02</th><th>\u7528\u6237</th><th>\u5E7F\u544A</th></tr></thead><tbody><tr><td><code>timestamp</code></td><td><code>province</code></td><td><code>city</code></td><td><code>userid</code></td><td><code>adid</code></td></tr></tbody></table><p>\u9700\u6C42:</p><ol><li>\u7EDF\u8BA1\u6BCF\u4E00\u4E2A\u7701\u4EFD\u70B9\u51FBTOP3\u7684\u5E7F\u544AID</li><li>\u7EDF\u8BA1\u6BCF\u4E00\u4E2A\u7701\u4EFD\u6BCF\u4E00\u4E2A\u5C0F\u65F6\u7684TOP3\u5E7F\u544AID</li></ol><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> AdStat <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 2.\u751F\u6210RDD</span>
    <span class="token keyword">val</span> lines<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span>
      <span class="token string">&quot;file:////Users/faustine/Code/IdeaProjects/gitee/spark-test/data/advert.log&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// 3.RDD\u8F6C\u6362</span>
    <span class="token comment">// 1. \u7EDF\u8BA1\u6BCF\u4E00\u4E2A\u7701\u4EFD\u70B9\u51FBTOP3\u7684\u5E7F\u544AID</span>
    <span class="token keyword">val</span> top <span class="token operator">=</span> <span class="token number">3</span>

    <span class="token keyword">val</span> stat1<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> lines<span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
      <span class="token keyword">val</span> fields<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fields<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    stat1<span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span>province<span class="token punctuation">,</span> adId<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>province<span class="token punctuation">,</span> adId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>province<span class="token punctuation">,</span> addId<span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>province<span class="token punctuation">,</span> <span class="token punctuation">(</span>addId<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>buf <span class="token keyword">=&gt;</span> buf<span class="token punctuation">.</span>toList<span class="token punctuation">.</span>sortWith<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_2 <span class="token operator">&gt;</span> _<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>take<span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_1<span class="token punctuation">)</span><span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    <span class="token comment">// 2. \u7EDF\u8BA1\u6BCF\u4E00\u4E2A\u7701\u4EFD\u6BCF\u4E00\u4E2A\u5C0F\u65F6\u7684TOP3\u5E7F\u544AID</span>
    lines<span class="token punctuation">.</span>map<span class="token punctuation">{</span>line <span class="token keyword">=&gt;</span>
      <span class="token keyword">val</span> fields<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span>getHour<span class="token punctuation">(</span>fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fields<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fields<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>hour<span class="token punctuation">,</span> province<span class="token punctuation">,</span> adId<span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>province<span class="token punctuation">,</span> hour<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>adId<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token punctuation">.</span>groupByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>mapValues<span class="token punctuation">(</span>buf <span class="token keyword">=&gt;</span> buf<span class="token punctuation">.</span>toList<span class="token punctuation">.</span>sortWith<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_2 <span class="token operator">&gt;</span> _<span class="token punctuation">.</span>_2<span class="token punctuation">)</span><span class="token punctuation">.</span>take<span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_1<span class="token punctuation">)</span><span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    <span class="token comment">// 4.\u8F93\u51FA</span>
    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">def</span> getHour<span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Int</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> DateTime<span class="token punctuation">(</span>str<span class="token punctuation">.</span>toLong<span class="token punctuation">)</span>
    dt<span class="token punctuation">.</span>getHourOfDay
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p>\u5728Java 8\u51FA\u73B0\u524D\u7684\u5F88\u957F\u65F6\u95F4\u5185\u6210\u4E3AJava\u4E2D\u65E5\u671F\u65F6\u95F4\u5904\u7406\u7684\u4E8B\u5B9E\u6807\u51C6\uFF0C\u7528\u6765\u5F25\u8865JDK\u7684\u4E0D\u8DB3\u3002</p><p>Joda \u7C7B\u5177\u6709\u4E0D\u53EF\u53D8\u6027\uFF0C\u5B83\u4EEC\u7684\u5B9E\u4F8B\u65E0\u6CD5\u88AB\u4FEE\u6539\u3002(\u4E0D\u53EF\u53D8\u7C7B\u7684\u4E00\u4E2A\u4F18\u70B9\u5C31\u662F\u5B83\u4EEC\u662F\u7EBF\u7A0B\u5B89\u5168\u7684)</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>joda-time<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>\u5728 Spark Core \u7A0B\u5E8F\u4E2D\u4F7F\u7528\u65F6\u95F4\u65E5\u671F\u7C7B\u578B\u65F6\uFF0C\u4E0D\u8981\u4F7F\u7528 Java 8 \u4EE5\u524D\u7684\u65F6\u95F4\u65E5\u671F\u7C7B\u578B\uFF0C \u7EBF\u7A0B\u4E0D\u5B89\u5168\u3002</p></blockquote><h4 id="_5\u3001\u627E\u5171\u540C\u597D\u53CB" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u627E\u5171\u540C\u597D\u53CB" aria-hidden="true">#</a> 5\u3001\u627E\u5171\u540C\u597D\u53CB</h4><p>\u539F\u59CB\u6570\u636E:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>100, 200 300 400 500 600
200, 100 300 400
300, 100 200 400 500
400, 100 200 300
500, 100 300
600, 100
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u7B2C\u4E00\u5217\u8868\u793A\u7528\u6237\uFF0C\u540E\u9762\u7684\u8868\u793A\u8BE5\u7528\u6237\u7684\u597D\u53CB</p></blockquote><p>\u8981\u6C42:</p><ol><li>\u67E5\u627E\u4E24\u4E24\u7528\u6237\u7684\u5171\u540C\u597D\u53CB</li><li>\u6700\u540E\u7684\u7ED3\u679C\u6309\u524D\u4E24\u4E2Aid\u53F7\u6709\u5E8F\u6392\u5E8F</li></ol><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> FindFriends <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> lines<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;file:////Users/faustine/Code/IdeaProjects/gitee/spark-test/data/fields.dat&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> friendsRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> lines<span class="token punctuation">.</span>map <span class="token punctuation">{</span> line <span class="token keyword">=&gt;</span>
      <span class="token keyword">val</span> fields<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">val</span> userId<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> fields<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>trim
      <span class="token keyword">val</span> friends<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> fields<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>trim<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>userId<span class="token punctuation">,</span> friends<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u65B9\u6CD5\u4E00\uFF1A\u6838\u5FC3\u601D\u60F3\u5C31\u662F\u5229\u7528\u7B1B\u5361\u5C14\u79EF\u6C42\u4E24\u4E24\u7684\u597D\u53CB\uFF0C\u7136\u540E\u53BB\u9664\u591A\u4F59\u7684\u6570\u636E</span>
    friendsRDD<span class="token punctuation">.</span>cartesian<span class="token punctuation">(</span>friendsRDD<span class="token punctuation">)</span>
      <span class="token comment">//.filter(x =&gt; x._1._1 &lt; x._2._1)</span>
      <span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>id1<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>id2<span class="token punctuation">,</span> _<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> id1 <span class="token operator">&gt;</span> id2 <span class="token punctuation">}</span>
      <span class="token punctuation">.</span>map <span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>id1<span class="token punctuation">,</span> friends1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>id2<span class="token punctuation">,</span> friends2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">=&gt;</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>id1<span class="token punctuation">,</span> id2<span class="token punctuation">)</span><span class="token punctuation">,</span> friends1<span class="token punctuation">.</span>toSet <span class="token operator">&amp;</span> friends2<span class="token punctuation">.</span>toSet<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">.</span>filter<span class="token punctuation">(</span>x <span class="token keyword">=&gt;</span> x<span class="token punctuation">.</span>_2<span class="token punctuation">.</span>nonEmpty<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    println<span class="token punctuation">(</span><span class="token string">&quot;------------------------------------------------&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// \u65B9\u6CD5\u4E8C\uFF1A\u6D88\u9664\u7B1B\u5361\u5C14\u79EF (\u66F4\u9AD8\u6548)</span>
    <span class="token comment">// \u6838\u5FC3\u601D\u60F3\uFF1A\u5C06\u6570\u636E\u53D8\u5F62\uFF0C\u627E\u5230\u4E24\u4E24\u7684\u597D\u53CB\uFF0C\u518D\u505A\u6570\u636E\u7684\u5408\u5E76</span>
    friendsRDD<span class="token punctuation">.</span>flatMapValues<span class="token punctuation">(</span>friends <span class="token keyword">=&gt;</span> friends<span class="token punctuation">.</span>combinations<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// key\u548Cvalue\u4F4D\u7F6E\u4EA4\u6362;\u53D8\u6362\u6570\u636E\u7C7B\u578B</span>
      <span class="token comment">//.map(x =&gt; (x._2.mkString(&quot;&amp;&quot;), Set(x._1)))</span>
      <span class="token comment">// \u8FD9\u79CD\u5199\u6CD5\u53EF\u89C6\u5316\u66F4\u5F3A</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span>mkString<span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Set<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">|</span> _<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>sortByKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><blockquote><p><code>combinations(n)</code>: \u6C42 n \u4E2A\u5143\u7D20\u7684\u7EC4\u5408</p></blockquote><h4 id="_6\u3001super-wordcount" tabindex="-1"><a class="header-anchor" href="#_6\u3001super-wordcount" aria-hidden="true">#</a> 6\u3001Super WordCount</h4><p>\u8981\u6C42: \u5C06\u5355\u8BCD\u5168\u90E8\u8F6C\u6362\u4E3A\u5C0F\u5199\uFF0C\u53BB\u9664\u6807\u70B9\u7B26\u53F7(\u96BE)\uFF0C\u53BB\u9664\u505C\u7528\u8BCD(\u96BE); \u6700\u540E\u6309\u7167 count \u503C\u964D\u5E8F\u4FDD\u5B58\u5230\u6587\u4EF6\uFF0C\u540C\u65F6\u5C06\u5168\u90E8\u7ED3\u679C\u4FDD\u5B58\u5230MySQL(\u96BE); \u6807\u70B9\u7B26\u53F7\u548C\u505C\u7528\u8BCD\u53EF\u4EE5\u81EA\u5B9A\u4E49\u3002</p><p>\u505C\u7528\u8BCD: \u8BED\u8A00\u4E2D\u5305\u542B\u5F88\u591A\u529F\u80FD\u8BCD\u3002\u4E0E\u5176\u4ED6\u8BCD\u76F8\u6BD4\uFF0C\u529F\u80FD\u8BCD\u6CA1\u6709\u4EC0\u4E48\u5B9E\u9645\u542B\u4E49\u3002 \u6700\u666E\u904D\u7684\u529F\u80FD\u8BCD\u662F\u9650\u5B9A\u8BCD(the\u3001a\u3001an\u3001that\u3001those)\uFF0C\u4ECB\u8BCD(on\u3001in\u3001to\u3001from\u3001 over\u7B49)\u3001\u4EE3\u8BCD\u3001\u6570\u91CF\u8BCD\u7B49\u3002</p><p><code>Array[(String, Int)]</code> =&gt; scala jdbc =&gt; MySQL</p><h5 id="\u57FA\u672C\u529F\u80FD\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u529F\u80FD\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u672C\u529F\u80FD\u5B9E\u73B0</h5><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> SuperWordCount <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// RDD\u8F6C\u6362</span>
    <span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;file:////Users/faustine/Code/IdeaProjects/gitee/spark-test/data/swc.dat&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u505C\u7528\u8BCD\u8868</span>
    <span class="token keyword">val</span> stopWords <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;in on to from by a an the is are were was i we you &quot;</span> <span class="token operator">+</span>
      <span class="token string">&quot;your he his some any of as can it each&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> punctuation <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;[\\\\)\\\\.,:;&#39;!\\\\?]&quot;&quot;&quot;</span>

    lines<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>_<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>toLowerCase<span class="token punctuation">)</span>
      <span class="token comment">// \u66FF\u6362\u6807\u70B9\u7B26\u53F7</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>replaceAll<span class="token punctuation">(</span>punctuation<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// \u8FC7\u6EE4\u505C\u7528\u8BCD</span>
      <span class="token punctuation">.</span>filter<span class="token punctuation">(</span>word <span class="token keyword">=&gt;</span> <span class="token operator">!</span>stopWords<span class="token punctuation">.</span>contains<span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> word<span class="token punctuation">.</span>trim<span class="token punctuation">.</span>nonEmpty<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
      <span class="token comment">// \u6839\u636E value\u6392\u5E8F\uFF0C\u964D\u5E8F</span>
      <span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_2<span class="token punctuation">,</span> ascending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>collect<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span>

    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h5 id="scala-jdbc-\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#scala-jdbc-\u7F16\u7A0B" aria-hidden="true">#</a> Scala JDBC \u7F16\u7A0B</h5><p>\u6DFB\u52A0\u4F9D\u8D56</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.44<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> JdbcDemo <span class="token punctuation">{</span>
  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u7ED3\u679C\u96C6</span>
    <span class="token keyword">val</span> str <span class="token operator">=</span> <span class="token string">&quot;hadoop spark java scala hbase hive sqoop hue tez atlas datax grinffin zk kafka&quot;</span>
    <span class="token keyword">val</span> result<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> str <span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zipWithIndex
    <span class="token comment">// \u5B9A\u4E49\u53C2\u6570</span>
    <span class="token keyword">val</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://linux123:3306/ebiz?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&quot;</span>
    <span class="token keyword">val</span> username <span class="token operator">=</span> <span class="token string">&quot;hive&quot;</span>
    <span class="token keyword">val</span> password <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span>

    <span class="token comment">// JDBC \u4FDD\u5B58\u6570\u636E</span>
    <span class="token keyword">var</span> conn<span class="token operator">:</span> Connection <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">var</span> stmt<span class="token operator">:</span> PreparedStatement <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">val</span> sql <span class="token operator">=</span> <span class="token string">&quot;insert into wordcount values (?, ?)&quot;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      conn <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span>getConnection<span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>
      stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span>prepareStatement<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
      result<span class="token punctuation">.</span>foreach<span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span>
        stmt<span class="token punctuation">.</span>setString<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
        stmt<span class="token punctuation">.</span>setInt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
        stmt<span class="token punctuation">.</span>executeUpdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> e<span class="token operator">:</span> Exception <span class="token keyword">=&gt;</span> e<span class="token punctuation">.</span>printStackTrace<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> stmt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h5 id="\u6700\u7EC8\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6700\u7EC8\u5B9E\u73B0" aria-hidden="true">#</a> \u6700\u7EC8\u5B9E\u73B0</h5><div class="language-scala ext-scala line-numbers-mode"><pre class="language-scala"><code><span class="token keyword">object</span> SuperWordCountJdbc <span class="token punctuation">{</span>

  <span class="token comment">// \u505C\u7528\u8BCD\u8868</span>
  <span class="token keyword">private</span> <span class="token keyword">val</span> stopWords <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;in on to from by a an the is are were was i we you &quot;</span> <span class="token operator">+</span>
    <span class="token string">&quot;your he his some any of as can it each&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span>

  <span class="token keyword">private</span> <span class="token keyword">val</span> punctuation <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;[\\\\)\\\\.,:;&#39;!\\\\?]&quot;&quot;&quot;</span>

  <span class="token comment">// \u5B9A\u4E49\u53C2\u6570</span>
  <span class="token keyword">private</span> <span class="token keyword">val</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://linux123:3306/ebiz?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&quot;</span>
  <span class="token keyword">private</span> <span class="token keyword">val</span> username <span class="token operator">=</span> <span class="token string">&quot;hive&quot;</span>
  <span class="token keyword">private</span> <span class="token keyword">val</span> password <span class="token operator">=</span> <span class="token string">&quot;12345678&quot;</span>

  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.\u521B\u5EFA SparkContext</span>
    <span class="token keyword">val</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>getClass<span class="token punctuation">.</span>getSimpleName<span class="token punctuation">.</span>init<span class="token punctuation">)</span>
    <span class="token keyword">val</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> SparkContext<span class="token punctuation">(</span>conf<span class="token punctuation">)</span>
    sc<span class="token punctuation">.</span>setLogLevel<span class="token punctuation">(</span><span class="token string">&quot;WARN&quot;</span><span class="token punctuation">)</span>

    <span class="token comment">// RDD\u8F6C\u6362</span>
    <span class="token keyword">val</span> lines <span class="token operator">=</span> sc<span class="token punctuation">.</span>textFile<span class="token punctuation">(</span><span class="token string">&quot;file:////Users/faustine/Code/IdeaProjects/gitee/spark-test/data/swc.dat&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">val</span> resultRDD<span class="token operator">:</span> RDD<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> lines<span class="token punctuation">.</span>flatMap<span class="token punctuation">(</span>_<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>toLowerCase<span class="token punctuation">)</span>
      <span class="token comment">// \u66FF\u6362\u6807\u70B9\u7B26\u53F7</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span>_<span class="token punctuation">.</span>replaceAll<span class="token punctuation">(</span>punctuation<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// \u8FC7\u6EE4\u505C\u7528\u8BCD</span>
      <span class="token punctuation">.</span>filter<span class="token punctuation">(</span>word <span class="token keyword">=&gt;</span> <span class="token operator">!</span>stopWords<span class="token punctuation">.</span>contains<span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> word<span class="token punctuation">.</span>trim<span class="token punctuation">.</span>nonEmpty<span class="token punctuation">)</span>
      <span class="token punctuation">.</span>map<span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span>reduceByKey<span class="token punctuation">(</span>_ <span class="token operator">+</span> _<span class="token punctuation">)</span>
      <span class="token comment">// \u6839\u636E value\u6392\u5E8F\uFF0C\u964D\u5E8F</span>
      <span class="token punctuation">.</span>sortBy<span class="token punctuation">(</span>_<span class="token punctuation">.</span>_2<span class="token punctuation">,</span> ascending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

    <span class="token comment">// \u7ED3\u679C\u8F93\u51FA</span>
    resultRDD<span class="token punctuation">.</span>saveAsTextFile<span class="token punctuation">(</span><span class="token string">&quot;file:////Users/faustine/Code/IdeaProjects/gitee/spark-test/data/superwc&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8F93\u51FA\u5230\u6570\u636E\u5E93</span>
    resultRDD<span class="token punctuation">.</span>foreachPartition<span class="token punctuation">(</span>saveAsMysql<span class="token punctuation">)</span>
    <span class="token comment">// 5.\u5173\u95ED SparkContext</span>
    sc<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">def</span> saveAsMysql<span class="token punctuation">(</span>iter<span class="token operator">:</span> Iterator<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> conn<span class="token operator">:</span> Connection <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">var</span> stmt<span class="token operator">:</span> PreparedStatement <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">val</span> sql <span class="token operator">=</span> <span class="token string">&quot;insert into wordcount values (?, ?)&quot;</span>

      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        conn <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span>getConnection<span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>
        stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span>prepareStatement<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>
        iter<span class="token punctuation">.</span>foreach <span class="token punctuation">{</span> <span class="token keyword">case</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span>
          stmt<span class="token punctuation">.</span>setString<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
          stmt<span class="token punctuation">.</span>setInt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
          stmt<span class="token punctuation">.</span>executeUpdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> e<span class="token operator">:</span> Exception <span class="token keyword">=&gt;</span> e<span class="token punctuation">.</span>printStackTrace<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>stmt <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> stmt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><p>\u5907\u6CE8:</p><p>SparkSQL\u6709\u65B9\u4FBF\u7684\u8BFB\u5199MySQL\u7684\u65B9\u6CD5\uFF0C\u7ED9\u53C2\u6570\u76F4\u63A5\u8C03\u7528\u5373\u53EF; \u4F46\u4EE5\u4E0A\u638C\u63E1\u4EE5\u4E0A\u65B9\u6CD5\u975E\u5E38\u6709\u5FC5\u8981\uFF0C\u56E0\u4E3ASparkSQL\u4E0D\u662F\u652F\u6301\u6240\u6709\u7684\u7C7B\u578B\u7684\u6570\u636E\u5E93</p>`,158);function S(A,C){const p=o("ExternalLinkIcon");return e(),c(u,null,[f,n("blockquote",null,[n("p",null,[w,n("a",x,[R,l(p)])])]),_],64)}var P=t(q,[["render",S],["__file","index.html.vue"]]);export{P as default};
